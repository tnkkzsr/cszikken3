Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FUNCTION
    INTERVAL
    LBRACKET
    RBRACKET

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM IDENT SEMICOLON outblock PERIOD
Rule 2     outblock -> var_decl_part subprog_decl_part outblock_act statement
Rule 3     outblock_act -> <empty>
Rule 4     var_decl_part -> var_decl_list SEMICOLON
Rule 5     var_decl_part -> <empty>
Rule 6     var_decl_list -> var_decl_list SEMICOLON var_decl
Rule 7     var_decl_list -> var_decl
Rule 8     var_decl -> VAR id_list
Rule 9     subprog_decl_part -> subprog_decl_list SEMICOLON
Rule 10    subprog_decl_part -> <empty>
Rule 11    subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl
Rule 12    subprog_decl_list -> subprog_decl
Rule 13    subprog_decl -> proc_decl
Rule 14    proc_decl -> PROCEDURE proc_name LPAREN RPAREN SEMICOLON inblock
Rule 15    proc_name -> IDENT
Rule 16    inblock -> var_decl_part statement
Rule 17    statement_list -> statement_list SEMICOLON statement
Rule 18    statement_list -> statement
Rule 19    statement -> assignment_statement
Rule 20    statement -> if_statement
Rule 21    statement -> while_statement
Rule 22    statement -> for_statement
Rule 23    statement -> proc_call_statement
Rule 24    statement -> null_statement
Rule 25    statement -> block_statement
Rule 26    statement -> read_statement
Rule 27    statement -> write_statement
Rule 28    assignment_statement -> IDENT ASSIGN expression
Rule 29    act_assign_ident -> <empty>
Rule 30    if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
Rule 31    act_generate_labels -> <empty>
Rule 32    act_insert_br -> <empty>
Rule 33    act_insert_label1 -> <empty>
Rule 34    act_insert_label2 -> <empty>
Rule 35    act_insert_label3 -> <empty>
Rule 36    act_insert_jump1 -> <empty>
Rule 37    act_insert_jump2 -> <empty>
Rule 38    act_insert_jump3 -> <empty>
Rule 39    else_statement -> ELSE statement
Rule 40    else_statement -> <empty>
Rule 41    while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
Rule 42    act_insert_br_while -> <empty>
Rule 43    for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
Rule 44    act_insert_br_for -> <empty>
Rule 45    act_increment_itr -> <empty>
Rule 46    for_act1 -> <empty>
Rule 47    proc_call_statement -> proc_call_name LPAREN RPAREN
Rule 48    proc_call_name -> IDENT
Rule 49    block_statement -> BEGIN statement_list END
Rule 50    act_lookup_prev_ident -> <empty>
Rule 51    read_statement -> READ LPAREN IDENT RPAREN
Rule 52    write_statement -> WRITE LPAREN expression RPAREN
Rule 53    null_statement -> <empty>
Rule 54    condition -> expression EQ expression
Rule 55    condition -> expression NEQ expression
Rule 56    condition -> expression LT expression
Rule 57    condition -> expression LE expression
Rule 58    condition -> expression GT expression
Rule 59    condition -> expression GE expression
Rule 60    expression -> term
Rule 61    expression -> MINUS term
Rule 62    expression -> expression PLUS term
Rule 63    expression -> expression MINUS term
Rule 64    term -> factor
Rule 65    term -> term MULT factor
Rule 66    term -> term DIV factor
Rule 67    factor -> var_name
Rule 68    factor -> number
Rule 69    factor -> LPAREN expression RPAREN
Rule 70    var_name -> IDENT
Rule 71    number -> NUMBER
Rule 72    id_list -> IDENT
Rule 73    id_list -> id_list COMMA IDENT
Rule 74    act_insert_prev_var_ident -> <empty>
Rule 75    act_insert_prev_proc_ident -> <empty>
Rule 76    act_set_varscope_local -> <empty>
Rule 77    act_set_varscope_global -> act_delete_local_ident
Rule 78    act_delete_local_ident -> <empty>

Terminals, with rules where they appear

ASSIGN               : 28 43
BEGIN                : 49
COMMA                : 73
DIV                  : 66
DO                   : 41 43
ELSE                 : 39
END                  : 49
EQ                   : 54
FOR                  : 43
FUNCTION             : 
GE                   : 59
GT                   : 58
IDENT                : 1 15 28 43 48 51 70 72 73
IF                   : 30
INTERVAL             : 
LBRACKET             : 
LE                   : 57
LPAREN               : 14 47 51 52 69
LT                   : 56
MINUS                : 61 63
MULT                 : 65
NEQ                  : 55
NUMBER               : 71
PERIOD               : 1
PLUS                 : 62
PROCEDURE            : 14
PROGRAM              : 1
RBRACKET             : 
READ                 : 51
RPAREN               : 14 47 51 52 69
SEMICOLON            : 1 4 6 9 11 14 17
THEN                 : 30
TO                   : 43
VAR                  : 8
WHILE                : 41
WRITE                : 52
error                : 

Nonterminals, with rules where they appear

act_assign_ident     : 43
act_delete_local_ident : 77
act_generate_labels  : 30 41 43
act_increment_itr    : 43
act_insert_br        : 30
act_insert_br_for    : 43
act_insert_br_while  : 41
act_insert_jump1     : 41 41 43 43
act_insert_jump2     : 
act_insert_jump3     : 30 30
act_insert_label1    : 30 41 43
act_insert_label2    : 30 41 43
act_insert_label3    : 30 41 43
act_insert_prev_proc_ident : 
act_insert_prev_var_ident : 
act_lookup_prev_ident : 43
act_set_varscope_global : 
act_set_varscope_local : 
assignment_statement : 19
block_statement      : 25
condition            : 30 41
else_statement       : 30
expression           : 28 43 43 52 54 54 55 55 56 56 57 57 58 58 59 59 62 63 69
factor               : 64 65 66
for_act1             : 
for_statement        : 22
id_list              : 8 73
if_statement         : 20
inblock              : 14
null_statement       : 24
number               : 68
outblock             : 1
outblock_act         : 2
proc_call_name       : 47
proc_call_statement  : 23
proc_decl            : 13
proc_name            : 14
program              : 0
read_statement       : 26
statement            : 2 16 17 18 30 39 41 43
statement_list       : 17 49
subprog_decl         : 11 12
subprog_decl_list    : 9 11
subprog_decl_part    : 2
term                 : 60 61 62 63 65 66
var_decl             : 6 7
var_decl_list        : 4 6
var_decl_part        : 2 16
var_name             : 67
while_statement      : 21
write_statement      : 27

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM IDENT SEMICOLON outblock PERIOD

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . IDENT SEMICOLON outblock PERIOD

    IDENT           shift and go to state 3


state 3

    (1) program -> PROGRAM IDENT . SEMICOLON outblock PERIOD

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM IDENT SEMICOLON . outblock PERIOD
    (2) outblock -> . var_decl_part subprog_decl_part outblock_act statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 5 (var_decl_part -> .)
    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    PERIOD          reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    outblock                       shift and go to state 5
    var_decl_part                  shift and go to state 6
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 5

    (1) program -> PROGRAM IDENT SEMICOLON outblock . PERIOD

    PERIOD          shift and go to state 10


state 6

    (2) outblock -> var_decl_part . subprog_decl_part outblock_act statement
    (9) subprog_decl_part -> . subprog_decl_list SEMICOLON
    (10) subprog_decl_part -> .
    (11) subprog_decl_list -> . subprog_decl_list SEMICOLON subprog_decl
    (12) subprog_decl_list -> . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) proc_decl -> . PROCEDURE proc_name LPAREN RPAREN SEMICOLON inblock

    IDENT           reduce using rule 10 (subprog_decl_part -> .)
    WHILE           reduce using rule 10 (subprog_decl_part -> .)
    FOR             reduce using rule 10 (subprog_decl_part -> .)
    BEGIN           reduce using rule 10 (subprog_decl_part -> .)
    READ            reduce using rule 10 (subprog_decl_part -> .)
    WRITE           reduce using rule 10 (subprog_decl_part -> .)
    IF              reduce using rule 10 (subprog_decl_part -> .)
    PERIOD          reduce using rule 10 (subprog_decl_part -> .)
    PROCEDURE       shift and go to state 15

    subprog_decl_part              shift and go to state 11
    subprog_decl_list              shift and go to state 12
    subprog_decl                   shift and go to state 13
    proc_decl                      shift and go to state 14

state 7

    (4) var_decl_part -> var_decl_list . SEMICOLON
    (6) var_decl_list -> var_decl_list . SEMICOLON var_decl

    SEMICOLON       shift and go to state 16


state 8

    (7) var_decl_list -> var_decl .

    SEMICOLON       reduce using rule 7 (var_decl_list -> var_decl .)


state 9

    (8) var_decl -> VAR . id_list
    (72) id_list -> . IDENT
    (73) id_list -> . id_list COMMA IDENT

    IDENT           shift and go to state 18

    id_list                        shift and go to state 17

state 10

    (1) program -> PROGRAM IDENT SEMICOLON outblock PERIOD .

    $end            reduce using rule 1 (program -> PROGRAM IDENT SEMICOLON outblock PERIOD .)


state 11

    (2) outblock -> var_decl_part subprog_decl_part . outblock_act statement
    (3) outblock_act -> .

    IDENT           reduce using rule 3 (outblock_act -> .)
    WHILE           reduce using rule 3 (outblock_act -> .)
    FOR             reduce using rule 3 (outblock_act -> .)
    BEGIN           reduce using rule 3 (outblock_act -> .)
    READ            reduce using rule 3 (outblock_act -> .)
    WRITE           reduce using rule 3 (outblock_act -> .)
    IF              reduce using rule 3 (outblock_act -> .)
    PERIOD          reduce using rule 3 (outblock_act -> .)

    outblock_act                   shift and go to state 19

state 12

    (9) subprog_decl_part -> subprog_decl_list . SEMICOLON
    (11) subprog_decl_list -> subprog_decl_list . SEMICOLON subprog_decl

    SEMICOLON       shift and go to state 20


state 13

    (12) subprog_decl_list -> subprog_decl .

    SEMICOLON       reduce using rule 12 (subprog_decl_list -> subprog_decl .)


state 14

    (13) subprog_decl -> proc_decl .

    SEMICOLON       reduce using rule 13 (subprog_decl -> proc_decl .)


state 15

    (14) proc_decl -> PROCEDURE . proc_name LPAREN RPAREN SEMICOLON inblock
    (15) proc_name -> . IDENT

    IDENT           shift and go to state 22

    proc_name                      shift and go to state 21

state 16

    (4) var_decl_part -> var_decl_list SEMICOLON .
    (6) var_decl_list -> var_decl_list SEMICOLON . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IDENT           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WHILE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    FOR             reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    BEGIN           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    READ            reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WRITE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IF              reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    PERIOD          reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    SEMICOLON       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    VAR             shift and go to state 9

    var_decl                       shift and go to state 23

state 17

    (8) var_decl -> VAR id_list .
    (73) id_list -> id_list . COMMA IDENT

    SEMICOLON       reduce using rule 8 (var_decl -> VAR id_list .)
    COMMA           shift and go to state 24


state 18

    (72) id_list -> IDENT .

    COMMA           reduce using rule 72 (id_list -> IDENT .)
    SEMICOLON       reduce using rule 72 (id_list -> IDENT .)


state 19

    (2) outblock -> var_decl_part subprog_decl_part outblock_act . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (30) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (41) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (43) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (47) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (53) null_statement -> .
    (49) block_statement -> . BEGIN statement_list END
    (51) read_statement -> . READ LPAREN IDENT RPAREN
    (52) write_statement -> . WRITE LPAREN expression RPAREN
    (31) act_generate_labels -> .
    (48) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    PERIOD          reduce using rule 53 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 31 (act_generate_labels -> .)

    statement                      shift and go to state 25
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    act_generate_labels            shift and go to state 36
    proc_call_name                 shift and go to state 39

state 20

    (9) subprog_decl_part -> subprog_decl_list SEMICOLON .
    (11) subprog_decl_list -> subprog_decl_list SEMICOLON . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) proc_decl -> . PROCEDURE proc_name LPAREN RPAREN SEMICOLON inblock

    IDENT           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WHILE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    FOR             reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    BEGIN           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    READ            reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WRITE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    IF              reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PERIOD          reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PROCEDURE       shift and go to state 15

    subprog_decl                   shift and go to state 43
    proc_decl                      shift and go to state 14

state 21

    (14) proc_decl -> PROCEDURE proc_name . LPAREN RPAREN SEMICOLON inblock

    LPAREN          shift and go to state 44


state 22

    (15) proc_name -> IDENT .

    LPAREN          reduce using rule 15 (proc_name -> IDENT .)


state 23

    (6) var_decl_list -> var_decl_list SEMICOLON var_decl .

    SEMICOLON       reduce using rule 6 (var_decl_list -> var_decl_list SEMICOLON var_decl .)


state 24

    (73) id_list -> id_list COMMA . IDENT

    IDENT           shift and go to state 45


state 25

    (2) outblock -> var_decl_part subprog_decl_part outblock_act statement .

    PERIOD          reduce using rule 2 (outblock -> var_decl_part subprog_decl_part outblock_act statement .)


state 26

    (19) statement -> assignment_statement .

    PERIOD          reduce using rule 19 (statement -> assignment_statement .)
    END             reduce using rule 19 (statement -> assignment_statement .)
    SEMICOLON       reduce using rule 19 (statement -> assignment_statement .)
    ELSE            reduce using rule 19 (statement -> assignment_statement .)


state 27

    (20) statement -> if_statement .

    PERIOD          reduce using rule 20 (statement -> if_statement .)
    END             reduce using rule 20 (statement -> if_statement .)
    SEMICOLON       reduce using rule 20 (statement -> if_statement .)
    ELSE            reduce using rule 20 (statement -> if_statement .)


state 28

    (21) statement -> while_statement .

    PERIOD          reduce using rule 21 (statement -> while_statement .)
    END             reduce using rule 21 (statement -> while_statement .)
    SEMICOLON       reduce using rule 21 (statement -> while_statement .)
    ELSE            reduce using rule 21 (statement -> while_statement .)


state 29

    (22) statement -> for_statement .

    PERIOD          reduce using rule 22 (statement -> for_statement .)
    END             reduce using rule 22 (statement -> for_statement .)
    SEMICOLON       reduce using rule 22 (statement -> for_statement .)
    ELSE            reduce using rule 22 (statement -> for_statement .)


state 30

    (23) statement -> proc_call_statement .

    PERIOD          reduce using rule 23 (statement -> proc_call_statement .)
    END             reduce using rule 23 (statement -> proc_call_statement .)
    SEMICOLON       reduce using rule 23 (statement -> proc_call_statement .)
    ELSE            reduce using rule 23 (statement -> proc_call_statement .)


state 31

    (24) statement -> null_statement .

    PERIOD          reduce using rule 24 (statement -> null_statement .)
    END             reduce using rule 24 (statement -> null_statement .)
    SEMICOLON       reduce using rule 24 (statement -> null_statement .)
    ELSE            reduce using rule 24 (statement -> null_statement .)


state 32

    (25) statement -> block_statement .

    PERIOD          reduce using rule 25 (statement -> block_statement .)
    END             reduce using rule 25 (statement -> block_statement .)
    SEMICOLON       reduce using rule 25 (statement -> block_statement .)
    ELSE            reduce using rule 25 (statement -> block_statement .)


state 33

    (26) statement -> read_statement .

    PERIOD          reduce using rule 26 (statement -> read_statement .)
    END             reduce using rule 26 (statement -> read_statement .)
    SEMICOLON       reduce using rule 26 (statement -> read_statement .)
    ELSE            reduce using rule 26 (statement -> read_statement .)


state 34

    (27) statement -> write_statement .

    PERIOD          reduce using rule 27 (statement -> write_statement .)
    END             reduce using rule 27 (statement -> write_statement .)
    SEMICOLON       reduce using rule 27 (statement -> write_statement .)
    ELSE            reduce using rule 27 (statement -> write_statement .)


state 35

    (28) assignment_statement -> IDENT . ASSIGN expression
    (48) proc_call_name -> IDENT .

    ASSIGN          shift and go to state 46
    LPAREN          reduce using rule 48 (proc_call_name -> IDENT .)


state 36

    (30) if_statement -> act_generate_labels . IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3

    IF              shift and go to state 47


state 37

    (41) while_statement -> WHILE . act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (31) act_generate_labels -> .

    MINUS           reduce using rule 31 (act_generate_labels -> .)
    LPAREN          reduce using rule 31 (act_generate_labels -> .)
    IDENT           reduce using rule 31 (act_generate_labels -> .)
    NUMBER          reduce using rule 31 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 48

state 38

    (43) for_statement -> FOR . act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (31) act_generate_labels -> .

    IDENT           reduce using rule 31 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 49

state 39

    (47) proc_call_statement -> proc_call_name . LPAREN RPAREN

    LPAREN          shift and go to state 50


state 40

    (49) block_statement -> BEGIN . statement_list END
    (17) statement_list -> . statement_list SEMICOLON statement
    (18) statement_list -> . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (30) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (41) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (43) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (47) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (53) null_statement -> .
    (49) block_statement -> . BEGIN statement_list END
    (51) read_statement -> . READ LPAREN IDENT RPAREN
    (52) write_statement -> . WRITE LPAREN expression RPAREN
    (31) act_generate_labels -> .
    (48) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    END             reduce using rule 53 (null_statement -> .)
    SEMICOLON       reduce using rule 53 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 31 (act_generate_labels -> .)

    statement_list                 shift and go to state 51
    statement                      shift and go to state 52
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    act_generate_labels            shift and go to state 36
    proc_call_name                 shift and go to state 39

state 41

    (51) read_statement -> READ . LPAREN IDENT RPAREN

    LPAREN          shift and go to state 53


state 42

    (52) write_statement -> WRITE . LPAREN expression RPAREN

    LPAREN          shift and go to state 54


state 43

    (11) subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .

    SEMICOLON       reduce using rule 11 (subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .)


state 44

    (14) proc_decl -> PROCEDURE proc_name LPAREN . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 55


state 45

    (73) id_list -> id_list COMMA IDENT .

    COMMA           reduce using rule 73 (id_list -> id_list COMMA IDENT .)
    SEMICOLON       reduce using rule 73 (id_list -> id_list COMMA IDENT .)


state 46

    (28) assignment_statement -> IDENT ASSIGN . expression
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 57
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 47

    (30) if_statement -> act_generate_labels IF . condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (54) condition -> . expression EQ expression
    (55) condition -> . expression NEQ expression
    (56) condition -> . expression LT expression
    (57) condition -> . expression LE expression
    (58) condition -> . expression GT expression
    (59) condition -> . expression GE expression
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    condition                      shift and go to state 65
    expression                     shift and go to state 66
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 48

    (41) while_statement -> WHILE act_generate_labels . act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (36) act_insert_jump1 -> .

    MINUS           reduce using rule 36 (act_insert_jump1 -> .)
    LPAREN          reduce using rule 36 (act_insert_jump1 -> .)
    IDENT           reduce using rule 36 (act_insert_jump1 -> .)
    NUMBER          reduce using rule 36 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 67

state 49

    (43) for_statement -> FOR act_generate_labels . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    IDENT           shift and go to state 68


state 50

    (47) proc_call_statement -> proc_call_name LPAREN . RPAREN

    RPAREN          shift and go to state 69


state 51

    (49) block_statement -> BEGIN statement_list . END
    (17) statement_list -> statement_list . SEMICOLON statement

    END             shift and go to state 70
    SEMICOLON       shift and go to state 71


state 52

    (18) statement_list -> statement .

    END             reduce using rule 18 (statement_list -> statement .)
    SEMICOLON       reduce using rule 18 (statement_list -> statement .)


state 53

    (51) read_statement -> READ LPAREN . IDENT RPAREN

    IDENT           shift and go to state 72


state 54

    (52) write_statement -> WRITE LPAREN . expression RPAREN
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 73
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 55

    (14) proc_decl -> PROCEDURE proc_name LPAREN RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 74


state 56

    (70) var_name -> IDENT .

    MULT            reduce using rule 70 (var_name -> IDENT .)
    DIV             reduce using rule 70 (var_name -> IDENT .)
    PLUS            reduce using rule 70 (var_name -> IDENT .)
    MINUS           reduce using rule 70 (var_name -> IDENT .)
    PERIOD          reduce using rule 70 (var_name -> IDENT .)
    END             reduce using rule 70 (var_name -> IDENT .)
    SEMICOLON       reduce using rule 70 (var_name -> IDENT .)
    ELSE            reduce using rule 70 (var_name -> IDENT .)
    EQ              reduce using rule 70 (var_name -> IDENT .)
    NEQ             reduce using rule 70 (var_name -> IDENT .)
    LT              reduce using rule 70 (var_name -> IDENT .)
    LE              reduce using rule 70 (var_name -> IDENT .)
    GT              reduce using rule 70 (var_name -> IDENT .)
    GE              reduce using rule 70 (var_name -> IDENT .)
    RPAREN          reduce using rule 70 (var_name -> IDENT .)
    THEN            reduce using rule 70 (var_name -> IDENT .)
    DO              reduce using rule 70 (var_name -> IDENT .)
    TO              reduce using rule 70 (var_name -> IDENT .)


state 57

    (28) assignment_statement -> IDENT ASSIGN expression .
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term

    PERIOD          reduce using rule 28 (assignment_statement -> IDENT ASSIGN expression .)
    END             reduce using rule 28 (assignment_statement -> IDENT ASSIGN expression .)
    SEMICOLON       reduce using rule 28 (assignment_statement -> IDENT ASSIGN expression .)
    ELSE            reduce using rule 28 (assignment_statement -> IDENT ASSIGN expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76


state 58

    (60) expression -> term .
    (65) term -> term . MULT factor
    (66) term -> term . DIV factor

    PLUS            reduce using rule 60 (expression -> term .)
    MINUS           reduce using rule 60 (expression -> term .)
    PERIOD          reduce using rule 60 (expression -> term .)
    END             reduce using rule 60 (expression -> term .)
    SEMICOLON       reduce using rule 60 (expression -> term .)
    ELSE            reduce using rule 60 (expression -> term .)
    EQ              reduce using rule 60 (expression -> term .)
    NEQ             reduce using rule 60 (expression -> term .)
    LT              reduce using rule 60 (expression -> term .)
    LE              reduce using rule 60 (expression -> term .)
    GT              reduce using rule 60 (expression -> term .)
    GE              reduce using rule 60 (expression -> term .)
    RPAREN          reduce using rule 60 (expression -> term .)
    THEN            reduce using rule 60 (expression -> term .)
    DO              reduce using rule 60 (expression -> term .)
    TO              reduce using rule 60 (expression -> term .)
    MULT            shift and go to state 77
    DIV             shift and go to state 78


state 59

    (61) expression -> MINUS . term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    term                           shift and go to state 79
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 60

    (64) term -> factor .

    MULT            reduce using rule 64 (term -> factor .)
    DIV             reduce using rule 64 (term -> factor .)
    PLUS            reduce using rule 64 (term -> factor .)
    MINUS           reduce using rule 64 (term -> factor .)
    PERIOD          reduce using rule 64 (term -> factor .)
    END             reduce using rule 64 (term -> factor .)
    SEMICOLON       reduce using rule 64 (term -> factor .)
    ELSE            reduce using rule 64 (term -> factor .)
    EQ              reduce using rule 64 (term -> factor .)
    NEQ             reduce using rule 64 (term -> factor .)
    LT              reduce using rule 64 (term -> factor .)
    LE              reduce using rule 64 (term -> factor .)
    GT              reduce using rule 64 (term -> factor .)
    GE              reduce using rule 64 (term -> factor .)
    RPAREN          reduce using rule 64 (term -> factor .)
    THEN            reduce using rule 64 (term -> factor .)
    DO              reduce using rule 64 (term -> factor .)
    TO              reduce using rule 64 (term -> factor .)


state 61

    (67) factor -> var_name .

    MULT            reduce using rule 67 (factor -> var_name .)
    DIV             reduce using rule 67 (factor -> var_name .)
    PLUS            reduce using rule 67 (factor -> var_name .)
    MINUS           reduce using rule 67 (factor -> var_name .)
    PERIOD          reduce using rule 67 (factor -> var_name .)
    END             reduce using rule 67 (factor -> var_name .)
    SEMICOLON       reduce using rule 67 (factor -> var_name .)
    ELSE            reduce using rule 67 (factor -> var_name .)
    EQ              reduce using rule 67 (factor -> var_name .)
    NEQ             reduce using rule 67 (factor -> var_name .)
    LT              reduce using rule 67 (factor -> var_name .)
    LE              reduce using rule 67 (factor -> var_name .)
    GT              reduce using rule 67 (factor -> var_name .)
    GE              reduce using rule 67 (factor -> var_name .)
    RPAREN          reduce using rule 67 (factor -> var_name .)
    THEN            reduce using rule 67 (factor -> var_name .)
    DO              reduce using rule 67 (factor -> var_name .)
    TO              reduce using rule 67 (factor -> var_name .)


state 62

    (68) factor -> number .

    MULT            reduce using rule 68 (factor -> number .)
    DIV             reduce using rule 68 (factor -> number .)
    PLUS            reduce using rule 68 (factor -> number .)
    MINUS           reduce using rule 68 (factor -> number .)
    PERIOD          reduce using rule 68 (factor -> number .)
    END             reduce using rule 68 (factor -> number .)
    SEMICOLON       reduce using rule 68 (factor -> number .)
    ELSE            reduce using rule 68 (factor -> number .)
    EQ              reduce using rule 68 (factor -> number .)
    NEQ             reduce using rule 68 (factor -> number .)
    LT              reduce using rule 68 (factor -> number .)
    LE              reduce using rule 68 (factor -> number .)
    GT              reduce using rule 68 (factor -> number .)
    GE              reduce using rule 68 (factor -> number .)
    RPAREN          reduce using rule 68 (factor -> number .)
    THEN            reduce using rule 68 (factor -> number .)
    DO              reduce using rule 68 (factor -> number .)
    TO              reduce using rule 68 (factor -> number .)


state 63

    (69) factor -> LPAREN . expression RPAREN
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 80
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 64

    (71) number -> NUMBER .

    MULT            reduce using rule 71 (number -> NUMBER .)
    DIV             reduce using rule 71 (number -> NUMBER .)
    PLUS            reduce using rule 71 (number -> NUMBER .)
    MINUS           reduce using rule 71 (number -> NUMBER .)
    PERIOD          reduce using rule 71 (number -> NUMBER .)
    END             reduce using rule 71 (number -> NUMBER .)
    SEMICOLON       reduce using rule 71 (number -> NUMBER .)
    ELSE            reduce using rule 71 (number -> NUMBER .)
    EQ              reduce using rule 71 (number -> NUMBER .)
    NEQ             reduce using rule 71 (number -> NUMBER .)
    LT              reduce using rule 71 (number -> NUMBER .)
    LE              reduce using rule 71 (number -> NUMBER .)
    GT              reduce using rule 71 (number -> NUMBER .)
    GE              reduce using rule 71 (number -> NUMBER .)
    RPAREN          reduce using rule 71 (number -> NUMBER .)
    THEN            reduce using rule 71 (number -> NUMBER .)
    DO              reduce using rule 71 (number -> NUMBER .)
    TO              reduce using rule 71 (number -> NUMBER .)


state 65

    (30) if_statement -> act_generate_labels IF condition . act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (32) act_insert_br -> .

    THEN            reduce using rule 32 (act_insert_br -> .)

    act_insert_br                  shift and go to state 81

state 66

    (54) condition -> expression . EQ expression
    (55) condition -> expression . NEQ expression
    (56) condition -> expression . LT expression
    (57) condition -> expression . LE expression
    (58) condition -> expression . GT expression
    (59) condition -> expression . GE expression
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term

    EQ              shift and go to state 82
    NEQ             shift and go to state 83
    LT              shift and go to state 84
    LE              shift and go to state 85
    GT              shift and go to state 86
    GE              shift and go to state 87
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76


state 67

    (41) while_statement -> WHILE act_generate_labels act_insert_jump1 . act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (33) act_insert_label1 -> .

    MINUS           reduce using rule 33 (act_insert_label1 -> .)
    LPAREN          reduce using rule 33 (act_insert_label1 -> .)
    IDENT           reduce using rule 33 (act_insert_label1 -> .)
    NUMBER          reduce using rule 33 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 88

state 68

    (43) for_statement -> FOR act_generate_labels IDENT . act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (50) act_lookup_prev_ident -> .

    ASSIGN          reduce using rule 50 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 89

state 69

    (47) proc_call_statement -> proc_call_name LPAREN RPAREN .

    PERIOD          reduce using rule 47 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    END             reduce using rule 47 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    SEMICOLON       reduce using rule 47 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    ELSE            reduce using rule 47 (proc_call_statement -> proc_call_name LPAREN RPAREN .)


state 70

    (49) block_statement -> BEGIN statement_list END .

    PERIOD          reduce using rule 49 (block_statement -> BEGIN statement_list END .)
    END             reduce using rule 49 (block_statement -> BEGIN statement_list END .)
    SEMICOLON       reduce using rule 49 (block_statement -> BEGIN statement_list END .)
    ELSE            reduce using rule 49 (block_statement -> BEGIN statement_list END .)


state 71

    (17) statement_list -> statement_list SEMICOLON . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (30) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (41) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (43) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (47) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (53) null_statement -> .
    (49) block_statement -> . BEGIN statement_list END
    (51) read_statement -> . READ LPAREN IDENT RPAREN
    (52) write_statement -> . WRITE LPAREN expression RPAREN
    (31) act_generate_labels -> .
    (48) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    END             reduce using rule 53 (null_statement -> .)
    SEMICOLON       reduce using rule 53 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 31 (act_generate_labels -> .)

    statement                      shift and go to state 90
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    act_generate_labels            shift and go to state 36
    proc_call_name                 shift and go to state 39

state 72

    (51) read_statement -> READ LPAREN IDENT . RPAREN

    RPAREN          shift and go to state 91


state 73

    (52) write_statement -> WRITE LPAREN expression . RPAREN
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term

    RPAREN          shift and go to state 92
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76


state 74

    (14) proc_decl -> PROCEDURE proc_name LPAREN RPAREN SEMICOLON . inblock
    (16) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 93
    var_decl_part                  shift and go to state 94
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 75

    (62) expression -> expression PLUS . term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    term                           shift and go to state 95
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 76

    (63) expression -> expression MINUS . term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    term                           shift and go to state 96
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 77

    (65) term -> term MULT . factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    factor                         shift and go to state 97
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 78

    (66) term -> term DIV . factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    factor                         shift and go to state 98
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 79

    (61) expression -> MINUS term .
    (65) term -> term . MULT factor
    (66) term -> term . DIV factor

    PLUS            reduce using rule 61 (expression -> MINUS term .)
    MINUS           reduce using rule 61 (expression -> MINUS term .)
    PERIOD          reduce using rule 61 (expression -> MINUS term .)
    END             reduce using rule 61 (expression -> MINUS term .)
    SEMICOLON       reduce using rule 61 (expression -> MINUS term .)
    ELSE            reduce using rule 61 (expression -> MINUS term .)
    EQ              reduce using rule 61 (expression -> MINUS term .)
    NEQ             reduce using rule 61 (expression -> MINUS term .)
    LT              reduce using rule 61 (expression -> MINUS term .)
    LE              reduce using rule 61 (expression -> MINUS term .)
    GT              reduce using rule 61 (expression -> MINUS term .)
    GE              reduce using rule 61 (expression -> MINUS term .)
    RPAREN          reduce using rule 61 (expression -> MINUS term .)
    THEN            reduce using rule 61 (expression -> MINUS term .)
    DO              reduce using rule 61 (expression -> MINUS term .)
    TO              reduce using rule 61 (expression -> MINUS term .)
    MULT            shift and go to state 77
    DIV             shift and go to state 78


state 80

    (69) factor -> LPAREN expression . RPAREN
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term

    RPAREN          shift and go to state 99
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76


state 81

    (30) if_statement -> act_generate_labels IF condition act_insert_br . THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3

    THEN            shift and go to state 100


state 82

    (54) condition -> expression EQ . expression
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 101
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 83

    (55) condition -> expression NEQ . expression
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 102
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 84

    (56) condition -> expression LT . expression
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 103
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 85

    (57) condition -> expression LE . expression
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 104
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 86

    (58) condition -> expression GT . expression
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 105
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 87

    (59) condition -> expression GE . expression
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 106
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 88

    (41) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 . condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (54) condition -> . expression EQ expression
    (55) condition -> . expression NEQ expression
    (56) condition -> . expression LT expression
    (57) condition -> . expression LE expression
    (58) condition -> . expression GT expression
    (59) condition -> . expression GE expression
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    condition                      shift and go to state 107
    expression                     shift and go to state 66
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 89

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident . ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    ASSIGN          shift and go to state 108


state 90

    (17) statement_list -> statement_list SEMICOLON statement .

    END             reduce using rule 17 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 17 (statement_list -> statement_list SEMICOLON statement .)


state 91

    (51) read_statement -> READ LPAREN IDENT RPAREN .

    PERIOD          reduce using rule 51 (read_statement -> READ LPAREN IDENT RPAREN .)
    END             reduce using rule 51 (read_statement -> READ LPAREN IDENT RPAREN .)
    SEMICOLON       reduce using rule 51 (read_statement -> READ LPAREN IDENT RPAREN .)
    ELSE            reduce using rule 51 (read_statement -> READ LPAREN IDENT RPAREN .)


state 92

    (52) write_statement -> WRITE LPAREN expression RPAREN .

    PERIOD          reduce using rule 52 (write_statement -> WRITE LPAREN expression RPAREN .)
    END             reduce using rule 52 (write_statement -> WRITE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 52 (write_statement -> WRITE LPAREN expression RPAREN .)
    ELSE            reduce using rule 52 (write_statement -> WRITE LPAREN expression RPAREN .)


state 93

    (14) proc_decl -> PROCEDURE proc_name LPAREN RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 14 (proc_decl -> PROCEDURE proc_name LPAREN RPAREN SEMICOLON inblock .)


state 94

    (16) inblock -> var_decl_part . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (30) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (41) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (43) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (47) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (53) null_statement -> .
    (49) block_statement -> . BEGIN statement_list END
    (51) read_statement -> . READ LPAREN IDENT RPAREN
    (52) write_statement -> . WRITE LPAREN expression RPAREN
    (31) act_generate_labels -> .
    (48) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    SEMICOLON       reduce using rule 53 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 31 (act_generate_labels -> .)

    statement                      shift and go to state 109
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    act_generate_labels            shift and go to state 36
    proc_call_name                 shift and go to state 39

state 95

    (62) expression -> expression PLUS term .
    (65) term -> term . MULT factor
    (66) term -> term . DIV factor

    PLUS            reduce using rule 62 (expression -> expression PLUS term .)
    MINUS           reduce using rule 62 (expression -> expression PLUS term .)
    PERIOD          reduce using rule 62 (expression -> expression PLUS term .)
    END             reduce using rule 62 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 62 (expression -> expression PLUS term .)
    ELSE            reduce using rule 62 (expression -> expression PLUS term .)
    EQ              reduce using rule 62 (expression -> expression PLUS term .)
    NEQ             reduce using rule 62 (expression -> expression PLUS term .)
    LT              reduce using rule 62 (expression -> expression PLUS term .)
    LE              reduce using rule 62 (expression -> expression PLUS term .)
    GT              reduce using rule 62 (expression -> expression PLUS term .)
    GE              reduce using rule 62 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 62 (expression -> expression PLUS term .)
    THEN            reduce using rule 62 (expression -> expression PLUS term .)
    DO              reduce using rule 62 (expression -> expression PLUS term .)
    TO              reduce using rule 62 (expression -> expression PLUS term .)
    MULT            shift and go to state 77
    DIV             shift and go to state 78


state 96

    (63) expression -> expression MINUS term .
    (65) term -> term . MULT factor
    (66) term -> term . DIV factor

    PLUS            reduce using rule 63 (expression -> expression MINUS term .)
    MINUS           reduce using rule 63 (expression -> expression MINUS term .)
    PERIOD          reduce using rule 63 (expression -> expression MINUS term .)
    END             reduce using rule 63 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 63 (expression -> expression MINUS term .)
    ELSE            reduce using rule 63 (expression -> expression MINUS term .)
    EQ              reduce using rule 63 (expression -> expression MINUS term .)
    NEQ             reduce using rule 63 (expression -> expression MINUS term .)
    LT              reduce using rule 63 (expression -> expression MINUS term .)
    LE              reduce using rule 63 (expression -> expression MINUS term .)
    GT              reduce using rule 63 (expression -> expression MINUS term .)
    GE              reduce using rule 63 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 63 (expression -> expression MINUS term .)
    THEN            reduce using rule 63 (expression -> expression MINUS term .)
    DO              reduce using rule 63 (expression -> expression MINUS term .)
    TO              reduce using rule 63 (expression -> expression MINUS term .)
    MULT            shift and go to state 77
    DIV             shift and go to state 78


state 97

    (65) term -> term MULT factor .

    MULT            reduce using rule 65 (term -> term MULT factor .)
    DIV             reduce using rule 65 (term -> term MULT factor .)
    PLUS            reduce using rule 65 (term -> term MULT factor .)
    MINUS           reduce using rule 65 (term -> term MULT factor .)
    PERIOD          reduce using rule 65 (term -> term MULT factor .)
    END             reduce using rule 65 (term -> term MULT factor .)
    SEMICOLON       reduce using rule 65 (term -> term MULT factor .)
    ELSE            reduce using rule 65 (term -> term MULT factor .)
    EQ              reduce using rule 65 (term -> term MULT factor .)
    NEQ             reduce using rule 65 (term -> term MULT factor .)
    LT              reduce using rule 65 (term -> term MULT factor .)
    LE              reduce using rule 65 (term -> term MULT factor .)
    GT              reduce using rule 65 (term -> term MULT factor .)
    GE              reduce using rule 65 (term -> term MULT factor .)
    RPAREN          reduce using rule 65 (term -> term MULT factor .)
    THEN            reduce using rule 65 (term -> term MULT factor .)
    DO              reduce using rule 65 (term -> term MULT factor .)
    TO              reduce using rule 65 (term -> term MULT factor .)


state 98

    (66) term -> term DIV factor .

    MULT            reduce using rule 66 (term -> term DIV factor .)
    DIV             reduce using rule 66 (term -> term DIV factor .)
    PLUS            reduce using rule 66 (term -> term DIV factor .)
    MINUS           reduce using rule 66 (term -> term DIV factor .)
    PERIOD          reduce using rule 66 (term -> term DIV factor .)
    END             reduce using rule 66 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 66 (term -> term DIV factor .)
    ELSE            reduce using rule 66 (term -> term DIV factor .)
    EQ              reduce using rule 66 (term -> term DIV factor .)
    NEQ             reduce using rule 66 (term -> term DIV factor .)
    LT              reduce using rule 66 (term -> term DIV factor .)
    LE              reduce using rule 66 (term -> term DIV factor .)
    GT              reduce using rule 66 (term -> term DIV factor .)
    GE              reduce using rule 66 (term -> term DIV factor .)
    RPAREN          reduce using rule 66 (term -> term DIV factor .)
    THEN            reduce using rule 66 (term -> term DIV factor .)
    DO              reduce using rule 66 (term -> term DIV factor .)
    TO              reduce using rule 66 (term -> term DIV factor .)


state 99

    (69) factor -> LPAREN expression RPAREN .

    MULT            reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    PERIOD          reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    THEN            reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 69 (factor -> LPAREN expression RPAREN .)


state 100

    (30) if_statement -> act_generate_labels IF condition act_insert_br THEN . act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (33) act_insert_label1 -> .

    IDENT           reduce using rule 33 (act_insert_label1 -> .)
    WHILE           reduce using rule 33 (act_insert_label1 -> .)
    FOR             reduce using rule 33 (act_insert_label1 -> .)
    BEGIN           reduce using rule 33 (act_insert_label1 -> .)
    READ            reduce using rule 33 (act_insert_label1 -> .)
    WRITE           reduce using rule 33 (act_insert_label1 -> .)
    ELSE            reduce using rule 33 (act_insert_label1 -> .)
    IF              reduce using rule 33 (act_insert_label1 -> .)
    PERIOD          reduce using rule 33 (act_insert_label1 -> .)
    END             reduce using rule 33 (act_insert_label1 -> .)
    SEMICOLON       reduce using rule 33 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 110

state 101

    (54) condition -> expression EQ expression .
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term

    THEN            reduce using rule 54 (condition -> expression EQ expression .)
    DO              reduce using rule 54 (condition -> expression EQ expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76


state 102

    (55) condition -> expression NEQ expression .
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term

    THEN            reduce using rule 55 (condition -> expression NEQ expression .)
    DO              reduce using rule 55 (condition -> expression NEQ expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76


state 103

    (56) condition -> expression LT expression .
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term

    THEN            reduce using rule 56 (condition -> expression LT expression .)
    DO              reduce using rule 56 (condition -> expression LT expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76


state 104

    (57) condition -> expression LE expression .
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term

    THEN            reduce using rule 57 (condition -> expression LE expression .)
    DO              reduce using rule 57 (condition -> expression LE expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76


state 105

    (58) condition -> expression GT expression .
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term

    THEN            reduce using rule 58 (condition -> expression GT expression .)
    DO              reduce using rule 58 (condition -> expression GT expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76


state 106

    (59) condition -> expression GE expression .
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term

    THEN            reduce using rule 59 (condition -> expression GE expression .)
    DO              reduce using rule 59 (condition -> expression GE expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76


state 107

    (41) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition . act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (42) act_insert_br_while -> .

    DO              reduce using rule 42 (act_insert_br_while -> .)

    act_insert_br_while            shift and go to state 111

state 108

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN . expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 112
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 109

    (16) inblock -> var_decl_part statement .

    SEMICOLON       reduce using rule 16 (inblock -> var_decl_part statement .)


state 110

    (30) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 . statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (30) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (41) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (43) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (47) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (53) null_statement -> .
    (49) block_statement -> . BEGIN statement_list END
    (51) read_statement -> . READ LPAREN IDENT RPAREN
    (52) write_statement -> . WRITE LPAREN expression RPAREN
    (31) act_generate_labels -> .
    (48) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 53 (null_statement -> .)
    PERIOD          reduce using rule 53 (null_statement -> .)
    END             reduce using rule 53 (null_statement -> .)
    SEMICOLON       reduce using rule 53 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 31 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 36
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 111

    (41) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while . DO act_insert_label2 statement act_insert_jump1 act_insert_label3

    DO              shift and go to state 114


state 112

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression . act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term
    (29) act_assign_ident -> .

    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TO              reduce using rule 29 (act_assign_ident -> .)

    act_assign_ident               shift and go to state 115

state 113

    (30) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement . act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (38) act_insert_jump3 -> .

    ELSE            reduce using rule 38 (act_insert_jump3 -> .)
    PERIOD          reduce using rule 38 (act_insert_jump3 -> .)
    END             reduce using rule 38 (act_insert_jump3 -> .)
    SEMICOLON       reduce using rule 38 (act_insert_jump3 -> .)

    act_insert_jump3               shift and go to state 116

state 114

    (41) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO . act_insert_label2 statement act_insert_jump1 act_insert_label3
    (34) act_insert_label2 -> .

    IDENT           reduce using rule 34 (act_insert_label2 -> .)
    WHILE           reduce using rule 34 (act_insert_label2 -> .)
    FOR             reduce using rule 34 (act_insert_label2 -> .)
    BEGIN           reduce using rule 34 (act_insert_label2 -> .)
    READ            reduce using rule 34 (act_insert_label2 -> .)
    WRITE           reduce using rule 34 (act_insert_label2 -> .)
    IF              reduce using rule 34 (act_insert_label2 -> .)
    PERIOD          reduce using rule 34 (act_insert_label2 -> .)
    END             reduce using rule 34 (act_insert_label2 -> .)
    SEMICOLON       reduce using rule 34 (act_insert_label2 -> .)
    ELSE            reduce using rule 34 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 117

state 115

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident . act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (36) act_insert_jump1 -> .

    TO              reduce using rule 36 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 118

state 116

    (30) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 . act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (34) act_insert_label2 -> .

    ELSE            reduce using rule 34 (act_insert_label2 -> .)
    PERIOD          reduce using rule 34 (act_insert_label2 -> .)
    END             reduce using rule 34 (act_insert_label2 -> .)
    SEMICOLON       reduce using rule 34 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 119

state 117

    (41) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 . statement act_insert_jump1 act_insert_label3
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (30) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (41) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (43) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (47) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (53) null_statement -> .
    (49) block_statement -> . BEGIN statement_list END
    (51) read_statement -> . READ LPAREN IDENT RPAREN
    (52) write_statement -> . WRITE LPAREN expression RPAREN
    (31) act_generate_labels -> .
    (48) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 53 (null_statement -> .)
    PERIOD          reduce using rule 53 (null_statement -> .)
    END             reduce using rule 53 (null_statement -> .)
    SEMICOLON       reduce using rule 53 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 31 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 36
    statement                      shift and go to state 120
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 118

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 . act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (33) act_insert_label1 -> .

    TO              reduce using rule 33 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 121

state 119

    (30) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 . else_statement act_insert_jump3 act_insert_label3
    (39) else_statement -> . ELSE statement
    (40) else_statement -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 123
    PERIOD          reduce using rule 40 (else_statement -> .)
    END             reduce using rule 40 (else_statement -> .)
    SEMICOLON       reduce using rule 40 (else_statement -> .)

  ! ELSE            [ reduce using rule 40 (else_statement -> .) ]

    else_statement                 shift and go to state 122

state 120

    (41) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement . act_insert_jump1 act_insert_label3
    (36) act_insert_jump1 -> .

    PERIOD          reduce using rule 36 (act_insert_jump1 -> .)
    END             reduce using rule 36 (act_insert_jump1 -> .)
    SEMICOLON       reduce using rule 36 (act_insert_jump1 -> .)
    ELSE            reduce using rule 36 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 124

state 121

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 . TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    TO              shift and go to state 125


state 122

    (30) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement . act_insert_jump3 act_insert_label3
    (38) act_insert_jump3 -> .

    PERIOD          reduce using rule 38 (act_insert_jump3 -> .)
    END             reduce using rule 38 (act_insert_jump3 -> .)
    SEMICOLON       reduce using rule 38 (act_insert_jump3 -> .)
    ELSE            reduce using rule 38 (act_insert_jump3 -> .)

    act_insert_jump3               shift and go to state 126

state 123

    (39) else_statement -> ELSE . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (30) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (41) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (43) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (47) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (53) null_statement -> .
    (49) block_statement -> . BEGIN statement_list END
    (51) read_statement -> . READ LPAREN IDENT RPAREN
    (52) write_statement -> . WRITE LPAREN expression RPAREN
    (31) act_generate_labels -> .
    (48) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 53 (null_statement -> .)
    PERIOD          reduce using rule 53 (null_statement -> .)
    END             reduce using rule 53 (null_statement -> .)
    SEMICOLON       reduce using rule 53 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 31 (act_generate_labels -> .)

    statement                      shift and go to state 127
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    act_generate_labels            shift and go to state 36
    proc_call_name                 shift and go to state 39

state 124

    (41) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 . act_insert_label3
    (35) act_insert_label3 -> .

    PERIOD          reduce using rule 35 (act_insert_label3 -> .)
    END             reduce using rule 35 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 35 (act_insert_label3 -> .)
    ELSE            reduce using rule 35 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 128

state 125

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO . expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (60) expression -> . term
    (61) expression -> . MINUS term
    (62) expression -> . expression PLUS term
    (63) expression -> . expression MINUS term
    (64) term -> . factor
    (65) term -> . term MULT factor
    (66) term -> . term DIV factor
    (67) factor -> . var_name
    (68) factor -> . number
    (69) factor -> . LPAREN expression RPAREN
    (70) var_name -> . IDENT
    (71) number -> . NUMBER

    MINUS           shift and go to state 59
    LPAREN          shift and go to state 63
    IDENT           shift and go to state 56
    NUMBER          shift and go to state 64

    expression                     shift and go to state 129
    term                           shift and go to state 58
    factor                         shift and go to state 60
    var_name                       shift and go to state 61
    number                         shift and go to state 62

state 126

    (30) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 . act_insert_label3
    (35) act_insert_label3 -> .

    PERIOD          reduce using rule 35 (act_insert_label3 -> .)
    END             reduce using rule 35 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 35 (act_insert_label3 -> .)
    ELSE            reduce using rule 35 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 130

state 127

    (39) else_statement -> ELSE statement .

    ELSE            reduce using rule 39 (else_statement -> ELSE statement .)
    PERIOD          reduce using rule 39 (else_statement -> ELSE statement .)
    END             reduce using rule 39 (else_statement -> ELSE statement .)
    SEMICOLON       reduce using rule 39 (else_statement -> ELSE statement .)


state 128

    (41) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .

    PERIOD          reduce using rule 41 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    END             reduce using rule 41 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    SEMICOLON       reduce using rule 41 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    ELSE            reduce using rule 41 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)


state 129

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression . act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (62) expression -> expression . PLUS term
    (63) expression -> expression . MINUS term
    (44) act_insert_br_for -> .

    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    DO              reduce using rule 44 (act_insert_br_for -> .)

    act_insert_br_for              shift and go to state 131

state 130

    (30) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .

    PERIOD          reduce using rule 30 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    END             reduce using rule 30 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    SEMICOLON       reduce using rule 30 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    ELSE            reduce using rule 30 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)


state 131

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for . act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (34) act_insert_label2 -> .

    DO              reduce using rule 34 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 132

state 132

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 . DO statement act_increment_itr act_insert_jump1 act_insert_label3

    DO              shift and go to state 133


state 133

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO . statement act_increment_itr act_insert_jump1 act_insert_label3
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (30) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (41) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (43) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (47) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (53) null_statement -> .
    (49) block_statement -> . BEGIN statement_list END
    (51) read_statement -> . READ LPAREN IDENT RPAREN
    (52) write_statement -> . WRITE LPAREN expression RPAREN
    (31) act_generate_labels -> .
    (48) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 53 (null_statement -> .)
    PERIOD          reduce using rule 53 (null_statement -> .)
    END             reduce using rule 53 (null_statement -> .)
    SEMICOLON       reduce using rule 53 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 31 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 36
    statement                      shift and go to state 134
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 134

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement . act_increment_itr act_insert_jump1 act_insert_label3
    (45) act_increment_itr -> .

    PERIOD          reduce using rule 45 (act_increment_itr -> .)
    END             reduce using rule 45 (act_increment_itr -> .)
    SEMICOLON       reduce using rule 45 (act_increment_itr -> .)
    ELSE            reduce using rule 45 (act_increment_itr -> .)

    act_increment_itr              shift and go to state 135

state 135

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr . act_insert_jump1 act_insert_label3
    (36) act_insert_jump1 -> .

    PERIOD          reduce using rule 36 (act_insert_jump1 -> .)
    END             reduce using rule 36 (act_insert_jump1 -> .)
    SEMICOLON       reduce using rule 36 (act_insert_jump1 -> .)
    ELSE            reduce using rule 36 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 136

state 136

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 . act_insert_label3
    (35) act_insert_label3 -> .

    PERIOD          reduce using rule 35 (act_insert_label3 -> .)
    END             reduce using rule 35 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 35 (act_insert_label3 -> .)
    ELSE            reduce using rule 35 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 137

state 137

    (43) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .

    PERIOD          reduce using rule 43 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    END             reduce using rule 43 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    SEMICOLON       reduce using rule 43 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    ELSE            reduce using rule 43 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 119 resolved as shift

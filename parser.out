Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FUNCTION
    INTERVAL
    LBRACKET
    RBRACKET

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM IDENT SEMICOLON outblock PERIOD
Rule 2     outblock -> var_decl_part subprog_decl_part outblock_act statement
Rule 3     outblock_act -> <empty>
Rule 4     var_decl_part -> var_decl_list SEMICOLON
Rule 5     var_decl_part -> <empty>
Rule 6     var_decl_list -> var_decl_list SEMICOLON var_decl
Rule 7     var_decl_list -> var_decl
Rule 8     var_decl -> VAR id_list
Rule 9     subprog_decl_part -> subprog_decl_list SEMICOLON
Rule 10    subprog_decl_part -> <empty>
Rule 11    subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl
Rule 12    subprog_decl_list -> subprog_decl
Rule 13    subprog_decl -> proc_decl
Rule 14    proc_decl -> PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock
Rule 15    proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
Rule 16    proc_act2 -> <empty>
Rule 17    act_proc_args_done -> <empty>
Rule 18    act_proc_args_set -> <empty>
Rule 19    proc_name -> IDENT
Rule 20    inblock -> var_decl_part statement
Rule 21    statement_list -> statement_list SEMICOLON statement
Rule 22    statement_list -> statement
Rule 23    statement -> assignment_statement
Rule 24    statement -> if_statement
Rule 25    statement -> while_statement
Rule 26    statement -> for_statement
Rule 27    statement -> proc_call_statement
Rule 28    statement -> null_statement
Rule 29    statement -> block_statement
Rule 30    statement -> read_statement
Rule 31    statement -> write_statement
Rule 32    assignment_statement -> IDENT ASSIGN expression
Rule 33    act_assign_ident -> <empty>
Rule 34    if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
Rule 35    act_generate_labels -> <empty>
Rule 36    act_insert_br -> <empty>
Rule 37    act_insert_label1 -> <empty>
Rule 38    act_insert_label2 -> <empty>
Rule 39    act_insert_label3 -> <empty>
Rule 40    act_insert_jump1 -> <empty>
Rule 41    act_insert_jump2 -> <empty>
Rule 42    act_insert_jump3 -> <empty>
Rule 43    else_statement -> ELSE statement
Rule 44    else_statement -> <empty>
Rule 45    while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
Rule 46    act_insert_br_while -> <empty>
Rule 47    for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
Rule 48    act_insert_br_for -> <empty>
Rule 49    act_increment_itr -> <empty>
Rule 50    for_act1 -> <empty>
Rule 51    arg_list -> expression
Rule 52    arg_list -> arg_list COMMA expression
Rule 53    proc_call_name -> IDENT
Rule 54    proc_call_statement -> proc_call_name LPAREN RPAREN
Rule 55    proc_call_statement -> proc_call_name LPAREN arg_list RPAREN
Rule 56    block_statement -> BEGIN statement_list END
Rule 57    act_lookup_prev_ident -> <empty>
Rule 58    read_statement -> READ LPAREN IDENT RPAREN
Rule 59    write_statement -> WRITE LPAREN expression RPAREN
Rule 60    null_statement -> <empty>
Rule 61    condition -> expression EQ expression
Rule 62    condition -> expression NEQ expression
Rule 63    condition -> expression LT expression
Rule 64    condition -> expression LE expression
Rule 65    condition -> expression GT expression
Rule 66    condition -> expression GE expression
Rule 67    expression -> term
Rule 68    expression -> MINUS term
Rule 69    expression -> expression PLUS term
Rule 70    expression -> expression MINUS term
Rule 71    term -> factor
Rule 72    term -> term MULT factor
Rule 73    term -> term DIV factor
Rule 74    factor -> var_name
Rule 75    factor -> number
Rule 76    factor -> LPAREN expression RPAREN
Rule 77    var_name -> IDENT
Rule 78    number -> NUMBER
Rule 79    id_list -> IDENT
Rule 80    id_list -> id_list COMMA IDENT

Terminals, with rules where they appear

ASSIGN               : 32 47
BEGIN                : 56
COMMA                : 52 80
DIV                  : 73
DO                   : 45 47
ELSE                 : 43
END                  : 56
EQ                   : 61
FOR                  : 47
FUNCTION             : 
GE                   : 66
GT                   : 65
IDENT                : 1 19 32 47 53 58 77 79 80
IF                   : 34
INTERVAL             : 
LBRACKET             : 
LE                   : 64
LPAREN               : 14 15 54 55 58 59 76
LT                   : 63
MINUS                : 68 70
MULT                 : 72
NEQ                  : 62
NUMBER               : 78
PERIOD               : 1
PLUS                 : 69
PROCEDURE            : 14 15
PROGRAM              : 1
RBRACKET             : 
READ                 : 58
RPAREN               : 14 15 54 55 58 59 76
SEMICOLON            : 1 4 6 9 11 14 15 21
THEN                 : 34
TO                   : 47
VAR                  : 8
WHILE                : 45
WRITE                : 59
error                : 

Nonterminals, with rules where they appear

act_assign_ident     : 47
act_generate_labels  : 34 45 47
act_increment_itr    : 47
act_insert_br        : 34
act_insert_br_for    : 47
act_insert_br_while  : 45
act_insert_jump1     : 45 45 47 47
act_insert_jump2     : 
act_insert_jump3     : 34 34
act_insert_label1    : 34 45 47
act_insert_label2    : 34 45 47
act_insert_label3    : 34 45 47
act_lookup_prev_ident : 47
act_proc_args_done   : 15
act_proc_args_set    : 15
arg_list             : 52 55
assignment_statement : 23
block_statement      : 29
condition            : 34 45
else_statement       : 34
expression           : 32 47 47 51 52 59 61 61 62 62 63 63 64 64 65 65 66 66 69 70 76
factor               : 71 72 73
for_act1             : 
for_statement        : 26
id_list              : 8 15 80
if_statement         : 24
inblock              : 14 15
null_statement       : 28
number               : 75
outblock             : 1
outblock_act         : 2
proc_act2            : 14
proc_call_name       : 54 55
proc_call_statement  : 27
proc_decl            : 13
proc_name            : 14 15
program              : 0
read_statement       : 30
statement            : 2 20 21 22 34 43 45 47
statement_list       : 21 56
subprog_decl         : 11 12
subprog_decl_list    : 9 11
subprog_decl_part    : 2
term                 : 67 68 69 70 72 73
var_decl             : 6 7
var_decl_list        : 4 6
var_decl_part        : 2 20
var_name             : 74
while_statement      : 25
write_statement      : 31

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM IDENT SEMICOLON outblock PERIOD

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . IDENT SEMICOLON outblock PERIOD

    IDENT           shift and go to state 3


state 3

    (1) program -> PROGRAM IDENT . SEMICOLON outblock PERIOD

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM IDENT SEMICOLON . outblock PERIOD
    (2) outblock -> . var_decl_part subprog_decl_part outblock_act statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 5 (var_decl_part -> .)
    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    PERIOD          reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    outblock                       shift and go to state 5
    var_decl_part                  shift and go to state 6
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 5

    (1) program -> PROGRAM IDENT SEMICOLON outblock . PERIOD

    PERIOD          shift and go to state 10


state 6

    (2) outblock -> var_decl_part . subprog_decl_part outblock_act statement
    (9) subprog_decl_part -> . subprog_decl_list SEMICOLON
    (10) subprog_decl_part -> .
    (11) subprog_decl_list -> . subprog_decl_list SEMICOLON subprog_decl
    (12) subprog_decl_list -> . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) proc_decl -> . PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock
    (15) proc_decl -> . PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock

    IDENT           reduce using rule 10 (subprog_decl_part -> .)
    WHILE           reduce using rule 10 (subprog_decl_part -> .)
    FOR             reduce using rule 10 (subprog_decl_part -> .)
    BEGIN           reduce using rule 10 (subprog_decl_part -> .)
    READ            reduce using rule 10 (subprog_decl_part -> .)
    WRITE           reduce using rule 10 (subprog_decl_part -> .)
    IF              reduce using rule 10 (subprog_decl_part -> .)
    PERIOD          reduce using rule 10 (subprog_decl_part -> .)
    PROCEDURE       shift and go to state 15

    subprog_decl_part              shift and go to state 11
    subprog_decl_list              shift and go to state 12
    subprog_decl                   shift and go to state 13
    proc_decl                      shift and go to state 14

state 7

    (4) var_decl_part -> var_decl_list . SEMICOLON
    (6) var_decl_list -> var_decl_list . SEMICOLON var_decl

    SEMICOLON       shift and go to state 16


state 8

    (7) var_decl_list -> var_decl .

    SEMICOLON       reduce using rule 7 (var_decl_list -> var_decl .)


state 9

    (8) var_decl -> VAR . id_list
    (79) id_list -> . IDENT
    (80) id_list -> . id_list COMMA IDENT

    IDENT           shift and go to state 18

    id_list                        shift and go to state 17

state 10

    (1) program -> PROGRAM IDENT SEMICOLON outblock PERIOD .

    $end            reduce using rule 1 (program -> PROGRAM IDENT SEMICOLON outblock PERIOD .)


state 11

    (2) outblock -> var_decl_part subprog_decl_part . outblock_act statement
    (3) outblock_act -> .

    IDENT           reduce using rule 3 (outblock_act -> .)
    WHILE           reduce using rule 3 (outblock_act -> .)
    FOR             reduce using rule 3 (outblock_act -> .)
    BEGIN           reduce using rule 3 (outblock_act -> .)
    READ            reduce using rule 3 (outblock_act -> .)
    WRITE           reduce using rule 3 (outblock_act -> .)
    IF              reduce using rule 3 (outblock_act -> .)
    PERIOD          reduce using rule 3 (outblock_act -> .)

    outblock_act                   shift and go to state 19

state 12

    (9) subprog_decl_part -> subprog_decl_list . SEMICOLON
    (11) subprog_decl_list -> subprog_decl_list . SEMICOLON subprog_decl

    SEMICOLON       shift and go to state 20


state 13

    (12) subprog_decl_list -> subprog_decl .

    SEMICOLON       reduce using rule 12 (subprog_decl_list -> subprog_decl .)


state 14

    (13) subprog_decl -> proc_decl .

    SEMICOLON       reduce using rule 13 (subprog_decl -> proc_decl .)


state 15

    (14) proc_decl -> PROCEDURE . proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock
    (15) proc_decl -> PROCEDURE . proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
    (19) proc_name -> . IDENT

    IDENT           shift and go to state 22

    proc_name                      shift and go to state 21

state 16

    (4) var_decl_part -> var_decl_list SEMICOLON .
    (6) var_decl_list -> var_decl_list SEMICOLON . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IDENT           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WHILE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    FOR             reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    BEGIN           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    READ            reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WRITE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IF              reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    PERIOD          reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    SEMICOLON       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    VAR             shift and go to state 9

    var_decl                       shift and go to state 23

state 17

    (8) var_decl -> VAR id_list .
    (80) id_list -> id_list . COMMA IDENT

    SEMICOLON       reduce using rule 8 (var_decl -> VAR id_list .)
    COMMA           shift and go to state 24


state 18

    (79) id_list -> IDENT .

    COMMA           reduce using rule 79 (id_list -> IDENT .)
    SEMICOLON       reduce using rule 79 (id_list -> IDENT .)
    RPAREN          reduce using rule 79 (id_list -> IDENT .)


state 19

    (2) outblock -> var_decl_part subprog_decl_part outblock_act . statement
    (23) statement -> . assignment_statement
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) statement -> . proc_call_statement
    (28) statement -> . null_statement
    (29) statement -> . block_statement
    (30) statement -> . read_statement
    (31) statement -> . write_statement
    (32) assignment_statement -> . IDENT ASSIGN expression
    (34) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (45) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (47) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (54) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (55) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (60) null_statement -> .
    (56) block_statement -> . BEGIN statement_list END
    (58) read_statement -> . READ LPAREN IDENT RPAREN
    (59) write_statement -> . WRITE LPAREN expression RPAREN
    (35) act_generate_labels -> .
    (53) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    PERIOD          reduce using rule 60 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 35 (act_generate_labels -> .)

    statement                      shift and go to state 25
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    act_generate_labels            shift and go to state 36
    proc_call_name                 shift and go to state 39

state 20

    (9) subprog_decl_part -> subprog_decl_list SEMICOLON .
    (11) subprog_decl_list -> subprog_decl_list SEMICOLON . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) proc_decl -> . PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock
    (15) proc_decl -> . PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock

    IDENT           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WHILE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    FOR             reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    BEGIN           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    READ            reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WRITE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    IF              reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PERIOD          reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PROCEDURE       shift and go to state 15

    subprog_decl                   shift and go to state 43
    proc_decl                      shift and go to state 14

state 21

    (14) proc_decl -> PROCEDURE proc_name . LPAREN proc_act2 RPAREN SEMICOLON inblock
    (15) proc_decl -> PROCEDURE proc_name . LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock

    LPAREN          shift and go to state 44


state 22

    (19) proc_name -> IDENT .

    LPAREN          reduce using rule 19 (proc_name -> IDENT .)


state 23

    (6) var_decl_list -> var_decl_list SEMICOLON var_decl .

    SEMICOLON       reduce using rule 6 (var_decl_list -> var_decl_list SEMICOLON var_decl .)


state 24

    (80) id_list -> id_list COMMA . IDENT

    IDENT           shift and go to state 45


state 25

    (2) outblock -> var_decl_part subprog_decl_part outblock_act statement .

    PERIOD          reduce using rule 2 (outblock -> var_decl_part subprog_decl_part outblock_act statement .)


state 26

    (23) statement -> assignment_statement .

    PERIOD          reduce using rule 23 (statement -> assignment_statement .)
    END             reduce using rule 23 (statement -> assignment_statement .)
    SEMICOLON       reduce using rule 23 (statement -> assignment_statement .)
    ELSE            reduce using rule 23 (statement -> assignment_statement .)


state 27

    (24) statement -> if_statement .

    PERIOD          reduce using rule 24 (statement -> if_statement .)
    END             reduce using rule 24 (statement -> if_statement .)
    SEMICOLON       reduce using rule 24 (statement -> if_statement .)
    ELSE            reduce using rule 24 (statement -> if_statement .)


state 28

    (25) statement -> while_statement .

    PERIOD          reduce using rule 25 (statement -> while_statement .)
    END             reduce using rule 25 (statement -> while_statement .)
    SEMICOLON       reduce using rule 25 (statement -> while_statement .)
    ELSE            reduce using rule 25 (statement -> while_statement .)


state 29

    (26) statement -> for_statement .

    PERIOD          reduce using rule 26 (statement -> for_statement .)
    END             reduce using rule 26 (statement -> for_statement .)
    SEMICOLON       reduce using rule 26 (statement -> for_statement .)
    ELSE            reduce using rule 26 (statement -> for_statement .)


state 30

    (27) statement -> proc_call_statement .

    PERIOD          reduce using rule 27 (statement -> proc_call_statement .)
    END             reduce using rule 27 (statement -> proc_call_statement .)
    SEMICOLON       reduce using rule 27 (statement -> proc_call_statement .)
    ELSE            reduce using rule 27 (statement -> proc_call_statement .)


state 31

    (28) statement -> null_statement .

    PERIOD          reduce using rule 28 (statement -> null_statement .)
    END             reduce using rule 28 (statement -> null_statement .)
    SEMICOLON       reduce using rule 28 (statement -> null_statement .)
    ELSE            reduce using rule 28 (statement -> null_statement .)


state 32

    (29) statement -> block_statement .

    PERIOD          reduce using rule 29 (statement -> block_statement .)
    END             reduce using rule 29 (statement -> block_statement .)
    SEMICOLON       reduce using rule 29 (statement -> block_statement .)
    ELSE            reduce using rule 29 (statement -> block_statement .)


state 33

    (30) statement -> read_statement .

    PERIOD          reduce using rule 30 (statement -> read_statement .)
    END             reduce using rule 30 (statement -> read_statement .)
    SEMICOLON       reduce using rule 30 (statement -> read_statement .)
    ELSE            reduce using rule 30 (statement -> read_statement .)


state 34

    (31) statement -> write_statement .

    PERIOD          reduce using rule 31 (statement -> write_statement .)
    END             reduce using rule 31 (statement -> write_statement .)
    SEMICOLON       reduce using rule 31 (statement -> write_statement .)
    ELSE            reduce using rule 31 (statement -> write_statement .)


state 35

    (32) assignment_statement -> IDENT . ASSIGN expression
    (53) proc_call_name -> IDENT .

    ASSIGN          shift and go to state 46
    LPAREN          reduce using rule 53 (proc_call_name -> IDENT .)


state 36

    (34) if_statement -> act_generate_labels . IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3

    IF              shift and go to state 47


state 37

    (45) while_statement -> WHILE . act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (35) act_generate_labels -> .

    MINUS           reduce using rule 35 (act_generate_labels -> .)
    LPAREN          reduce using rule 35 (act_generate_labels -> .)
    IDENT           reduce using rule 35 (act_generate_labels -> .)
    NUMBER          reduce using rule 35 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 48

state 38

    (47) for_statement -> FOR . act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (35) act_generate_labels -> .

    IDENT           reduce using rule 35 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 49

state 39

    (54) proc_call_statement -> proc_call_name . LPAREN RPAREN
    (55) proc_call_statement -> proc_call_name . LPAREN arg_list RPAREN

    LPAREN          shift and go to state 50


state 40

    (56) block_statement -> BEGIN . statement_list END
    (21) statement_list -> . statement_list SEMICOLON statement
    (22) statement_list -> . statement
    (23) statement -> . assignment_statement
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) statement -> . proc_call_statement
    (28) statement -> . null_statement
    (29) statement -> . block_statement
    (30) statement -> . read_statement
    (31) statement -> . write_statement
    (32) assignment_statement -> . IDENT ASSIGN expression
    (34) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (45) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (47) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (54) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (55) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (60) null_statement -> .
    (56) block_statement -> . BEGIN statement_list END
    (58) read_statement -> . READ LPAREN IDENT RPAREN
    (59) write_statement -> . WRITE LPAREN expression RPAREN
    (35) act_generate_labels -> .
    (53) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    END             reduce using rule 60 (null_statement -> .)
    SEMICOLON       reduce using rule 60 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 35 (act_generate_labels -> .)

    statement_list                 shift and go to state 51
    statement                      shift and go to state 52
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    act_generate_labels            shift and go to state 36
    proc_call_name                 shift and go to state 39

state 41

    (58) read_statement -> READ . LPAREN IDENT RPAREN

    LPAREN          shift and go to state 53


state 42

    (59) write_statement -> WRITE . LPAREN expression RPAREN

    LPAREN          shift and go to state 54


state 43

    (11) subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .

    SEMICOLON       reduce using rule 11 (subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .)


state 44

    (14) proc_decl -> PROCEDURE proc_name LPAREN . proc_act2 RPAREN SEMICOLON inblock
    (15) proc_decl -> PROCEDURE proc_name LPAREN . act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
    (16) proc_act2 -> .
    (18) act_proc_args_set -> .

    RPAREN          reduce using rule 16 (proc_act2 -> .)
    IDENT           reduce using rule 18 (act_proc_args_set -> .)

    proc_act2                      shift and go to state 55
    act_proc_args_set              shift and go to state 56

state 45

    (80) id_list -> id_list COMMA IDENT .

    COMMA           reduce using rule 80 (id_list -> id_list COMMA IDENT .)
    SEMICOLON       reduce using rule 80 (id_list -> id_list COMMA IDENT .)
    RPAREN          reduce using rule 80 (id_list -> id_list COMMA IDENT .)


state 46

    (32) assignment_statement -> IDENT ASSIGN . expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 58
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 47

    (34) if_statement -> act_generate_labels IF . condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (61) condition -> . expression EQ expression
    (62) condition -> . expression NEQ expression
    (63) condition -> . expression LT expression
    (64) condition -> . expression LE expression
    (65) condition -> . expression GT expression
    (66) condition -> . expression GE expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    condition                      shift and go to state 66
    expression                     shift and go to state 67
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 48

    (45) while_statement -> WHILE act_generate_labels . act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (40) act_insert_jump1 -> .

    MINUS           reduce using rule 40 (act_insert_jump1 -> .)
    LPAREN          reduce using rule 40 (act_insert_jump1 -> .)
    IDENT           reduce using rule 40 (act_insert_jump1 -> .)
    NUMBER          reduce using rule 40 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 68

state 49

    (47) for_statement -> FOR act_generate_labels . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    IDENT           shift and go to state 69


state 50

    (54) proc_call_statement -> proc_call_name LPAREN . RPAREN
    (55) proc_call_statement -> proc_call_name LPAREN . arg_list RPAREN
    (51) arg_list -> . expression
    (52) arg_list -> . arg_list COMMA expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    RPAREN          shift and go to state 70
    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    arg_list                       shift and go to state 71
    expression                     shift and go to state 72
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 51

    (56) block_statement -> BEGIN statement_list . END
    (21) statement_list -> statement_list . SEMICOLON statement

    END             shift and go to state 73
    SEMICOLON       shift and go to state 74


state 52

    (22) statement_list -> statement .

    END             reduce using rule 22 (statement_list -> statement .)
    SEMICOLON       reduce using rule 22 (statement_list -> statement .)


state 53

    (58) read_statement -> READ LPAREN . IDENT RPAREN

    IDENT           shift and go to state 75


state 54

    (59) write_statement -> WRITE LPAREN . expression RPAREN
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 76
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 55

    (14) proc_decl -> PROCEDURE proc_name LPAREN proc_act2 . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 77


state 56

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set . id_list act_proc_args_done RPAREN SEMICOLON inblock
    (79) id_list -> . IDENT
    (80) id_list -> . id_list COMMA IDENT

    IDENT           shift and go to state 18

    id_list                        shift and go to state 78

state 57

    (77) var_name -> IDENT .

    MULT            reduce using rule 77 (var_name -> IDENT .)
    DIV             reduce using rule 77 (var_name -> IDENT .)
    PLUS            reduce using rule 77 (var_name -> IDENT .)
    MINUS           reduce using rule 77 (var_name -> IDENT .)
    PERIOD          reduce using rule 77 (var_name -> IDENT .)
    END             reduce using rule 77 (var_name -> IDENT .)
    SEMICOLON       reduce using rule 77 (var_name -> IDENT .)
    ELSE            reduce using rule 77 (var_name -> IDENT .)
    EQ              reduce using rule 77 (var_name -> IDENT .)
    NEQ             reduce using rule 77 (var_name -> IDENT .)
    LT              reduce using rule 77 (var_name -> IDENT .)
    LE              reduce using rule 77 (var_name -> IDENT .)
    GT              reduce using rule 77 (var_name -> IDENT .)
    GE              reduce using rule 77 (var_name -> IDENT .)
    RPAREN          reduce using rule 77 (var_name -> IDENT .)
    COMMA           reduce using rule 77 (var_name -> IDENT .)
    THEN            reduce using rule 77 (var_name -> IDENT .)
    DO              reduce using rule 77 (var_name -> IDENT .)
    TO              reduce using rule 77 (var_name -> IDENT .)


state 58

    (32) assignment_statement -> IDENT ASSIGN expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    PERIOD          reduce using rule 32 (assignment_statement -> IDENT ASSIGN expression .)
    END             reduce using rule 32 (assignment_statement -> IDENT ASSIGN expression .)
    SEMICOLON       reduce using rule 32 (assignment_statement -> IDENT ASSIGN expression .)
    ELSE            reduce using rule 32 (assignment_statement -> IDENT ASSIGN expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 59

    (67) expression -> term .
    (72) term -> term . MULT factor
    (73) term -> term . DIV factor

    PLUS            reduce using rule 67 (expression -> term .)
    MINUS           reduce using rule 67 (expression -> term .)
    PERIOD          reduce using rule 67 (expression -> term .)
    END             reduce using rule 67 (expression -> term .)
    SEMICOLON       reduce using rule 67 (expression -> term .)
    ELSE            reduce using rule 67 (expression -> term .)
    EQ              reduce using rule 67 (expression -> term .)
    NEQ             reduce using rule 67 (expression -> term .)
    LT              reduce using rule 67 (expression -> term .)
    LE              reduce using rule 67 (expression -> term .)
    GT              reduce using rule 67 (expression -> term .)
    GE              reduce using rule 67 (expression -> term .)
    RPAREN          reduce using rule 67 (expression -> term .)
    COMMA           reduce using rule 67 (expression -> term .)
    THEN            reduce using rule 67 (expression -> term .)
    DO              reduce using rule 67 (expression -> term .)
    TO              reduce using rule 67 (expression -> term .)
    MULT            shift and go to state 81
    DIV             shift and go to state 82


state 60

    (68) expression -> MINUS . term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    term                           shift and go to state 83
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 61

    (71) term -> factor .

    MULT            reduce using rule 71 (term -> factor .)
    DIV             reduce using rule 71 (term -> factor .)
    PLUS            reduce using rule 71 (term -> factor .)
    MINUS           reduce using rule 71 (term -> factor .)
    PERIOD          reduce using rule 71 (term -> factor .)
    END             reduce using rule 71 (term -> factor .)
    SEMICOLON       reduce using rule 71 (term -> factor .)
    ELSE            reduce using rule 71 (term -> factor .)
    EQ              reduce using rule 71 (term -> factor .)
    NEQ             reduce using rule 71 (term -> factor .)
    LT              reduce using rule 71 (term -> factor .)
    LE              reduce using rule 71 (term -> factor .)
    GT              reduce using rule 71 (term -> factor .)
    GE              reduce using rule 71 (term -> factor .)
    RPAREN          reduce using rule 71 (term -> factor .)
    COMMA           reduce using rule 71 (term -> factor .)
    THEN            reduce using rule 71 (term -> factor .)
    DO              reduce using rule 71 (term -> factor .)
    TO              reduce using rule 71 (term -> factor .)


state 62

    (74) factor -> var_name .

    MULT            reduce using rule 74 (factor -> var_name .)
    DIV             reduce using rule 74 (factor -> var_name .)
    PLUS            reduce using rule 74 (factor -> var_name .)
    MINUS           reduce using rule 74 (factor -> var_name .)
    PERIOD          reduce using rule 74 (factor -> var_name .)
    END             reduce using rule 74 (factor -> var_name .)
    SEMICOLON       reduce using rule 74 (factor -> var_name .)
    ELSE            reduce using rule 74 (factor -> var_name .)
    EQ              reduce using rule 74 (factor -> var_name .)
    NEQ             reduce using rule 74 (factor -> var_name .)
    LT              reduce using rule 74 (factor -> var_name .)
    LE              reduce using rule 74 (factor -> var_name .)
    GT              reduce using rule 74 (factor -> var_name .)
    GE              reduce using rule 74 (factor -> var_name .)
    RPAREN          reduce using rule 74 (factor -> var_name .)
    COMMA           reduce using rule 74 (factor -> var_name .)
    THEN            reduce using rule 74 (factor -> var_name .)
    DO              reduce using rule 74 (factor -> var_name .)
    TO              reduce using rule 74 (factor -> var_name .)


state 63

    (75) factor -> number .

    MULT            reduce using rule 75 (factor -> number .)
    DIV             reduce using rule 75 (factor -> number .)
    PLUS            reduce using rule 75 (factor -> number .)
    MINUS           reduce using rule 75 (factor -> number .)
    PERIOD          reduce using rule 75 (factor -> number .)
    END             reduce using rule 75 (factor -> number .)
    SEMICOLON       reduce using rule 75 (factor -> number .)
    ELSE            reduce using rule 75 (factor -> number .)
    EQ              reduce using rule 75 (factor -> number .)
    NEQ             reduce using rule 75 (factor -> number .)
    LT              reduce using rule 75 (factor -> number .)
    LE              reduce using rule 75 (factor -> number .)
    GT              reduce using rule 75 (factor -> number .)
    GE              reduce using rule 75 (factor -> number .)
    RPAREN          reduce using rule 75 (factor -> number .)
    COMMA           reduce using rule 75 (factor -> number .)
    THEN            reduce using rule 75 (factor -> number .)
    DO              reduce using rule 75 (factor -> number .)
    TO              reduce using rule 75 (factor -> number .)


state 64

    (76) factor -> LPAREN . expression RPAREN
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 84
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 65

    (78) number -> NUMBER .

    MULT            reduce using rule 78 (number -> NUMBER .)
    DIV             reduce using rule 78 (number -> NUMBER .)
    PLUS            reduce using rule 78 (number -> NUMBER .)
    MINUS           reduce using rule 78 (number -> NUMBER .)
    PERIOD          reduce using rule 78 (number -> NUMBER .)
    END             reduce using rule 78 (number -> NUMBER .)
    SEMICOLON       reduce using rule 78 (number -> NUMBER .)
    ELSE            reduce using rule 78 (number -> NUMBER .)
    EQ              reduce using rule 78 (number -> NUMBER .)
    NEQ             reduce using rule 78 (number -> NUMBER .)
    LT              reduce using rule 78 (number -> NUMBER .)
    LE              reduce using rule 78 (number -> NUMBER .)
    GT              reduce using rule 78 (number -> NUMBER .)
    GE              reduce using rule 78 (number -> NUMBER .)
    RPAREN          reduce using rule 78 (number -> NUMBER .)
    COMMA           reduce using rule 78 (number -> NUMBER .)
    THEN            reduce using rule 78 (number -> NUMBER .)
    DO              reduce using rule 78 (number -> NUMBER .)
    TO              reduce using rule 78 (number -> NUMBER .)


state 66

    (34) if_statement -> act_generate_labels IF condition . act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (36) act_insert_br -> .

    THEN            reduce using rule 36 (act_insert_br -> .)

    act_insert_br                  shift and go to state 85

state 67

    (61) condition -> expression . EQ expression
    (62) condition -> expression . NEQ expression
    (63) condition -> expression . LT expression
    (64) condition -> expression . LE expression
    (65) condition -> expression . GT expression
    (66) condition -> expression . GE expression
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    EQ              shift and go to state 86
    NEQ             shift and go to state 87
    LT              shift and go to state 88
    LE              shift and go to state 89
    GT              shift and go to state 90
    GE              shift and go to state 91
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 68

    (45) while_statement -> WHILE act_generate_labels act_insert_jump1 . act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (37) act_insert_label1 -> .

    MINUS           reduce using rule 37 (act_insert_label1 -> .)
    LPAREN          reduce using rule 37 (act_insert_label1 -> .)
    IDENT           reduce using rule 37 (act_insert_label1 -> .)
    NUMBER          reduce using rule 37 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 92

state 69

    (47) for_statement -> FOR act_generate_labels IDENT . act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (57) act_lookup_prev_ident -> .

    ASSIGN          reduce using rule 57 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 93

state 70

    (54) proc_call_statement -> proc_call_name LPAREN RPAREN .

    PERIOD          reduce using rule 54 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    END             reduce using rule 54 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    SEMICOLON       reduce using rule 54 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    ELSE            reduce using rule 54 (proc_call_statement -> proc_call_name LPAREN RPAREN .)


state 71

    (55) proc_call_statement -> proc_call_name LPAREN arg_list . RPAREN
    (52) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 94
    COMMA           shift and go to state 95


state 72

    (51) arg_list -> expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    RPAREN          reduce using rule 51 (arg_list -> expression .)
    COMMA           reduce using rule 51 (arg_list -> expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 73

    (56) block_statement -> BEGIN statement_list END .

    PERIOD          reduce using rule 56 (block_statement -> BEGIN statement_list END .)
    END             reduce using rule 56 (block_statement -> BEGIN statement_list END .)
    SEMICOLON       reduce using rule 56 (block_statement -> BEGIN statement_list END .)
    ELSE            reduce using rule 56 (block_statement -> BEGIN statement_list END .)


state 74

    (21) statement_list -> statement_list SEMICOLON . statement
    (23) statement -> . assignment_statement
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) statement -> . proc_call_statement
    (28) statement -> . null_statement
    (29) statement -> . block_statement
    (30) statement -> . read_statement
    (31) statement -> . write_statement
    (32) assignment_statement -> . IDENT ASSIGN expression
    (34) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (45) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (47) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (54) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (55) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (60) null_statement -> .
    (56) block_statement -> . BEGIN statement_list END
    (58) read_statement -> . READ LPAREN IDENT RPAREN
    (59) write_statement -> . WRITE LPAREN expression RPAREN
    (35) act_generate_labels -> .
    (53) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    END             reduce using rule 60 (null_statement -> .)
    SEMICOLON       reduce using rule 60 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 35 (act_generate_labels -> .)

    statement                      shift and go to state 96
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    act_generate_labels            shift and go to state 36
    proc_call_name                 shift and go to state 39

state 75

    (58) read_statement -> READ LPAREN IDENT . RPAREN

    RPAREN          shift and go to state 97


state 76

    (59) write_statement -> WRITE LPAREN expression . RPAREN
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    RPAREN          shift and go to state 98
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 77

    (14) proc_decl -> PROCEDURE proc_name LPAREN proc_act2 RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 99


state 78

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list . act_proc_args_done RPAREN SEMICOLON inblock
    (80) id_list -> id_list . COMMA IDENT
    (17) act_proc_args_done -> .

    COMMA           shift and go to state 24
    RPAREN          reduce using rule 17 (act_proc_args_done -> .)

    act_proc_args_done             shift and go to state 100

state 79

    (69) expression -> expression PLUS . term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    term                           shift and go to state 101
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 80

    (70) expression -> expression MINUS . term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    term                           shift and go to state 102
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 81

    (72) term -> term MULT . factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    factor                         shift and go to state 103
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 82

    (73) term -> term DIV . factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    factor                         shift and go to state 104
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 83

    (68) expression -> MINUS term .
    (72) term -> term . MULT factor
    (73) term -> term . DIV factor

    PLUS            reduce using rule 68 (expression -> MINUS term .)
    MINUS           reduce using rule 68 (expression -> MINUS term .)
    PERIOD          reduce using rule 68 (expression -> MINUS term .)
    END             reduce using rule 68 (expression -> MINUS term .)
    SEMICOLON       reduce using rule 68 (expression -> MINUS term .)
    ELSE            reduce using rule 68 (expression -> MINUS term .)
    EQ              reduce using rule 68 (expression -> MINUS term .)
    NEQ             reduce using rule 68 (expression -> MINUS term .)
    LT              reduce using rule 68 (expression -> MINUS term .)
    LE              reduce using rule 68 (expression -> MINUS term .)
    GT              reduce using rule 68 (expression -> MINUS term .)
    GE              reduce using rule 68 (expression -> MINUS term .)
    RPAREN          reduce using rule 68 (expression -> MINUS term .)
    COMMA           reduce using rule 68 (expression -> MINUS term .)
    THEN            reduce using rule 68 (expression -> MINUS term .)
    DO              reduce using rule 68 (expression -> MINUS term .)
    TO              reduce using rule 68 (expression -> MINUS term .)
    MULT            shift and go to state 81
    DIV             shift and go to state 82


state 84

    (76) factor -> LPAREN expression . RPAREN
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    RPAREN          shift and go to state 105
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 85

    (34) if_statement -> act_generate_labels IF condition act_insert_br . THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3

    THEN            shift and go to state 106


state 86

    (61) condition -> expression EQ . expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 107
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 87

    (62) condition -> expression NEQ . expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 108
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 88

    (63) condition -> expression LT . expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 109
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 89

    (64) condition -> expression LE . expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 110
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 90

    (65) condition -> expression GT . expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 111
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 91

    (66) condition -> expression GE . expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 112
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 92

    (45) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 . condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (61) condition -> . expression EQ expression
    (62) condition -> . expression NEQ expression
    (63) condition -> . expression LT expression
    (64) condition -> . expression LE expression
    (65) condition -> . expression GT expression
    (66) condition -> . expression GE expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    condition                      shift and go to state 113
    expression                     shift and go to state 67
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 93

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident . ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    ASSIGN          shift and go to state 114


state 94

    (55) proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .

    PERIOD          reduce using rule 55 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)
    END             reduce using rule 55 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)
    SEMICOLON       reduce using rule 55 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)
    ELSE            reduce using rule 55 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)


state 95

    (52) arg_list -> arg_list COMMA . expression
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 115
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 96

    (21) statement_list -> statement_list SEMICOLON statement .

    END             reduce using rule 21 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 21 (statement_list -> statement_list SEMICOLON statement .)


state 97

    (58) read_statement -> READ LPAREN IDENT RPAREN .

    PERIOD          reduce using rule 58 (read_statement -> READ LPAREN IDENT RPAREN .)
    END             reduce using rule 58 (read_statement -> READ LPAREN IDENT RPAREN .)
    SEMICOLON       reduce using rule 58 (read_statement -> READ LPAREN IDENT RPAREN .)
    ELSE            reduce using rule 58 (read_statement -> READ LPAREN IDENT RPAREN .)


state 98

    (59) write_statement -> WRITE LPAREN expression RPAREN .

    PERIOD          reduce using rule 59 (write_statement -> WRITE LPAREN expression RPAREN .)
    END             reduce using rule 59 (write_statement -> WRITE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 59 (write_statement -> WRITE LPAREN expression RPAREN .)
    ELSE            reduce using rule 59 (write_statement -> WRITE LPAREN expression RPAREN .)


state 99

    (14) proc_decl -> PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON . inblock
    (20) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 116
    var_decl_part                  shift and go to state 117
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 100

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 118


state 101

    (69) expression -> expression PLUS term .
    (72) term -> term . MULT factor
    (73) term -> term . DIV factor

    PLUS            reduce using rule 69 (expression -> expression PLUS term .)
    MINUS           reduce using rule 69 (expression -> expression PLUS term .)
    PERIOD          reduce using rule 69 (expression -> expression PLUS term .)
    END             reduce using rule 69 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 69 (expression -> expression PLUS term .)
    ELSE            reduce using rule 69 (expression -> expression PLUS term .)
    EQ              reduce using rule 69 (expression -> expression PLUS term .)
    NEQ             reduce using rule 69 (expression -> expression PLUS term .)
    LT              reduce using rule 69 (expression -> expression PLUS term .)
    LE              reduce using rule 69 (expression -> expression PLUS term .)
    GT              reduce using rule 69 (expression -> expression PLUS term .)
    GE              reduce using rule 69 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 69 (expression -> expression PLUS term .)
    COMMA           reduce using rule 69 (expression -> expression PLUS term .)
    THEN            reduce using rule 69 (expression -> expression PLUS term .)
    DO              reduce using rule 69 (expression -> expression PLUS term .)
    TO              reduce using rule 69 (expression -> expression PLUS term .)
    MULT            shift and go to state 81
    DIV             shift and go to state 82


state 102

    (70) expression -> expression MINUS term .
    (72) term -> term . MULT factor
    (73) term -> term . DIV factor

    PLUS            reduce using rule 70 (expression -> expression MINUS term .)
    MINUS           reduce using rule 70 (expression -> expression MINUS term .)
    PERIOD          reduce using rule 70 (expression -> expression MINUS term .)
    END             reduce using rule 70 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 70 (expression -> expression MINUS term .)
    ELSE            reduce using rule 70 (expression -> expression MINUS term .)
    EQ              reduce using rule 70 (expression -> expression MINUS term .)
    NEQ             reduce using rule 70 (expression -> expression MINUS term .)
    LT              reduce using rule 70 (expression -> expression MINUS term .)
    LE              reduce using rule 70 (expression -> expression MINUS term .)
    GT              reduce using rule 70 (expression -> expression MINUS term .)
    GE              reduce using rule 70 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 70 (expression -> expression MINUS term .)
    COMMA           reduce using rule 70 (expression -> expression MINUS term .)
    THEN            reduce using rule 70 (expression -> expression MINUS term .)
    DO              reduce using rule 70 (expression -> expression MINUS term .)
    TO              reduce using rule 70 (expression -> expression MINUS term .)
    MULT            shift and go to state 81
    DIV             shift and go to state 82


state 103

    (72) term -> term MULT factor .

    MULT            reduce using rule 72 (term -> term MULT factor .)
    DIV             reduce using rule 72 (term -> term MULT factor .)
    PLUS            reduce using rule 72 (term -> term MULT factor .)
    MINUS           reduce using rule 72 (term -> term MULT factor .)
    PERIOD          reduce using rule 72 (term -> term MULT factor .)
    END             reduce using rule 72 (term -> term MULT factor .)
    SEMICOLON       reduce using rule 72 (term -> term MULT factor .)
    ELSE            reduce using rule 72 (term -> term MULT factor .)
    EQ              reduce using rule 72 (term -> term MULT factor .)
    NEQ             reduce using rule 72 (term -> term MULT factor .)
    LT              reduce using rule 72 (term -> term MULT factor .)
    LE              reduce using rule 72 (term -> term MULT factor .)
    GT              reduce using rule 72 (term -> term MULT factor .)
    GE              reduce using rule 72 (term -> term MULT factor .)
    RPAREN          reduce using rule 72 (term -> term MULT factor .)
    COMMA           reduce using rule 72 (term -> term MULT factor .)
    THEN            reduce using rule 72 (term -> term MULT factor .)
    DO              reduce using rule 72 (term -> term MULT factor .)
    TO              reduce using rule 72 (term -> term MULT factor .)


state 104

    (73) term -> term DIV factor .

    MULT            reduce using rule 73 (term -> term DIV factor .)
    DIV             reduce using rule 73 (term -> term DIV factor .)
    PLUS            reduce using rule 73 (term -> term DIV factor .)
    MINUS           reduce using rule 73 (term -> term DIV factor .)
    PERIOD          reduce using rule 73 (term -> term DIV factor .)
    END             reduce using rule 73 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 73 (term -> term DIV factor .)
    ELSE            reduce using rule 73 (term -> term DIV factor .)
    EQ              reduce using rule 73 (term -> term DIV factor .)
    NEQ             reduce using rule 73 (term -> term DIV factor .)
    LT              reduce using rule 73 (term -> term DIV factor .)
    LE              reduce using rule 73 (term -> term DIV factor .)
    GT              reduce using rule 73 (term -> term DIV factor .)
    GE              reduce using rule 73 (term -> term DIV factor .)
    RPAREN          reduce using rule 73 (term -> term DIV factor .)
    COMMA           reduce using rule 73 (term -> term DIV factor .)
    THEN            reduce using rule 73 (term -> term DIV factor .)
    DO              reduce using rule 73 (term -> term DIV factor .)
    TO              reduce using rule 73 (term -> term DIV factor .)


state 105

    (76) factor -> LPAREN expression RPAREN .

    MULT            reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    PERIOD          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    THEN            reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 76 (factor -> LPAREN expression RPAREN .)


state 106

    (34) if_statement -> act_generate_labels IF condition act_insert_br THEN . act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (37) act_insert_label1 -> .

    IDENT           reduce using rule 37 (act_insert_label1 -> .)
    WHILE           reduce using rule 37 (act_insert_label1 -> .)
    FOR             reduce using rule 37 (act_insert_label1 -> .)
    BEGIN           reduce using rule 37 (act_insert_label1 -> .)
    READ            reduce using rule 37 (act_insert_label1 -> .)
    WRITE           reduce using rule 37 (act_insert_label1 -> .)
    ELSE            reduce using rule 37 (act_insert_label1 -> .)
    IF              reduce using rule 37 (act_insert_label1 -> .)
    PERIOD          reduce using rule 37 (act_insert_label1 -> .)
    END             reduce using rule 37 (act_insert_label1 -> .)
    SEMICOLON       reduce using rule 37 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 119

state 107

    (61) condition -> expression EQ expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    THEN            reduce using rule 61 (condition -> expression EQ expression .)
    DO              reduce using rule 61 (condition -> expression EQ expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 108

    (62) condition -> expression NEQ expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    THEN            reduce using rule 62 (condition -> expression NEQ expression .)
    DO              reduce using rule 62 (condition -> expression NEQ expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 109

    (63) condition -> expression LT expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    THEN            reduce using rule 63 (condition -> expression LT expression .)
    DO              reduce using rule 63 (condition -> expression LT expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 110

    (64) condition -> expression LE expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    THEN            reduce using rule 64 (condition -> expression LE expression .)
    DO              reduce using rule 64 (condition -> expression LE expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 111

    (65) condition -> expression GT expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    THEN            reduce using rule 65 (condition -> expression GT expression .)
    DO              reduce using rule 65 (condition -> expression GT expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 112

    (66) condition -> expression GE expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    THEN            reduce using rule 66 (condition -> expression GE expression .)
    DO              reduce using rule 66 (condition -> expression GE expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 113

    (45) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition . act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (46) act_insert_br_while -> .

    DO              reduce using rule 46 (act_insert_br_while -> .)

    act_insert_br_while            shift and go to state 120

state 114

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN . expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 121
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 115

    (52) arg_list -> arg_list COMMA expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    RPAREN          reduce using rule 52 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 52 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80


state 116

    (14) proc_decl -> PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 14 (proc_decl -> PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock .)


state 117

    (20) inblock -> var_decl_part . statement
    (23) statement -> . assignment_statement
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) statement -> . proc_call_statement
    (28) statement -> . null_statement
    (29) statement -> . block_statement
    (30) statement -> . read_statement
    (31) statement -> . write_statement
    (32) assignment_statement -> . IDENT ASSIGN expression
    (34) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (45) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (47) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (54) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (55) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (60) null_statement -> .
    (56) block_statement -> . BEGIN statement_list END
    (58) read_statement -> . READ LPAREN IDENT RPAREN
    (59) write_statement -> . WRITE LPAREN expression RPAREN
    (35) act_generate_labels -> .
    (53) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    SEMICOLON       reduce using rule 60 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 35 (act_generate_labels -> .)

    statement                      shift and go to state 122
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    act_generate_labels            shift and go to state 36
    proc_call_name                 shift and go to state 39

state 118

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 123


state 119

    (34) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 . statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (23) statement -> . assignment_statement
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) statement -> . proc_call_statement
    (28) statement -> . null_statement
    (29) statement -> . block_statement
    (30) statement -> . read_statement
    (31) statement -> . write_statement
    (32) assignment_statement -> . IDENT ASSIGN expression
    (34) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (45) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (47) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (54) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (55) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (60) null_statement -> .
    (56) block_statement -> . BEGIN statement_list END
    (58) read_statement -> . READ LPAREN IDENT RPAREN
    (59) write_statement -> . WRITE LPAREN expression RPAREN
    (35) act_generate_labels -> .
    (53) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 60 (null_statement -> .)
    PERIOD          reduce using rule 60 (null_statement -> .)
    END             reduce using rule 60 (null_statement -> .)
    SEMICOLON       reduce using rule 60 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 35 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 36
    statement                      shift and go to state 124
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 120

    (45) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while . DO act_insert_label2 statement act_insert_jump1 act_insert_label3

    DO              shift and go to state 125


state 121

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression . act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term
    (33) act_assign_ident -> .

    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TO              reduce using rule 33 (act_assign_ident -> .)

    act_assign_ident               shift and go to state 126

state 122

    (20) inblock -> var_decl_part statement .

    SEMICOLON       reduce using rule 20 (inblock -> var_decl_part statement .)


state 123

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON . inblock
    (20) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 127
    var_decl_part                  shift and go to state 117
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 124

    (34) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement . act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (42) act_insert_jump3 -> .

    ELSE            reduce using rule 42 (act_insert_jump3 -> .)
    PERIOD          reduce using rule 42 (act_insert_jump3 -> .)
    END             reduce using rule 42 (act_insert_jump3 -> .)
    SEMICOLON       reduce using rule 42 (act_insert_jump3 -> .)

    act_insert_jump3               shift and go to state 128

state 125

    (45) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO . act_insert_label2 statement act_insert_jump1 act_insert_label3
    (38) act_insert_label2 -> .

    IDENT           reduce using rule 38 (act_insert_label2 -> .)
    WHILE           reduce using rule 38 (act_insert_label2 -> .)
    FOR             reduce using rule 38 (act_insert_label2 -> .)
    BEGIN           reduce using rule 38 (act_insert_label2 -> .)
    READ            reduce using rule 38 (act_insert_label2 -> .)
    WRITE           reduce using rule 38 (act_insert_label2 -> .)
    IF              reduce using rule 38 (act_insert_label2 -> .)
    PERIOD          reduce using rule 38 (act_insert_label2 -> .)
    END             reduce using rule 38 (act_insert_label2 -> .)
    SEMICOLON       reduce using rule 38 (act_insert_label2 -> .)
    ELSE            reduce using rule 38 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 129

state 126

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident . act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (40) act_insert_jump1 -> .

    TO              reduce using rule 40 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 130

state 127

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 15 (proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock .)


state 128

    (34) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 . act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (38) act_insert_label2 -> .

    ELSE            reduce using rule 38 (act_insert_label2 -> .)
    PERIOD          reduce using rule 38 (act_insert_label2 -> .)
    END             reduce using rule 38 (act_insert_label2 -> .)
    SEMICOLON       reduce using rule 38 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 131

state 129

    (45) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 . statement act_insert_jump1 act_insert_label3
    (23) statement -> . assignment_statement
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) statement -> . proc_call_statement
    (28) statement -> . null_statement
    (29) statement -> . block_statement
    (30) statement -> . read_statement
    (31) statement -> . write_statement
    (32) assignment_statement -> . IDENT ASSIGN expression
    (34) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (45) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (47) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (54) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (55) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (60) null_statement -> .
    (56) block_statement -> . BEGIN statement_list END
    (58) read_statement -> . READ LPAREN IDENT RPAREN
    (59) write_statement -> . WRITE LPAREN expression RPAREN
    (35) act_generate_labels -> .
    (53) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 60 (null_statement -> .)
    PERIOD          reduce using rule 60 (null_statement -> .)
    END             reduce using rule 60 (null_statement -> .)
    SEMICOLON       reduce using rule 60 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 35 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 36
    statement                      shift and go to state 132
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 130

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 . act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (37) act_insert_label1 -> .

    TO              reduce using rule 37 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 133

state 131

    (34) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 . else_statement act_insert_jump3 act_insert_label3
    (43) else_statement -> . ELSE statement
    (44) else_statement -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 135
    PERIOD          reduce using rule 44 (else_statement -> .)
    END             reduce using rule 44 (else_statement -> .)
    SEMICOLON       reduce using rule 44 (else_statement -> .)

  ! ELSE            [ reduce using rule 44 (else_statement -> .) ]

    else_statement                 shift and go to state 134

state 132

    (45) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement . act_insert_jump1 act_insert_label3
    (40) act_insert_jump1 -> .

    PERIOD          reduce using rule 40 (act_insert_jump1 -> .)
    END             reduce using rule 40 (act_insert_jump1 -> .)
    SEMICOLON       reduce using rule 40 (act_insert_jump1 -> .)
    ELSE            reduce using rule 40 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 136

state 133

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 . TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    TO              shift and go to state 137


state 134

    (34) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement . act_insert_jump3 act_insert_label3
    (42) act_insert_jump3 -> .

    PERIOD          reduce using rule 42 (act_insert_jump3 -> .)
    END             reduce using rule 42 (act_insert_jump3 -> .)
    SEMICOLON       reduce using rule 42 (act_insert_jump3 -> .)
    ELSE            reduce using rule 42 (act_insert_jump3 -> .)

    act_insert_jump3               shift and go to state 138

state 135

    (43) else_statement -> ELSE . statement
    (23) statement -> . assignment_statement
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) statement -> . proc_call_statement
    (28) statement -> . null_statement
    (29) statement -> . block_statement
    (30) statement -> . read_statement
    (31) statement -> . write_statement
    (32) assignment_statement -> . IDENT ASSIGN expression
    (34) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (45) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (47) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (54) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (55) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (60) null_statement -> .
    (56) block_statement -> . BEGIN statement_list END
    (58) read_statement -> . READ LPAREN IDENT RPAREN
    (59) write_statement -> . WRITE LPAREN expression RPAREN
    (35) act_generate_labels -> .
    (53) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 60 (null_statement -> .)
    PERIOD          reduce using rule 60 (null_statement -> .)
    END             reduce using rule 60 (null_statement -> .)
    SEMICOLON       reduce using rule 60 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 35 (act_generate_labels -> .)

    statement                      shift and go to state 139
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    act_generate_labels            shift and go to state 36
    proc_call_name                 shift and go to state 39

state 136

    (45) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 . act_insert_label3
    (39) act_insert_label3 -> .

    PERIOD          reduce using rule 39 (act_insert_label3 -> .)
    END             reduce using rule 39 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 39 (act_insert_label3 -> .)
    ELSE            reduce using rule 39 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 140

state 137

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO . expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (67) expression -> . term
    (68) expression -> . MINUS term
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) term -> . factor
    (72) term -> . term MULT factor
    (73) term -> . term DIV factor
    (74) factor -> . var_name
    (75) factor -> . number
    (76) factor -> . LPAREN expression RPAREN
    (77) var_name -> . IDENT
    (78) number -> . NUMBER

    MINUS           shift and go to state 60
    LPAREN          shift and go to state 64
    IDENT           shift and go to state 57
    NUMBER          shift and go to state 65

    expression                     shift and go to state 141
    term                           shift and go to state 59
    factor                         shift and go to state 61
    var_name                       shift and go to state 62
    number                         shift and go to state 63

state 138

    (34) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 . act_insert_label3
    (39) act_insert_label3 -> .

    PERIOD          reduce using rule 39 (act_insert_label3 -> .)
    END             reduce using rule 39 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 39 (act_insert_label3 -> .)
    ELSE            reduce using rule 39 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 142

state 139

    (43) else_statement -> ELSE statement .

    ELSE            reduce using rule 43 (else_statement -> ELSE statement .)
    PERIOD          reduce using rule 43 (else_statement -> ELSE statement .)
    END             reduce using rule 43 (else_statement -> ELSE statement .)
    SEMICOLON       reduce using rule 43 (else_statement -> ELSE statement .)


state 140

    (45) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .

    PERIOD          reduce using rule 45 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    END             reduce using rule 45 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    SEMICOLON       reduce using rule 45 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    ELSE            reduce using rule 45 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)


state 141

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression . act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term
    (48) act_insert_br_for -> .

    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    DO              reduce using rule 48 (act_insert_br_for -> .)

    act_insert_br_for              shift and go to state 143

state 142

    (34) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .

    PERIOD          reduce using rule 34 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    END             reduce using rule 34 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    SEMICOLON       reduce using rule 34 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    ELSE            reduce using rule 34 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)


state 143

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for . act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (38) act_insert_label2 -> .

    DO              reduce using rule 38 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 144

state 144

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 . DO statement act_increment_itr act_insert_jump1 act_insert_label3

    DO              shift and go to state 145


state 145

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO . statement act_increment_itr act_insert_jump1 act_insert_label3
    (23) statement -> . assignment_statement
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) statement -> . proc_call_statement
    (28) statement -> . null_statement
    (29) statement -> . block_statement
    (30) statement -> . read_statement
    (31) statement -> . write_statement
    (32) assignment_statement -> . IDENT ASSIGN expression
    (34) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (45) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (47) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (54) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (55) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (60) null_statement -> .
    (56) block_statement -> . BEGIN statement_list END
    (58) read_statement -> . READ LPAREN IDENT RPAREN
    (59) write_statement -> . WRITE LPAREN expression RPAREN
    (35) act_generate_labels -> .
    (53) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 60 (null_statement -> .)
    PERIOD          reduce using rule 60 (null_statement -> .)
    END             reduce using rule 60 (null_statement -> .)
    SEMICOLON       reduce using rule 60 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42
    IF              reduce using rule 35 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 36
    statement                      shift and go to state 146
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 146

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement . act_increment_itr act_insert_jump1 act_insert_label3
    (49) act_increment_itr -> .

    PERIOD          reduce using rule 49 (act_increment_itr -> .)
    END             reduce using rule 49 (act_increment_itr -> .)
    SEMICOLON       reduce using rule 49 (act_increment_itr -> .)
    ELSE            reduce using rule 49 (act_increment_itr -> .)

    act_increment_itr              shift and go to state 147

state 147

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr . act_insert_jump1 act_insert_label3
    (40) act_insert_jump1 -> .

    PERIOD          reduce using rule 40 (act_insert_jump1 -> .)
    END             reduce using rule 40 (act_insert_jump1 -> .)
    SEMICOLON       reduce using rule 40 (act_insert_jump1 -> .)
    ELSE            reduce using rule 40 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 148

state 148

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 . act_insert_label3
    (39) act_insert_label3 -> .

    PERIOD          reduce using rule 39 (act_insert_label3 -> .)
    END             reduce using rule 39 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 39 (act_insert_label3 -> .)
    ELSE            reduce using rule 39 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 149

state 149

    (47) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .

    PERIOD          reduce using rule 47 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    END             reduce using rule 47 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    SEMICOLON       reduce using rule 47 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    ELSE            reduce using rule 47 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 131 resolved as shift

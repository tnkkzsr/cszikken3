Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FUNCTION
    INTERVAL
    LBRACKET
    RBRACKET

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM IDENT SEMICOLON outblock PERIOD
Rule 2     outblock -> var_decl_part subprog_decl_part outblock_act statement
Rule 3     outblock_act -> <empty>
Rule 4     var_decl_part -> var_decl_list SEMICOLON
Rule 5     var_decl_part -> <empty>
Rule 6     var_decl_list -> var_decl_list SEMICOLON var_decl
Rule 7     var_decl_list -> var_decl
Rule 8     var_decl -> VAR id_list
Rule 9     subprog_decl_part -> subprog_decl_list SEMICOLON
Rule 10    subprog_decl_part -> <empty>
Rule 11    subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl
Rule 12    subprog_decl_list -> subprog_decl
Rule 13    subprog_decl -> proc_decl
Rule 14    proc_decl -> PROCEDURE proc_name LPAREN RPAREN SEMICOLON inblock
Rule 15    proc_name -> IDENT
Rule 16    inblock -> var_decl_part statement
Rule 17    statement_list -> statement_list SEMICOLON statement
Rule 18    statement_list -> statement
Rule 19    statement -> assignment_statement
Rule 20    statement -> if_statement
Rule 21    statement -> while_statement
Rule 22    statement -> for_statement
Rule 23    statement -> proc_call_statement
Rule 24    statement -> null_statement
Rule 25    statement -> block_statement
Rule 26    statement -> read_statement
Rule 27    statement -> write_statement
Rule 28    assignment_statement -> IDENT ASSIGN expression
Rule 29    if_statement -> IF condition THEN statement else_statement
Rule 30    else_statement -> ELSE statement
Rule 31    else_statement -> <empty>
Rule 32    while_statement -> WHILE condition DO statement
Rule 33    for_statement -> FOR IDENT ASSIGN expression for_act1 TO expression DO statement
Rule 34    for_act1 -> <empty>
Rule 35    proc_call_statement -> proc_call_name LPAREN RPAREN
Rule 36    proc_call_name -> IDENT
Rule 37    block_statement -> BEGIN statement_list END
Rule 38    read_statement -> READ LPAREN IDENT RPAREN
Rule 39    write_statement -> WRITE LPAREN expression RPAREN
Rule 40    null_statement -> <empty>
Rule 41    condition -> expression EQ expression
Rule 42    condition -> expression NEQ expression
Rule 43    condition -> expression LT expression
Rule 44    condition -> expression LE expression
Rule 45    condition -> expression GT expression
Rule 46    condition -> expression GE expression
Rule 47    expression -> term
Rule 48    expression -> MINUS term
Rule 49    expression -> expression PLUS term
Rule 50    expression -> expression MINUS term
Rule 51    term -> factor
Rule 52    term -> term MULT factor
Rule 53    term -> term DIV factor
Rule 54    factor -> var_name
Rule 55    factor -> number
Rule 56    factor -> LPAREN expression RPAREN
Rule 57    var_name -> IDENT
Rule 58    number -> NUMBER
Rule 59    id_list -> IDENT
Rule 60    id_list -> id_list COMMA IDENT

Terminals, with rules where they appear

ASSIGN               : 28 33
BEGIN                : 37
COMMA                : 60
DIV                  : 53
DO                   : 32 33
ELSE                 : 30
END                  : 37
EQ                   : 41
FOR                  : 33
FUNCTION             : 
GE                   : 46
GT                   : 45
IDENT                : 1 15 28 33 36 38 57 59 60
IF                   : 29
INTERVAL             : 
LBRACKET             : 
LE                   : 44
LPAREN               : 14 35 38 39 56
LT                   : 43
MINUS                : 48 50
MULT                 : 52
NEQ                  : 42
NUMBER               : 58
PERIOD               : 1
PLUS                 : 49
PROCEDURE            : 14
PROGRAM              : 1
RBRACKET             : 
READ                 : 38
RPAREN               : 14 35 38 39 56
SEMICOLON            : 1 4 6 9 11 14 17
THEN                 : 29
TO                   : 33
VAR                  : 8
WHILE                : 32
WRITE                : 39
error                : 

Nonterminals, with rules where they appear

assignment_statement : 19
block_statement      : 25
condition            : 29 32
else_statement       : 29
expression           : 28 33 33 39 41 41 42 42 43 43 44 44 45 45 46 46 49 50 56
factor               : 51 52 53
for_act1             : 33
for_statement        : 22
id_list              : 8 60
if_statement         : 20
inblock              : 14
null_statement       : 24
number               : 55
outblock             : 1
outblock_act         : 2
proc_call_name       : 35
proc_call_statement  : 23
proc_decl            : 13
proc_name            : 14
program              : 0
read_statement       : 26
statement            : 2 16 17 18 29 30 32 33
statement_list       : 17 37
subprog_decl         : 11 12
subprog_decl_list    : 9 11
subprog_decl_part    : 2
term                 : 47 48 49 50 52 53
var_decl             : 6 7
var_decl_list        : 4 6
var_decl_part        : 2 16
var_name             : 54
while_statement      : 21
write_statement      : 27

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM IDENT SEMICOLON outblock PERIOD

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . IDENT SEMICOLON outblock PERIOD

    IDENT           shift and go to state 3


state 3

    (1) program -> PROGRAM IDENT . SEMICOLON outblock PERIOD

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM IDENT SEMICOLON . outblock PERIOD
    (2) outblock -> . var_decl_part subprog_decl_part outblock_act statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 5 (var_decl_part -> .)
    IDENT           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    PERIOD          reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    outblock                       shift and go to state 5
    var_decl_part                  shift and go to state 6
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 5

    (1) program -> PROGRAM IDENT SEMICOLON outblock . PERIOD

    PERIOD          shift and go to state 10


state 6

    (2) outblock -> var_decl_part . subprog_decl_part outblock_act statement
    (9) subprog_decl_part -> . subprog_decl_list SEMICOLON
    (10) subprog_decl_part -> .
    (11) subprog_decl_list -> . subprog_decl_list SEMICOLON subprog_decl
    (12) subprog_decl_list -> . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) proc_decl -> . PROCEDURE proc_name LPAREN RPAREN SEMICOLON inblock

    IDENT           reduce using rule 10 (subprog_decl_part -> .)
    IF              reduce using rule 10 (subprog_decl_part -> .)
    WHILE           reduce using rule 10 (subprog_decl_part -> .)
    FOR             reduce using rule 10 (subprog_decl_part -> .)
    BEGIN           reduce using rule 10 (subprog_decl_part -> .)
    READ            reduce using rule 10 (subprog_decl_part -> .)
    WRITE           reduce using rule 10 (subprog_decl_part -> .)
    PERIOD          reduce using rule 10 (subprog_decl_part -> .)
    PROCEDURE       shift and go to state 15

    subprog_decl_part              shift and go to state 11
    subprog_decl_list              shift and go to state 12
    subprog_decl                   shift and go to state 13
    proc_decl                      shift and go to state 14

state 7

    (4) var_decl_part -> var_decl_list . SEMICOLON
    (6) var_decl_list -> var_decl_list . SEMICOLON var_decl

    SEMICOLON       shift and go to state 16


state 8

    (7) var_decl_list -> var_decl .

    SEMICOLON       reduce using rule 7 (var_decl_list -> var_decl .)


state 9

    (8) var_decl -> VAR . id_list
    (59) id_list -> . IDENT
    (60) id_list -> . id_list COMMA IDENT

    IDENT           shift and go to state 18

    id_list                        shift and go to state 17

state 10

    (1) program -> PROGRAM IDENT SEMICOLON outblock PERIOD .

    $end            reduce using rule 1 (program -> PROGRAM IDENT SEMICOLON outblock PERIOD .)


state 11

    (2) outblock -> var_decl_part subprog_decl_part . outblock_act statement
    (3) outblock_act -> .

    IDENT           reduce using rule 3 (outblock_act -> .)
    IF              reduce using rule 3 (outblock_act -> .)
    WHILE           reduce using rule 3 (outblock_act -> .)
    FOR             reduce using rule 3 (outblock_act -> .)
    BEGIN           reduce using rule 3 (outblock_act -> .)
    READ            reduce using rule 3 (outblock_act -> .)
    WRITE           reduce using rule 3 (outblock_act -> .)
    PERIOD          reduce using rule 3 (outblock_act -> .)

    outblock_act                   shift and go to state 19

state 12

    (9) subprog_decl_part -> subprog_decl_list . SEMICOLON
    (11) subprog_decl_list -> subprog_decl_list . SEMICOLON subprog_decl

    SEMICOLON       shift and go to state 20


state 13

    (12) subprog_decl_list -> subprog_decl .

    SEMICOLON       reduce using rule 12 (subprog_decl_list -> subprog_decl .)


state 14

    (13) subprog_decl -> proc_decl .

    SEMICOLON       reduce using rule 13 (subprog_decl -> proc_decl .)


state 15

    (14) proc_decl -> PROCEDURE . proc_name LPAREN RPAREN SEMICOLON inblock
    (15) proc_name -> . IDENT

    IDENT           shift and go to state 22

    proc_name                      shift and go to state 21

state 16

    (4) var_decl_part -> var_decl_list SEMICOLON .
    (6) var_decl_list -> var_decl_list SEMICOLON . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IDENT           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IF              reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WHILE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    FOR             reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    BEGIN           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    READ            reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WRITE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    PERIOD          reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    SEMICOLON       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    VAR             shift and go to state 9

    var_decl                       shift and go to state 23

state 17

    (8) var_decl -> VAR id_list .
    (60) id_list -> id_list . COMMA IDENT

    SEMICOLON       reduce using rule 8 (var_decl -> VAR id_list .)
    COMMA           shift and go to state 24


state 18

    (59) id_list -> IDENT .

    COMMA           reduce using rule 59 (id_list -> IDENT .)
    SEMICOLON       reduce using rule 59 (id_list -> IDENT .)


state 19

    (2) outblock -> var_decl_part subprog_decl_part outblock_act . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (29) if_statement -> . IF condition THEN statement else_statement
    (32) while_statement -> . WHILE condition DO statement
    (33) for_statement -> . FOR IDENT ASSIGN expression for_act1 TO expression DO statement
    (35) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (40) null_statement -> .
    (37) block_statement -> . BEGIN statement_list END
    (38) read_statement -> . READ LPAREN IDENT RPAREN
    (39) write_statement -> . WRITE LPAREN expression RPAREN
    (36) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    PERIOD          reduce using rule 40 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42

    statement                      shift and go to state 25
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 20

    (9) subprog_decl_part -> subprog_decl_list SEMICOLON .
    (11) subprog_decl_list -> subprog_decl_list SEMICOLON . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) proc_decl -> . PROCEDURE proc_name LPAREN RPAREN SEMICOLON inblock

    IDENT           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    IF              reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WHILE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    FOR             reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    BEGIN           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    READ            reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WRITE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PERIOD          reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PROCEDURE       shift and go to state 15

    subprog_decl                   shift and go to state 43
    proc_decl                      shift and go to state 14

state 21

    (14) proc_decl -> PROCEDURE proc_name . LPAREN RPAREN SEMICOLON inblock

    LPAREN          shift and go to state 44


state 22

    (15) proc_name -> IDENT .

    LPAREN          reduce using rule 15 (proc_name -> IDENT .)


state 23

    (6) var_decl_list -> var_decl_list SEMICOLON var_decl .

    SEMICOLON       reduce using rule 6 (var_decl_list -> var_decl_list SEMICOLON var_decl .)


state 24

    (60) id_list -> id_list COMMA . IDENT

    IDENT           shift and go to state 45


state 25

    (2) outblock -> var_decl_part subprog_decl_part outblock_act statement .

    PERIOD          reduce using rule 2 (outblock -> var_decl_part subprog_decl_part outblock_act statement .)


state 26

    (19) statement -> assignment_statement .

    PERIOD          reduce using rule 19 (statement -> assignment_statement .)
    END             reduce using rule 19 (statement -> assignment_statement .)
    SEMICOLON       reduce using rule 19 (statement -> assignment_statement .)
    ELSE            reduce using rule 19 (statement -> assignment_statement .)


state 27

    (20) statement -> if_statement .

    PERIOD          reduce using rule 20 (statement -> if_statement .)
    END             reduce using rule 20 (statement -> if_statement .)
    SEMICOLON       reduce using rule 20 (statement -> if_statement .)
    ELSE            reduce using rule 20 (statement -> if_statement .)


state 28

    (21) statement -> while_statement .

    PERIOD          reduce using rule 21 (statement -> while_statement .)
    END             reduce using rule 21 (statement -> while_statement .)
    SEMICOLON       reduce using rule 21 (statement -> while_statement .)
    ELSE            reduce using rule 21 (statement -> while_statement .)


state 29

    (22) statement -> for_statement .

    PERIOD          reduce using rule 22 (statement -> for_statement .)
    END             reduce using rule 22 (statement -> for_statement .)
    SEMICOLON       reduce using rule 22 (statement -> for_statement .)
    ELSE            reduce using rule 22 (statement -> for_statement .)


state 30

    (23) statement -> proc_call_statement .

    PERIOD          reduce using rule 23 (statement -> proc_call_statement .)
    END             reduce using rule 23 (statement -> proc_call_statement .)
    SEMICOLON       reduce using rule 23 (statement -> proc_call_statement .)
    ELSE            reduce using rule 23 (statement -> proc_call_statement .)


state 31

    (24) statement -> null_statement .

    PERIOD          reduce using rule 24 (statement -> null_statement .)
    END             reduce using rule 24 (statement -> null_statement .)
    SEMICOLON       reduce using rule 24 (statement -> null_statement .)
    ELSE            reduce using rule 24 (statement -> null_statement .)


state 32

    (25) statement -> block_statement .

    PERIOD          reduce using rule 25 (statement -> block_statement .)
    END             reduce using rule 25 (statement -> block_statement .)
    SEMICOLON       reduce using rule 25 (statement -> block_statement .)
    ELSE            reduce using rule 25 (statement -> block_statement .)


state 33

    (26) statement -> read_statement .

    PERIOD          reduce using rule 26 (statement -> read_statement .)
    END             reduce using rule 26 (statement -> read_statement .)
    SEMICOLON       reduce using rule 26 (statement -> read_statement .)
    ELSE            reduce using rule 26 (statement -> read_statement .)


state 34

    (27) statement -> write_statement .

    PERIOD          reduce using rule 27 (statement -> write_statement .)
    END             reduce using rule 27 (statement -> write_statement .)
    SEMICOLON       reduce using rule 27 (statement -> write_statement .)
    ELSE            reduce using rule 27 (statement -> write_statement .)


state 35

    (28) assignment_statement -> IDENT . ASSIGN expression
    (36) proc_call_name -> IDENT .

    ASSIGN          shift and go to state 46
    LPAREN          reduce using rule 36 (proc_call_name -> IDENT .)


state 36

    (29) if_statement -> IF . condition THEN statement else_statement
    (41) condition -> . expression EQ expression
    (42) condition -> . expression NEQ expression
    (43) condition -> . expression LT expression
    (44) condition -> . expression LE expression
    (45) condition -> . expression GT expression
    (46) condition -> . expression GE expression
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    condition                      shift and go to state 47
    expression                     shift and go to state 48
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 37

    (32) while_statement -> WHILE . condition DO statement
    (41) condition -> . expression EQ expression
    (42) condition -> . expression NEQ expression
    (43) condition -> . expression LT expression
    (44) condition -> . expression LE expression
    (45) condition -> . expression GT expression
    (46) condition -> . expression GE expression
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    condition                      shift and go to state 57
    expression                     shift and go to state 48
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 38

    (33) for_statement -> FOR . IDENT ASSIGN expression for_act1 TO expression DO statement

    IDENT           shift and go to state 58


state 39

    (35) proc_call_statement -> proc_call_name . LPAREN RPAREN

    LPAREN          shift and go to state 59


state 40

    (37) block_statement -> BEGIN . statement_list END
    (17) statement_list -> . statement_list SEMICOLON statement
    (18) statement_list -> . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (29) if_statement -> . IF condition THEN statement else_statement
    (32) while_statement -> . WHILE condition DO statement
    (33) for_statement -> . FOR IDENT ASSIGN expression for_act1 TO expression DO statement
    (35) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (40) null_statement -> .
    (37) block_statement -> . BEGIN statement_list END
    (38) read_statement -> . READ LPAREN IDENT RPAREN
    (39) write_statement -> . WRITE LPAREN expression RPAREN
    (36) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    END             reduce using rule 40 (null_statement -> .)
    SEMICOLON       reduce using rule 40 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42

    statement_list                 shift and go to state 60
    statement                      shift and go to state 61
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 41

    (38) read_statement -> READ . LPAREN IDENT RPAREN

    LPAREN          shift and go to state 62


state 42

    (39) write_statement -> WRITE . LPAREN expression RPAREN

    LPAREN          shift and go to state 63


state 43

    (11) subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .

    SEMICOLON       reduce using rule 11 (subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .)


state 44

    (14) proc_decl -> PROCEDURE proc_name LPAREN . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 64


state 45

    (60) id_list -> id_list COMMA IDENT .

    COMMA           reduce using rule 60 (id_list -> id_list COMMA IDENT .)
    SEMICOLON       reduce using rule 60 (id_list -> id_list COMMA IDENT .)


state 46

    (28) assignment_statement -> IDENT ASSIGN . expression
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 65
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 47

    (29) if_statement -> IF condition . THEN statement else_statement

    THEN            shift and go to state 66


state 48

    (41) condition -> expression . EQ expression
    (42) condition -> expression . NEQ expression
    (43) condition -> expression . LT expression
    (44) condition -> expression . LE expression
    (45) condition -> expression . GT expression
    (46) condition -> expression . GE expression
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    EQ              shift and go to state 67
    NEQ             shift and go to state 68
    LT              shift and go to state 69
    LE              shift and go to state 70
    GT              shift and go to state 71
    GE              shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 49

    (47) expression -> term .
    (52) term -> term . MULT factor
    (53) term -> term . DIV factor

    EQ              reduce using rule 47 (expression -> term .)
    NEQ             reduce using rule 47 (expression -> term .)
    LT              reduce using rule 47 (expression -> term .)
    LE              reduce using rule 47 (expression -> term .)
    GT              reduce using rule 47 (expression -> term .)
    GE              reduce using rule 47 (expression -> term .)
    PLUS            reduce using rule 47 (expression -> term .)
    MINUS           reduce using rule 47 (expression -> term .)
    PERIOD          reduce using rule 47 (expression -> term .)
    END             reduce using rule 47 (expression -> term .)
    SEMICOLON       reduce using rule 47 (expression -> term .)
    ELSE            reduce using rule 47 (expression -> term .)
    RPAREN          reduce using rule 47 (expression -> term .)
    THEN            reduce using rule 47 (expression -> term .)
    DO              reduce using rule 47 (expression -> term .)
    TO              reduce using rule 47 (expression -> term .)
    MULT            shift and go to state 75
    DIV             shift and go to state 76


state 50

    (48) expression -> MINUS . term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    term                           shift and go to state 77
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 51

    (51) term -> factor .

    MULT            reduce using rule 51 (term -> factor .)
    DIV             reduce using rule 51 (term -> factor .)
    EQ              reduce using rule 51 (term -> factor .)
    NEQ             reduce using rule 51 (term -> factor .)
    LT              reduce using rule 51 (term -> factor .)
    LE              reduce using rule 51 (term -> factor .)
    GT              reduce using rule 51 (term -> factor .)
    GE              reduce using rule 51 (term -> factor .)
    PLUS            reduce using rule 51 (term -> factor .)
    MINUS           reduce using rule 51 (term -> factor .)
    PERIOD          reduce using rule 51 (term -> factor .)
    END             reduce using rule 51 (term -> factor .)
    SEMICOLON       reduce using rule 51 (term -> factor .)
    ELSE            reduce using rule 51 (term -> factor .)
    RPAREN          reduce using rule 51 (term -> factor .)
    THEN            reduce using rule 51 (term -> factor .)
    DO              reduce using rule 51 (term -> factor .)
    TO              reduce using rule 51 (term -> factor .)


state 52

    (54) factor -> var_name .

    MULT            reduce using rule 54 (factor -> var_name .)
    DIV             reduce using rule 54 (factor -> var_name .)
    EQ              reduce using rule 54 (factor -> var_name .)
    NEQ             reduce using rule 54 (factor -> var_name .)
    LT              reduce using rule 54 (factor -> var_name .)
    LE              reduce using rule 54 (factor -> var_name .)
    GT              reduce using rule 54 (factor -> var_name .)
    GE              reduce using rule 54 (factor -> var_name .)
    PLUS            reduce using rule 54 (factor -> var_name .)
    MINUS           reduce using rule 54 (factor -> var_name .)
    PERIOD          reduce using rule 54 (factor -> var_name .)
    END             reduce using rule 54 (factor -> var_name .)
    SEMICOLON       reduce using rule 54 (factor -> var_name .)
    ELSE            reduce using rule 54 (factor -> var_name .)
    RPAREN          reduce using rule 54 (factor -> var_name .)
    THEN            reduce using rule 54 (factor -> var_name .)
    DO              reduce using rule 54 (factor -> var_name .)
    TO              reduce using rule 54 (factor -> var_name .)


state 53

    (55) factor -> number .

    MULT            reduce using rule 55 (factor -> number .)
    DIV             reduce using rule 55 (factor -> number .)
    EQ              reduce using rule 55 (factor -> number .)
    NEQ             reduce using rule 55 (factor -> number .)
    LT              reduce using rule 55 (factor -> number .)
    LE              reduce using rule 55 (factor -> number .)
    GT              reduce using rule 55 (factor -> number .)
    GE              reduce using rule 55 (factor -> number .)
    PLUS            reduce using rule 55 (factor -> number .)
    MINUS           reduce using rule 55 (factor -> number .)
    PERIOD          reduce using rule 55 (factor -> number .)
    END             reduce using rule 55 (factor -> number .)
    SEMICOLON       reduce using rule 55 (factor -> number .)
    ELSE            reduce using rule 55 (factor -> number .)
    RPAREN          reduce using rule 55 (factor -> number .)
    THEN            reduce using rule 55 (factor -> number .)
    DO              reduce using rule 55 (factor -> number .)
    TO              reduce using rule 55 (factor -> number .)


state 54

    (56) factor -> LPAREN . expression RPAREN
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 78
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 55

    (57) var_name -> IDENT .

    MULT            reduce using rule 57 (var_name -> IDENT .)
    DIV             reduce using rule 57 (var_name -> IDENT .)
    EQ              reduce using rule 57 (var_name -> IDENT .)
    NEQ             reduce using rule 57 (var_name -> IDENT .)
    LT              reduce using rule 57 (var_name -> IDENT .)
    LE              reduce using rule 57 (var_name -> IDENT .)
    GT              reduce using rule 57 (var_name -> IDENT .)
    GE              reduce using rule 57 (var_name -> IDENT .)
    PLUS            reduce using rule 57 (var_name -> IDENT .)
    MINUS           reduce using rule 57 (var_name -> IDENT .)
    PERIOD          reduce using rule 57 (var_name -> IDENT .)
    END             reduce using rule 57 (var_name -> IDENT .)
    SEMICOLON       reduce using rule 57 (var_name -> IDENT .)
    ELSE            reduce using rule 57 (var_name -> IDENT .)
    RPAREN          reduce using rule 57 (var_name -> IDENT .)
    THEN            reduce using rule 57 (var_name -> IDENT .)
    DO              reduce using rule 57 (var_name -> IDENT .)
    TO              reduce using rule 57 (var_name -> IDENT .)


state 56

    (58) number -> NUMBER .

    MULT            reduce using rule 58 (number -> NUMBER .)
    DIV             reduce using rule 58 (number -> NUMBER .)
    EQ              reduce using rule 58 (number -> NUMBER .)
    NEQ             reduce using rule 58 (number -> NUMBER .)
    LT              reduce using rule 58 (number -> NUMBER .)
    LE              reduce using rule 58 (number -> NUMBER .)
    GT              reduce using rule 58 (number -> NUMBER .)
    GE              reduce using rule 58 (number -> NUMBER .)
    PLUS            reduce using rule 58 (number -> NUMBER .)
    MINUS           reduce using rule 58 (number -> NUMBER .)
    PERIOD          reduce using rule 58 (number -> NUMBER .)
    END             reduce using rule 58 (number -> NUMBER .)
    SEMICOLON       reduce using rule 58 (number -> NUMBER .)
    ELSE            reduce using rule 58 (number -> NUMBER .)
    RPAREN          reduce using rule 58 (number -> NUMBER .)
    THEN            reduce using rule 58 (number -> NUMBER .)
    DO              reduce using rule 58 (number -> NUMBER .)
    TO              reduce using rule 58 (number -> NUMBER .)


state 57

    (32) while_statement -> WHILE condition . DO statement

    DO              shift and go to state 79


state 58

    (33) for_statement -> FOR IDENT . ASSIGN expression for_act1 TO expression DO statement

    ASSIGN          shift and go to state 80


state 59

    (35) proc_call_statement -> proc_call_name LPAREN . RPAREN

    RPAREN          shift and go to state 81


state 60

    (37) block_statement -> BEGIN statement_list . END
    (17) statement_list -> statement_list . SEMICOLON statement

    END             shift and go to state 82
    SEMICOLON       shift and go to state 83


state 61

    (18) statement_list -> statement .

    END             reduce using rule 18 (statement_list -> statement .)
    SEMICOLON       reduce using rule 18 (statement_list -> statement .)


state 62

    (38) read_statement -> READ LPAREN . IDENT RPAREN

    IDENT           shift and go to state 84


state 63

    (39) write_statement -> WRITE LPAREN . expression RPAREN
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 85
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 64

    (14) proc_decl -> PROCEDURE proc_name LPAREN RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 86


state 65

    (28) assignment_statement -> IDENT ASSIGN expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    PERIOD          reduce using rule 28 (assignment_statement -> IDENT ASSIGN expression .)
    END             reduce using rule 28 (assignment_statement -> IDENT ASSIGN expression .)
    SEMICOLON       reduce using rule 28 (assignment_statement -> IDENT ASSIGN expression .)
    ELSE            reduce using rule 28 (assignment_statement -> IDENT ASSIGN expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 66

    (29) if_statement -> IF condition THEN . statement else_statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (29) if_statement -> . IF condition THEN statement else_statement
    (32) while_statement -> . WHILE condition DO statement
    (33) for_statement -> . FOR IDENT ASSIGN expression for_act1 TO expression DO statement
    (35) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (40) null_statement -> .
    (37) block_statement -> . BEGIN statement_list END
    (38) read_statement -> . READ LPAREN IDENT RPAREN
    (39) write_statement -> . WRITE LPAREN expression RPAREN
    (36) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 40 (null_statement -> .)
    PERIOD          reduce using rule 40 (null_statement -> .)
    END             reduce using rule 40 (null_statement -> .)
    SEMICOLON       reduce using rule 40 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42

    statement                      shift and go to state 87
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 67

    (41) condition -> expression EQ . expression
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 88
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 68

    (42) condition -> expression NEQ . expression
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 89
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 69

    (43) condition -> expression LT . expression
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 90
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 70

    (44) condition -> expression LE . expression
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 91
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 71

    (45) condition -> expression GT . expression
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 92
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 72

    (46) condition -> expression GE . expression
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 93
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 73

    (49) expression -> expression PLUS . term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    term                           shift and go to state 94
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 74

    (50) expression -> expression MINUS . term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    term                           shift and go to state 95
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 75

    (52) term -> term MULT . factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    factor                         shift and go to state 96
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 76

    (53) term -> term DIV . factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    factor                         shift and go to state 97
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 77

    (48) expression -> MINUS term .
    (52) term -> term . MULT factor
    (53) term -> term . DIV factor

    EQ              reduce using rule 48 (expression -> MINUS term .)
    NEQ             reduce using rule 48 (expression -> MINUS term .)
    LT              reduce using rule 48 (expression -> MINUS term .)
    LE              reduce using rule 48 (expression -> MINUS term .)
    GT              reduce using rule 48 (expression -> MINUS term .)
    GE              reduce using rule 48 (expression -> MINUS term .)
    PLUS            reduce using rule 48 (expression -> MINUS term .)
    MINUS           reduce using rule 48 (expression -> MINUS term .)
    PERIOD          reduce using rule 48 (expression -> MINUS term .)
    END             reduce using rule 48 (expression -> MINUS term .)
    SEMICOLON       reduce using rule 48 (expression -> MINUS term .)
    ELSE            reduce using rule 48 (expression -> MINUS term .)
    RPAREN          reduce using rule 48 (expression -> MINUS term .)
    THEN            reduce using rule 48 (expression -> MINUS term .)
    DO              reduce using rule 48 (expression -> MINUS term .)
    TO              reduce using rule 48 (expression -> MINUS term .)
    MULT            shift and go to state 75
    DIV             shift and go to state 76


state 78

    (56) factor -> LPAREN expression . RPAREN
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RPAREN          shift and go to state 98
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 79

    (32) while_statement -> WHILE condition DO . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (29) if_statement -> . IF condition THEN statement else_statement
    (32) while_statement -> . WHILE condition DO statement
    (33) for_statement -> . FOR IDENT ASSIGN expression for_act1 TO expression DO statement
    (35) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (40) null_statement -> .
    (37) block_statement -> . BEGIN statement_list END
    (38) read_statement -> . READ LPAREN IDENT RPAREN
    (39) write_statement -> . WRITE LPAREN expression RPAREN
    (36) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 40 (null_statement -> .)
    PERIOD          reduce using rule 40 (null_statement -> .)
    END             reduce using rule 40 (null_statement -> .)
    SEMICOLON       reduce using rule 40 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42

    statement                      shift and go to state 99
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 80

    (33) for_statement -> FOR IDENT ASSIGN . expression for_act1 TO expression DO statement
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 100
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 81

    (35) proc_call_statement -> proc_call_name LPAREN RPAREN .

    PERIOD          reduce using rule 35 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    END             reduce using rule 35 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    SEMICOLON       reduce using rule 35 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    ELSE            reduce using rule 35 (proc_call_statement -> proc_call_name LPAREN RPAREN .)


state 82

    (37) block_statement -> BEGIN statement_list END .

    PERIOD          reduce using rule 37 (block_statement -> BEGIN statement_list END .)
    END             reduce using rule 37 (block_statement -> BEGIN statement_list END .)
    SEMICOLON       reduce using rule 37 (block_statement -> BEGIN statement_list END .)
    ELSE            reduce using rule 37 (block_statement -> BEGIN statement_list END .)


state 83

    (17) statement_list -> statement_list SEMICOLON . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (29) if_statement -> . IF condition THEN statement else_statement
    (32) while_statement -> . WHILE condition DO statement
    (33) for_statement -> . FOR IDENT ASSIGN expression for_act1 TO expression DO statement
    (35) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (40) null_statement -> .
    (37) block_statement -> . BEGIN statement_list END
    (38) read_statement -> . READ LPAREN IDENT RPAREN
    (39) write_statement -> . WRITE LPAREN expression RPAREN
    (36) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    END             reduce using rule 40 (null_statement -> .)
    SEMICOLON       reduce using rule 40 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42

    statement                      shift and go to state 101
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 84

    (38) read_statement -> READ LPAREN IDENT . RPAREN

    RPAREN          shift and go to state 102


state 85

    (39) write_statement -> WRITE LPAREN expression . RPAREN
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RPAREN          shift and go to state 103
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 86

    (14) proc_decl -> PROCEDURE proc_name LPAREN RPAREN SEMICOLON . inblock
    (16) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 104
    var_decl_part                  shift and go to state 105
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 87

    (29) if_statement -> IF condition THEN statement . else_statement
    (30) else_statement -> . ELSE statement
    (31) else_statement -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 107
    PERIOD          reduce using rule 31 (else_statement -> .)
    END             reduce using rule 31 (else_statement -> .)
    SEMICOLON       reduce using rule 31 (else_statement -> .)

  ! ELSE            [ reduce using rule 31 (else_statement -> .) ]

    else_statement                 shift and go to state 106

state 88

    (41) condition -> expression EQ expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    THEN            reduce using rule 41 (condition -> expression EQ expression .)
    DO              reduce using rule 41 (condition -> expression EQ expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 89

    (42) condition -> expression NEQ expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    THEN            reduce using rule 42 (condition -> expression NEQ expression .)
    DO              reduce using rule 42 (condition -> expression NEQ expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 90

    (43) condition -> expression LT expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    THEN            reduce using rule 43 (condition -> expression LT expression .)
    DO              reduce using rule 43 (condition -> expression LT expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 91

    (44) condition -> expression LE expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    THEN            reduce using rule 44 (condition -> expression LE expression .)
    DO              reduce using rule 44 (condition -> expression LE expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 92

    (45) condition -> expression GT expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    THEN            reduce using rule 45 (condition -> expression GT expression .)
    DO              reduce using rule 45 (condition -> expression GT expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 93

    (46) condition -> expression GE expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    THEN            reduce using rule 46 (condition -> expression GE expression .)
    DO              reduce using rule 46 (condition -> expression GE expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 94

    (49) expression -> expression PLUS term .
    (52) term -> term . MULT factor
    (53) term -> term . DIV factor

    EQ              reduce using rule 49 (expression -> expression PLUS term .)
    NEQ             reduce using rule 49 (expression -> expression PLUS term .)
    LT              reduce using rule 49 (expression -> expression PLUS term .)
    LE              reduce using rule 49 (expression -> expression PLUS term .)
    GT              reduce using rule 49 (expression -> expression PLUS term .)
    GE              reduce using rule 49 (expression -> expression PLUS term .)
    PLUS            reduce using rule 49 (expression -> expression PLUS term .)
    MINUS           reduce using rule 49 (expression -> expression PLUS term .)
    PERIOD          reduce using rule 49 (expression -> expression PLUS term .)
    END             reduce using rule 49 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 49 (expression -> expression PLUS term .)
    ELSE            reduce using rule 49 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 49 (expression -> expression PLUS term .)
    THEN            reduce using rule 49 (expression -> expression PLUS term .)
    DO              reduce using rule 49 (expression -> expression PLUS term .)
    TO              reduce using rule 49 (expression -> expression PLUS term .)
    MULT            shift and go to state 75
    DIV             shift and go to state 76


state 95

    (50) expression -> expression MINUS term .
    (52) term -> term . MULT factor
    (53) term -> term . DIV factor

    EQ              reduce using rule 50 (expression -> expression MINUS term .)
    NEQ             reduce using rule 50 (expression -> expression MINUS term .)
    LT              reduce using rule 50 (expression -> expression MINUS term .)
    LE              reduce using rule 50 (expression -> expression MINUS term .)
    GT              reduce using rule 50 (expression -> expression MINUS term .)
    GE              reduce using rule 50 (expression -> expression MINUS term .)
    PLUS            reduce using rule 50 (expression -> expression MINUS term .)
    MINUS           reduce using rule 50 (expression -> expression MINUS term .)
    PERIOD          reduce using rule 50 (expression -> expression MINUS term .)
    END             reduce using rule 50 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 50 (expression -> expression MINUS term .)
    ELSE            reduce using rule 50 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 50 (expression -> expression MINUS term .)
    THEN            reduce using rule 50 (expression -> expression MINUS term .)
    DO              reduce using rule 50 (expression -> expression MINUS term .)
    TO              reduce using rule 50 (expression -> expression MINUS term .)
    MULT            shift and go to state 75
    DIV             shift and go to state 76


state 96

    (52) term -> term MULT factor .

    MULT            reduce using rule 52 (term -> term MULT factor .)
    DIV             reduce using rule 52 (term -> term MULT factor .)
    EQ              reduce using rule 52 (term -> term MULT factor .)
    NEQ             reduce using rule 52 (term -> term MULT factor .)
    LT              reduce using rule 52 (term -> term MULT factor .)
    LE              reduce using rule 52 (term -> term MULT factor .)
    GT              reduce using rule 52 (term -> term MULT factor .)
    GE              reduce using rule 52 (term -> term MULT factor .)
    PLUS            reduce using rule 52 (term -> term MULT factor .)
    MINUS           reduce using rule 52 (term -> term MULT factor .)
    PERIOD          reduce using rule 52 (term -> term MULT factor .)
    END             reduce using rule 52 (term -> term MULT factor .)
    SEMICOLON       reduce using rule 52 (term -> term MULT factor .)
    ELSE            reduce using rule 52 (term -> term MULT factor .)
    RPAREN          reduce using rule 52 (term -> term MULT factor .)
    THEN            reduce using rule 52 (term -> term MULT factor .)
    DO              reduce using rule 52 (term -> term MULT factor .)
    TO              reduce using rule 52 (term -> term MULT factor .)


state 97

    (53) term -> term DIV factor .

    MULT            reduce using rule 53 (term -> term DIV factor .)
    DIV             reduce using rule 53 (term -> term DIV factor .)
    EQ              reduce using rule 53 (term -> term DIV factor .)
    NEQ             reduce using rule 53 (term -> term DIV factor .)
    LT              reduce using rule 53 (term -> term DIV factor .)
    LE              reduce using rule 53 (term -> term DIV factor .)
    GT              reduce using rule 53 (term -> term DIV factor .)
    GE              reduce using rule 53 (term -> term DIV factor .)
    PLUS            reduce using rule 53 (term -> term DIV factor .)
    MINUS           reduce using rule 53 (term -> term DIV factor .)
    PERIOD          reduce using rule 53 (term -> term DIV factor .)
    END             reduce using rule 53 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 53 (term -> term DIV factor .)
    ELSE            reduce using rule 53 (term -> term DIV factor .)
    RPAREN          reduce using rule 53 (term -> term DIV factor .)
    THEN            reduce using rule 53 (term -> term DIV factor .)
    DO              reduce using rule 53 (term -> term DIV factor .)
    TO              reduce using rule 53 (term -> term DIV factor .)


state 98

    (56) factor -> LPAREN expression RPAREN .

    MULT            reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    PERIOD          reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    THEN            reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 56 (factor -> LPAREN expression RPAREN .)


state 99

    (32) while_statement -> WHILE condition DO statement .

    PERIOD          reduce using rule 32 (while_statement -> WHILE condition DO statement .)
    END             reduce using rule 32 (while_statement -> WHILE condition DO statement .)
    SEMICOLON       reduce using rule 32 (while_statement -> WHILE condition DO statement .)
    ELSE            reduce using rule 32 (while_statement -> WHILE condition DO statement .)


state 100

    (33) for_statement -> FOR IDENT ASSIGN expression . for_act1 TO expression DO statement
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term
    (34) for_act1 -> .

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TO              reduce using rule 34 (for_act1 -> .)

    for_act1                       shift and go to state 108

state 101

    (17) statement_list -> statement_list SEMICOLON statement .

    END             reduce using rule 17 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 17 (statement_list -> statement_list SEMICOLON statement .)


state 102

    (38) read_statement -> READ LPAREN IDENT RPAREN .

    PERIOD          reduce using rule 38 (read_statement -> READ LPAREN IDENT RPAREN .)
    END             reduce using rule 38 (read_statement -> READ LPAREN IDENT RPAREN .)
    SEMICOLON       reduce using rule 38 (read_statement -> READ LPAREN IDENT RPAREN .)
    ELSE            reduce using rule 38 (read_statement -> READ LPAREN IDENT RPAREN .)


state 103

    (39) write_statement -> WRITE LPAREN expression RPAREN .

    PERIOD          reduce using rule 39 (write_statement -> WRITE LPAREN expression RPAREN .)
    END             reduce using rule 39 (write_statement -> WRITE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 39 (write_statement -> WRITE LPAREN expression RPAREN .)
    ELSE            reduce using rule 39 (write_statement -> WRITE LPAREN expression RPAREN .)


state 104

    (14) proc_decl -> PROCEDURE proc_name LPAREN RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 14 (proc_decl -> PROCEDURE proc_name LPAREN RPAREN SEMICOLON inblock .)


state 105

    (16) inblock -> var_decl_part . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (29) if_statement -> . IF condition THEN statement else_statement
    (32) while_statement -> . WHILE condition DO statement
    (33) for_statement -> . FOR IDENT ASSIGN expression for_act1 TO expression DO statement
    (35) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (40) null_statement -> .
    (37) block_statement -> . BEGIN statement_list END
    (38) read_statement -> . READ LPAREN IDENT RPAREN
    (39) write_statement -> . WRITE LPAREN expression RPAREN
    (36) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    SEMICOLON       reduce using rule 40 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42

    statement                      shift and go to state 109
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 106

    (29) if_statement -> IF condition THEN statement else_statement .

    PERIOD          reduce using rule 29 (if_statement -> IF condition THEN statement else_statement .)
    END             reduce using rule 29 (if_statement -> IF condition THEN statement else_statement .)
    SEMICOLON       reduce using rule 29 (if_statement -> IF condition THEN statement else_statement .)
    ELSE            reduce using rule 29 (if_statement -> IF condition THEN statement else_statement .)


state 107

    (30) else_statement -> ELSE . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (29) if_statement -> . IF condition THEN statement else_statement
    (32) while_statement -> . WHILE condition DO statement
    (33) for_statement -> . FOR IDENT ASSIGN expression for_act1 TO expression DO statement
    (35) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (40) null_statement -> .
    (37) block_statement -> . BEGIN statement_list END
    (38) read_statement -> . READ LPAREN IDENT RPAREN
    (39) write_statement -> . WRITE LPAREN expression RPAREN
    (36) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 40 (null_statement -> .)
    PERIOD          reduce using rule 40 (null_statement -> .)
    END             reduce using rule 40 (null_statement -> .)
    SEMICOLON       reduce using rule 40 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42

    statement                      shift and go to state 110
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 108

    (33) for_statement -> FOR IDENT ASSIGN expression for_act1 . TO expression DO statement

    TO              shift and go to state 111


state 109

    (16) inblock -> var_decl_part statement .

    SEMICOLON       reduce using rule 16 (inblock -> var_decl_part statement .)


state 110

    (30) else_statement -> ELSE statement .

    ELSE            reduce using rule 30 (else_statement -> ELSE statement .)
    PERIOD          reduce using rule 30 (else_statement -> ELSE statement .)
    END             reduce using rule 30 (else_statement -> ELSE statement .)
    SEMICOLON       reduce using rule 30 (else_statement -> ELSE statement .)


state 111

    (33) for_statement -> FOR IDENT ASSIGN expression for_act1 TO . expression DO statement
    (47) expression -> . term
    (48) expression -> . MINUS term
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (51) term -> . factor
    (52) term -> . term MULT factor
    (53) term -> . term DIV factor
    (54) factor -> . var_name
    (55) factor -> . number
    (56) factor -> . LPAREN expression RPAREN
    (57) var_name -> . IDENT
    (58) number -> . NUMBER

    MINUS           shift and go to state 50
    LPAREN          shift and go to state 54
    IDENT           shift and go to state 55
    NUMBER          shift and go to state 56

    expression                     shift and go to state 112
    term                           shift and go to state 49
    factor                         shift and go to state 51
    var_name                       shift and go to state 52
    number                         shift and go to state 53

state 112

    (33) for_statement -> FOR IDENT ASSIGN expression for_act1 TO expression . DO statement
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    DO              shift and go to state 113
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 113

    (33) for_statement -> FOR IDENT ASSIGN expression for_act1 TO expression DO . statement
    (19) statement -> . assignment_statement
    (20) statement -> . if_statement
    (21) statement -> . while_statement
    (22) statement -> . for_statement
    (23) statement -> . proc_call_statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . read_statement
    (27) statement -> . write_statement
    (28) assignment_statement -> . IDENT ASSIGN expression
    (29) if_statement -> . IF condition THEN statement else_statement
    (32) while_statement -> . WHILE condition DO statement
    (33) for_statement -> . FOR IDENT ASSIGN expression for_act1 TO expression DO statement
    (35) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (40) null_statement -> .
    (37) block_statement -> . BEGIN statement_list END
    (38) read_statement -> . READ LPAREN IDENT RPAREN
    (39) write_statement -> . WRITE LPAREN expression RPAREN
    (36) proc_call_name -> . IDENT

    IDENT           shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38
    ELSE            reduce using rule 40 (null_statement -> .)
    PERIOD          reduce using rule 40 (null_statement -> .)
    END             reduce using rule 40 (null_statement -> .)
    SEMICOLON       reduce using rule 40 (null_statement -> .)
    BEGIN           shift and go to state 40
    READ            shift and go to state 41
    WRITE           shift and go to state 42

    statement                      shift and go to state 114
    assignment_statement           shift and go to state 26
    if_statement                   shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    proc_call_statement            shift and go to state 30
    null_statement                 shift and go to state 31
    block_statement                shift and go to state 32
    read_statement                 shift and go to state 33
    write_statement                shift and go to state 34
    proc_call_name                 shift and go to state 39

state 114

    (33) for_statement -> FOR IDENT ASSIGN expression for_act1 TO expression DO statement .

    PERIOD          reduce using rule 33 (for_statement -> FOR IDENT ASSIGN expression for_act1 TO expression DO statement .)
    END             reduce using rule 33 (for_statement -> FOR IDENT ASSIGN expression for_act1 TO expression DO statement .)
    SEMICOLON       reduce using rule 33 (for_statement -> FOR IDENT ASSIGN expression for_act1 TO expression DO statement .)
    ELSE            reduce using rule 33 (for_statement -> FOR IDENT ASSIGN expression for_act1 TO expression DO statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 87 resolved as shift

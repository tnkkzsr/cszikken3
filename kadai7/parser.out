Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    INTERVAL
    LBRACKET
    RBRACKET

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM IDENT SEMICOLON outblock PERIOD
Rule 2     outblock -> var_decl_part subprog_decl_part outblock_act statement
Rule 3     outblock_act -> <empty>
Rule 4     var_decl_part -> var_decl_list SEMICOLON
Rule 5     var_decl_part -> <empty>
Rule 6     var_decl_list -> var_decl_list SEMICOLON var_decl
Rule 7     var_decl_list -> var_decl
Rule 8     var_decl -> VAR id_list
Rule 9     subprog_decl_part -> subprog_decl_list SEMICOLON
Rule 10    subprog_decl_part -> <empty>
Rule 11    subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl
Rule 12    subprog_decl_list -> subprog_decl
Rule 13    subprog_decl -> proc_decl
Rule 14    subprog_decl -> func_decl
Rule 15    func_decl -> FUNCTION func_name LPAREN func_act2 RPAREN SEMICOLON inblock
Rule 16    func_decl -> FUNCTION func_name LPAREN act_func_args_set id_list act_func_args_done RPAREN SEMICOLON inblock
Rule 17    func_name -> IDENT
Rule 18    func_act2 -> <empty>
Rule 19    act_func_args_set -> <empty>
Rule 20    act_func_args_done -> <empty>
Rule 21    proc_decl -> PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock
Rule 22    proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
Rule 23    proc_act2 -> <empty>
Rule 24    act_proc_args_done -> <empty>
Rule 25    act_proc_args_set -> <empty>
Rule 26    proc_name -> IDENT
Rule 27    inblock -> var_decl_part statement
Rule 28    statement_list -> statement_list SEMICOLON statement
Rule 29    statement_list -> statement
Rule 30    statement -> assignment_statement
Rule 31    statement -> if_statement
Rule 32    statement -> while_statement
Rule 33    statement -> for_statement
Rule 34    statement -> proc_call_statement
Rule 35    statement -> null_statement
Rule 36    statement -> block_statement
Rule 37    statement -> read_statement
Rule 38    statement -> write_statement
Rule 39    assignment_statement -> IDENT ASSIGN expression
Rule 40    act_assign_ident -> <empty>
Rule 41    if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
Rule 42    act_generate_labels -> <empty>
Rule 43    act_insert_br -> <empty>
Rule 44    act_insert_label1 -> <empty>
Rule 45    act_insert_label2 -> <empty>
Rule 46    act_insert_label3 -> <empty>
Rule 47    act_insert_jump1 -> <empty>
Rule 48    act_insert_jump3 -> <empty>
Rule 49    else_statement -> ELSE statement
Rule 50    else_statement -> <empty>
Rule 51    while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
Rule 52    act_insert_br_while -> <empty>
Rule 53    for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
Rule 54    act_insert_br_for -> <empty>
Rule 55    act_increment_itr -> <empty>
Rule 56    arg_list -> expression
Rule 57    arg_list -> arg_list COMMA expression
Rule 58    proc_call_name -> IDENT
Rule 59    proc_call_statement -> proc_call_name LPAREN RPAREN
Rule 60    proc_call_statement -> proc_call_name LPAREN arg_list RPAREN
Rule 61    block_statement -> BEGIN statement_list END
Rule 62    act_lookup_prev_ident -> <empty>
Rule 63    read_statement -> READ LPAREN IDENT RPAREN
Rule 64    write_statement -> WRITE LPAREN expression RPAREN
Rule 65    null_statement -> <empty>
Rule 66    condition -> expression EQ expression
Rule 67    condition -> expression NEQ expression
Rule 68    condition -> expression LT expression
Rule 69    condition -> expression LE expression
Rule 70    condition -> expression GT expression
Rule 71    condition -> expression GE expression
Rule 72    expression -> term
Rule 73    expression -> MINUS term
Rule 74    expression -> expression PLUS term
Rule 75    expression -> expression MINUS term
Rule 76    term -> factor
Rule 77    term -> term MULT factor
Rule 78    term -> term DIV factor
Rule 79    factor -> var_name
Rule 80    factor -> number
Rule 81    factor -> LPAREN expression RPAREN
Rule 82    factor -> func_call
Rule 83    func_call -> IDENT LPAREN RPAREN
Rule 84    func_call -> IDENT LPAREN arg_list RPAREN
Rule 85    var_name -> IDENT
Rule 86    number -> NUMBER
Rule 87    id_list -> IDENT
Rule 88    id_list -> id_list COMMA IDENT

Terminals, with rules where they appear

ASSIGN               : 39 53
BEGIN                : 61
COMMA                : 57 88
DIV                  : 78
DO                   : 51 53
ELSE                 : 49
END                  : 61
EQ                   : 66
FOR                  : 53
FUNCTION             : 15 16
GE                   : 71
GT                   : 70
IDENT                : 1 17 26 39 53 58 63 83 84 85 87 88
IF                   : 41
INTERVAL             : 
LBRACKET             : 
LE                   : 69
LPAREN               : 15 16 21 22 59 60 63 64 81 83 84
LT                   : 68
MINUS                : 73 75
MULT                 : 77
NEQ                  : 67
NUMBER               : 86
PERIOD               : 1
PLUS                 : 74
PROCEDURE            : 21 22
PROGRAM              : 1
RBRACKET             : 
READ                 : 63
RPAREN               : 15 16 21 22 59 60 63 64 81 83 84
SEMICOLON            : 1 4 6 9 11 15 16 21 22 28
THEN                 : 41
TO                   : 53
VAR                  : 8
WHILE                : 51
WRITE                : 64
error                : 

Nonterminals, with rules where they appear

act_assign_ident     : 53
act_func_args_done   : 16
act_func_args_set    : 16
act_generate_labels  : 41 51 53
act_increment_itr    : 53
act_insert_br        : 41
act_insert_br_for    : 53
act_insert_br_while  : 51
act_insert_jump1     : 51 51 53 53
act_insert_jump3     : 41 41
act_insert_label1    : 41 51 53
act_insert_label2    : 41 51 53
act_insert_label3    : 41 51 53
act_lookup_prev_ident : 53
act_proc_args_done   : 22
act_proc_args_set    : 22
arg_list             : 57 60 84
assignment_statement : 30
block_statement      : 36
condition            : 41 51
else_statement       : 41
expression           : 39 53 53 56 57 64 66 66 67 67 68 68 69 69 70 70 71 71 74 75 81
factor               : 76 77 78
for_statement        : 33
func_act2            : 15
func_call            : 82
func_decl            : 14
func_name            : 15 16
id_list              : 8 16 22 88
if_statement         : 31
inblock              : 15 16 21 22
null_statement       : 35
number               : 80
outblock             : 1
outblock_act         : 2
proc_act2            : 21
proc_call_name       : 59 60
proc_call_statement  : 34
proc_decl            : 13
proc_name            : 21 22
program              : 0
read_statement       : 37
statement            : 2 27 28 29 41 49 51 53
statement_list       : 28 61
subprog_decl         : 11 12
subprog_decl_list    : 9 11
subprog_decl_part    : 2
term                 : 72 73 74 75 77 78
var_decl             : 6 7
var_decl_list        : 4 6
var_decl_part        : 2 27
var_name             : 79
while_statement      : 32
write_statement      : 38

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM IDENT SEMICOLON outblock PERIOD

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . IDENT SEMICOLON outblock PERIOD

    IDENT           shift and go to state 3


state 3

    (1) program -> PROGRAM IDENT . SEMICOLON outblock PERIOD

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM IDENT SEMICOLON . outblock PERIOD
    (2) outblock -> . var_decl_part subprog_decl_part outblock_act statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 5 (var_decl_part -> .)
    FUNCTION        reduce using rule 5 (var_decl_part -> .)
    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    PERIOD          reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    outblock                       shift and go to state 5
    var_decl_part                  shift and go to state 6
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 5

    (1) program -> PROGRAM IDENT SEMICOLON outblock . PERIOD

    PERIOD          shift and go to state 10


state 6

    (2) outblock -> var_decl_part . subprog_decl_part outblock_act statement
    (9) subprog_decl_part -> . subprog_decl_list SEMICOLON
    (10) subprog_decl_part -> .
    (11) subprog_decl_list -> . subprog_decl_list SEMICOLON subprog_decl
    (12) subprog_decl_list -> . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) subprog_decl -> . func_decl
    (21) proc_decl -> . PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock
    (22) proc_decl -> . PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
    (15) func_decl -> . FUNCTION func_name LPAREN func_act2 RPAREN SEMICOLON inblock
    (16) func_decl -> . FUNCTION func_name LPAREN act_func_args_set id_list act_func_args_done RPAREN SEMICOLON inblock

    IDENT           reduce using rule 10 (subprog_decl_part -> .)
    WHILE           reduce using rule 10 (subprog_decl_part -> .)
    FOR             reduce using rule 10 (subprog_decl_part -> .)
    BEGIN           reduce using rule 10 (subprog_decl_part -> .)
    READ            reduce using rule 10 (subprog_decl_part -> .)
    WRITE           reduce using rule 10 (subprog_decl_part -> .)
    IF              reduce using rule 10 (subprog_decl_part -> .)
    PERIOD          reduce using rule 10 (subprog_decl_part -> .)
    PROCEDURE       shift and go to state 16
    FUNCTION        shift and go to state 17

    subprog_decl_part              shift and go to state 11
    subprog_decl_list              shift and go to state 12
    subprog_decl                   shift and go to state 13
    proc_decl                      shift and go to state 14
    func_decl                      shift and go to state 15

state 7

    (4) var_decl_part -> var_decl_list . SEMICOLON
    (6) var_decl_list -> var_decl_list . SEMICOLON var_decl

    SEMICOLON       shift and go to state 18


state 8

    (7) var_decl_list -> var_decl .

    SEMICOLON       reduce using rule 7 (var_decl_list -> var_decl .)


state 9

    (8) var_decl -> VAR . id_list
    (87) id_list -> . IDENT
    (88) id_list -> . id_list COMMA IDENT

    IDENT           shift and go to state 20

    id_list                        shift and go to state 19

state 10

    (1) program -> PROGRAM IDENT SEMICOLON outblock PERIOD .

    $end            reduce using rule 1 (program -> PROGRAM IDENT SEMICOLON outblock PERIOD .)


state 11

    (2) outblock -> var_decl_part subprog_decl_part . outblock_act statement
    (3) outblock_act -> .

    IDENT           reduce using rule 3 (outblock_act -> .)
    WHILE           reduce using rule 3 (outblock_act -> .)
    FOR             reduce using rule 3 (outblock_act -> .)
    BEGIN           reduce using rule 3 (outblock_act -> .)
    READ            reduce using rule 3 (outblock_act -> .)
    WRITE           reduce using rule 3 (outblock_act -> .)
    IF              reduce using rule 3 (outblock_act -> .)
    PERIOD          reduce using rule 3 (outblock_act -> .)

    outblock_act                   shift and go to state 21

state 12

    (9) subprog_decl_part -> subprog_decl_list . SEMICOLON
    (11) subprog_decl_list -> subprog_decl_list . SEMICOLON subprog_decl

    SEMICOLON       shift and go to state 22


state 13

    (12) subprog_decl_list -> subprog_decl .

    SEMICOLON       reduce using rule 12 (subprog_decl_list -> subprog_decl .)


state 14

    (13) subprog_decl -> proc_decl .

    SEMICOLON       reduce using rule 13 (subprog_decl -> proc_decl .)


state 15

    (14) subprog_decl -> func_decl .

    SEMICOLON       reduce using rule 14 (subprog_decl -> func_decl .)


state 16

    (21) proc_decl -> PROCEDURE . proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock
    (22) proc_decl -> PROCEDURE . proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
    (26) proc_name -> . IDENT

    IDENT           shift and go to state 24

    proc_name                      shift and go to state 23

state 17

    (15) func_decl -> FUNCTION . func_name LPAREN func_act2 RPAREN SEMICOLON inblock
    (16) func_decl -> FUNCTION . func_name LPAREN act_func_args_set id_list act_func_args_done RPAREN SEMICOLON inblock
    (17) func_name -> . IDENT

    IDENT           shift and go to state 26

    func_name                      shift and go to state 25

state 18

    (4) var_decl_part -> var_decl_list SEMICOLON .
    (6) var_decl_list -> var_decl_list SEMICOLON . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    FUNCTION        reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IDENT           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WHILE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    FOR             reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    BEGIN           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    READ            reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WRITE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IF              reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    PERIOD          reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    SEMICOLON       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    VAR             shift and go to state 9

    var_decl                       shift and go to state 27

state 19

    (8) var_decl -> VAR id_list .
    (88) id_list -> id_list . COMMA IDENT

    SEMICOLON       reduce using rule 8 (var_decl -> VAR id_list .)
    COMMA           shift and go to state 28


state 20

    (87) id_list -> IDENT .

    COMMA           reduce using rule 87 (id_list -> IDENT .)
    SEMICOLON       reduce using rule 87 (id_list -> IDENT .)
    RPAREN          reduce using rule 87 (id_list -> IDENT .)


state 21

    (2) outblock -> var_decl_part subprog_decl_part outblock_act . statement
    (30) statement -> . assignment_statement
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . proc_call_statement
    (35) statement -> . null_statement
    (36) statement -> . block_statement
    (37) statement -> . read_statement
    (38) statement -> . write_statement
    (39) assignment_statement -> . IDENT ASSIGN expression
    (41) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (51) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (53) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (59) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (60) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (65) null_statement -> .
    (61) block_statement -> . BEGIN statement_list END
    (63) read_statement -> . READ LPAREN IDENT RPAREN
    (64) write_statement -> . WRITE LPAREN expression RPAREN
    (42) act_generate_labels -> .
    (58) proc_call_name -> . IDENT

    IDENT           shift and go to state 39
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    PERIOD          reduce using rule 65 (null_statement -> .)
    BEGIN           shift and go to state 44
    READ            shift and go to state 45
    WRITE           shift and go to state 46
    IF              reduce using rule 42 (act_generate_labels -> .)

    statement                      shift and go to state 29
    assignment_statement           shift and go to state 30
    if_statement                   shift and go to state 31
    while_statement                shift and go to state 32
    for_statement                  shift and go to state 33
    proc_call_statement            shift and go to state 34
    null_statement                 shift and go to state 35
    block_statement                shift and go to state 36
    read_statement                 shift and go to state 37
    write_statement                shift and go to state 38
    act_generate_labels            shift and go to state 40
    proc_call_name                 shift and go to state 43

state 22

    (9) subprog_decl_part -> subprog_decl_list SEMICOLON .
    (11) subprog_decl_list -> subprog_decl_list SEMICOLON . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) subprog_decl -> . func_decl
    (21) proc_decl -> . PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock
    (22) proc_decl -> . PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
    (15) func_decl -> . FUNCTION func_name LPAREN func_act2 RPAREN SEMICOLON inblock
    (16) func_decl -> . FUNCTION func_name LPAREN act_func_args_set id_list act_func_args_done RPAREN SEMICOLON inblock

    IDENT           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WHILE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    FOR             reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    BEGIN           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    READ            reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WRITE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    IF              reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PERIOD          reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PROCEDURE       shift and go to state 16
    FUNCTION        shift and go to state 17

    subprog_decl                   shift and go to state 47
    proc_decl                      shift and go to state 14
    func_decl                      shift and go to state 15

state 23

    (21) proc_decl -> PROCEDURE proc_name . LPAREN proc_act2 RPAREN SEMICOLON inblock
    (22) proc_decl -> PROCEDURE proc_name . LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock

    LPAREN          shift and go to state 48


state 24

    (26) proc_name -> IDENT .

    LPAREN          reduce using rule 26 (proc_name -> IDENT .)


state 25

    (15) func_decl -> FUNCTION func_name . LPAREN func_act2 RPAREN SEMICOLON inblock
    (16) func_decl -> FUNCTION func_name . LPAREN act_func_args_set id_list act_func_args_done RPAREN SEMICOLON inblock

    LPAREN          shift and go to state 49


state 26

    (17) func_name -> IDENT .

    LPAREN          reduce using rule 17 (func_name -> IDENT .)


state 27

    (6) var_decl_list -> var_decl_list SEMICOLON var_decl .

    SEMICOLON       reduce using rule 6 (var_decl_list -> var_decl_list SEMICOLON var_decl .)


state 28

    (88) id_list -> id_list COMMA . IDENT

    IDENT           shift and go to state 50


state 29

    (2) outblock -> var_decl_part subprog_decl_part outblock_act statement .

    PERIOD          reduce using rule 2 (outblock -> var_decl_part subprog_decl_part outblock_act statement .)


state 30

    (30) statement -> assignment_statement .

    PERIOD          reduce using rule 30 (statement -> assignment_statement .)
    END             reduce using rule 30 (statement -> assignment_statement .)
    SEMICOLON       reduce using rule 30 (statement -> assignment_statement .)
    ELSE            reduce using rule 30 (statement -> assignment_statement .)


state 31

    (31) statement -> if_statement .

    PERIOD          reduce using rule 31 (statement -> if_statement .)
    END             reduce using rule 31 (statement -> if_statement .)
    SEMICOLON       reduce using rule 31 (statement -> if_statement .)
    ELSE            reduce using rule 31 (statement -> if_statement .)


state 32

    (32) statement -> while_statement .

    PERIOD          reduce using rule 32 (statement -> while_statement .)
    END             reduce using rule 32 (statement -> while_statement .)
    SEMICOLON       reduce using rule 32 (statement -> while_statement .)
    ELSE            reduce using rule 32 (statement -> while_statement .)


state 33

    (33) statement -> for_statement .

    PERIOD          reduce using rule 33 (statement -> for_statement .)
    END             reduce using rule 33 (statement -> for_statement .)
    SEMICOLON       reduce using rule 33 (statement -> for_statement .)
    ELSE            reduce using rule 33 (statement -> for_statement .)


state 34

    (34) statement -> proc_call_statement .

    PERIOD          reduce using rule 34 (statement -> proc_call_statement .)
    END             reduce using rule 34 (statement -> proc_call_statement .)
    SEMICOLON       reduce using rule 34 (statement -> proc_call_statement .)
    ELSE            reduce using rule 34 (statement -> proc_call_statement .)


state 35

    (35) statement -> null_statement .

    PERIOD          reduce using rule 35 (statement -> null_statement .)
    END             reduce using rule 35 (statement -> null_statement .)
    SEMICOLON       reduce using rule 35 (statement -> null_statement .)
    ELSE            reduce using rule 35 (statement -> null_statement .)


state 36

    (36) statement -> block_statement .

    PERIOD          reduce using rule 36 (statement -> block_statement .)
    END             reduce using rule 36 (statement -> block_statement .)
    SEMICOLON       reduce using rule 36 (statement -> block_statement .)
    ELSE            reduce using rule 36 (statement -> block_statement .)


state 37

    (37) statement -> read_statement .

    PERIOD          reduce using rule 37 (statement -> read_statement .)
    END             reduce using rule 37 (statement -> read_statement .)
    SEMICOLON       reduce using rule 37 (statement -> read_statement .)
    ELSE            reduce using rule 37 (statement -> read_statement .)


state 38

    (38) statement -> write_statement .

    PERIOD          reduce using rule 38 (statement -> write_statement .)
    END             reduce using rule 38 (statement -> write_statement .)
    SEMICOLON       reduce using rule 38 (statement -> write_statement .)
    ELSE            reduce using rule 38 (statement -> write_statement .)


state 39

    (39) assignment_statement -> IDENT . ASSIGN expression
    (58) proc_call_name -> IDENT .

    ASSIGN          shift and go to state 51
    LPAREN          reduce using rule 58 (proc_call_name -> IDENT .)


state 40

    (41) if_statement -> act_generate_labels . IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3

    IF              shift and go to state 52


state 41

    (51) while_statement -> WHILE . act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (42) act_generate_labels -> .

    MINUS           reduce using rule 42 (act_generate_labels -> .)
    LPAREN          reduce using rule 42 (act_generate_labels -> .)
    IDENT           reduce using rule 42 (act_generate_labels -> .)
    NUMBER          reduce using rule 42 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 53

state 42

    (53) for_statement -> FOR . act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (42) act_generate_labels -> .

    IDENT           reduce using rule 42 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 54

state 43

    (59) proc_call_statement -> proc_call_name . LPAREN RPAREN
    (60) proc_call_statement -> proc_call_name . LPAREN arg_list RPAREN

    LPAREN          shift and go to state 55


state 44

    (61) block_statement -> BEGIN . statement_list END
    (28) statement_list -> . statement_list SEMICOLON statement
    (29) statement_list -> . statement
    (30) statement -> . assignment_statement
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . proc_call_statement
    (35) statement -> . null_statement
    (36) statement -> . block_statement
    (37) statement -> . read_statement
    (38) statement -> . write_statement
    (39) assignment_statement -> . IDENT ASSIGN expression
    (41) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (51) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (53) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (59) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (60) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (65) null_statement -> .
    (61) block_statement -> . BEGIN statement_list END
    (63) read_statement -> . READ LPAREN IDENT RPAREN
    (64) write_statement -> . WRITE LPAREN expression RPAREN
    (42) act_generate_labels -> .
    (58) proc_call_name -> . IDENT

    IDENT           shift and go to state 39
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    END             reduce using rule 65 (null_statement -> .)
    SEMICOLON       reduce using rule 65 (null_statement -> .)
    BEGIN           shift and go to state 44
    READ            shift and go to state 45
    WRITE           shift and go to state 46
    IF              reduce using rule 42 (act_generate_labels -> .)

    statement_list                 shift and go to state 56
    statement                      shift and go to state 57
    assignment_statement           shift and go to state 30
    if_statement                   shift and go to state 31
    while_statement                shift and go to state 32
    for_statement                  shift and go to state 33
    proc_call_statement            shift and go to state 34
    null_statement                 shift and go to state 35
    block_statement                shift and go to state 36
    read_statement                 shift and go to state 37
    write_statement                shift and go to state 38
    act_generate_labels            shift and go to state 40
    proc_call_name                 shift and go to state 43

state 45

    (63) read_statement -> READ . LPAREN IDENT RPAREN

    LPAREN          shift and go to state 58


state 46

    (64) write_statement -> WRITE . LPAREN expression RPAREN

    LPAREN          shift and go to state 59


state 47

    (11) subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .

    SEMICOLON       reduce using rule 11 (subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .)


state 48

    (21) proc_decl -> PROCEDURE proc_name LPAREN . proc_act2 RPAREN SEMICOLON inblock
    (22) proc_decl -> PROCEDURE proc_name LPAREN . act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
    (23) proc_act2 -> .
    (25) act_proc_args_set -> .

    RPAREN          reduce using rule 23 (proc_act2 -> .)
    IDENT           reduce using rule 25 (act_proc_args_set -> .)

    proc_act2                      shift and go to state 60
    act_proc_args_set              shift and go to state 61

state 49

    (15) func_decl -> FUNCTION func_name LPAREN . func_act2 RPAREN SEMICOLON inblock
    (16) func_decl -> FUNCTION func_name LPAREN . act_func_args_set id_list act_func_args_done RPAREN SEMICOLON inblock
    (18) func_act2 -> .
    (19) act_func_args_set -> .

    RPAREN          reduce using rule 18 (func_act2 -> .)
    IDENT           reduce using rule 19 (act_func_args_set -> .)

    func_act2                      shift and go to state 62
    act_func_args_set              shift and go to state 63

state 50

    (88) id_list -> id_list COMMA IDENT .

    COMMA           reduce using rule 88 (id_list -> id_list COMMA IDENT .)
    SEMICOLON       reduce using rule 88 (id_list -> id_list COMMA IDENT .)
    RPAREN          reduce using rule 88 (id_list -> id_list COMMA IDENT .)


state 51

    (39) assignment_statement -> IDENT ASSIGN . expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 65
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 52

    (41) if_statement -> act_generate_labels IF . condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (66) condition -> . expression EQ expression
    (67) condition -> . expression NEQ expression
    (68) condition -> . expression LT expression
    (69) condition -> . expression LE expression
    (70) condition -> . expression GT expression
    (71) condition -> . expression GE expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    condition                      shift and go to state 74
    expression                     shift and go to state 75
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 53

    (51) while_statement -> WHILE act_generate_labels . act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (47) act_insert_jump1 -> .

    MINUS           reduce using rule 47 (act_insert_jump1 -> .)
    LPAREN          reduce using rule 47 (act_insert_jump1 -> .)
    IDENT           reduce using rule 47 (act_insert_jump1 -> .)
    NUMBER          reduce using rule 47 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 76

state 54

    (53) for_statement -> FOR act_generate_labels . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    IDENT           shift and go to state 77


state 55

    (59) proc_call_statement -> proc_call_name LPAREN . RPAREN
    (60) proc_call_statement -> proc_call_name LPAREN . arg_list RPAREN
    (56) arg_list -> . expression
    (57) arg_list -> . arg_list COMMA expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    RPAREN          shift and go to state 78
    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    arg_list                       shift and go to state 79
    expression                     shift and go to state 80
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 56

    (61) block_statement -> BEGIN statement_list . END
    (28) statement_list -> statement_list . SEMICOLON statement

    END             shift and go to state 81
    SEMICOLON       shift and go to state 82


state 57

    (29) statement_list -> statement .

    END             reduce using rule 29 (statement_list -> statement .)
    SEMICOLON       reduce using rule 29 (statement_list -> statement .)


state 58

    (63) read_statement -> READ LPAREN . IDENT RPAREN

    IDENT           shift and go to state 83


state 59

    (64) write_statement -> WRITE LPAREN . expression RPAREN
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 84
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 60

    (21) proc_decl -> PROCEDURE proc_name LPAREN proc_act2 . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 85


state 61

    (22) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set . id_list act_proc_args_done RPAREN SEMICOLON inblock
    (87) id_list -> . IDENT
    (88) id_list -> . id_list COMMA IDENT

    IDENT           shift and go to state 20

    id_list                        shift and go to state 86

state 62

    (15) func_decl -> FUNCTION func_name LPAREN func_act2 . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 87


state 63

    (16) func_decl -> FUNCTION func_name LPAREN act_func_args_set . id_list act_func_args_done RPAREN SEMICOLON inblock
    (87) id_list -> . IDENT
    (88) id_list -> . id_list COMMA IDENT

    IDENT           shift and go to state 20

    id_list                        shift and go to state 88

state 64

    (85) var_name -> IDENT .
    (83) func_call -> IDENT . LPAREN RPAREN
    (84) func_call -> IDENT . LPAREN arg_list RPAREN

    MULT            reduce using rule 85 (var_name -> IDENT .)
    DIV             reduce using rule 85 (var_name -> IDENT .)
    PLUS            reduce using rule 85 (var_name -> IDENT .)
    MINUS           reduce using rule 85 (var_name -> IDENT .)
    PERIOD          reduce using rule 85 (var_name -> IDENT .)
    END             reduce using rule 85 (var_name -> IDENT .)
    SEMICOLON       reduce using rule 85 (var_name -> IDENT .)
    ELSE            reduce using rule 85 (var_name -> IDENT .)
    EQ              reduce using rule 85 (var_name -> IDENT .)
    NEQ             reduce using rule 85 (var_name -> IDENT .)
    LT              reduce using rule 85 (var_name -> IDENT .)
    LE              reduce using rule 85 (var_name -> IDENT .)
    GT              reduce using rule 85 (var_name -> IDENT .)
    GE              reduce using rule 85 (var_name -> IDENT .)
    RPAREN          reduce using rule 85 (var_name -> IDENT .)
    COMMA           reduce using rule 85 (var_name -> IDENT .)
    THEN            reduce using rule 85 (var_name -> IDENT .)
    DO              reduce using rule 85 (var_name -> IDENT .)
    TO              reduce using rule 85 (var_name -> IDENT .)
    LPAREN          shift and go to state 89


state 65

    (39) assignment_statement -> IDENT ASSIGN expression .
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    PERIOD          reduce using rule 39 (assignment_statement -> IDENT ASSIGN expression .)
    END             reduce using rule 39 (assignment_statement -> IDENT ASSIGN expression .)
    SEMICOLON       reduce using rule 39 (assignment_statement -> IDENT ASSIGN expression .)
    ELSE            reduce using rule 39 (assignment_statement -> IDENT ASSIGN expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 66

    (72) expression -> term .
    (77) term -> term . MULT factor
    (78) term -> term . DIV factor

    PLUS            reduce using rule 72 (expression -> term .)
    MINUS           reduce using rule 72 (expression -> term .)
    PERIOD          reduce using rule 72 (expression -> term .)
    END             reduce using rule 72 (expression -> term .)
    SEMICOLON       reduce using rule 72 (expression -> term .)
    ELSE            reduce using rule 72 (expression -> term .)
    EQ              reduce using rule 72 (expression -> term .)
    NEQ             reduce using rule 72 (expression -> term .)
    LT              reduce using rule 72 (expression -> term .)
    LE              reduce using rule 72 (expression -> term .)
    GT              reduce using rule 72 (expression -> term .)
    GE              reduce using rule 72 (expression -> term .)
    RPAREN          reduce using rule 72 (expression -> term .)
    COMMA           reduce using rule 72 (expression -> term .)
    THEN            reduce using rule 72 (expression -> term .)
    DO              reduce using rule 72 (expression -> term .)
    TO              reduce using rule 72 (expression -> term .)
    MULT            shift and go to state 92
    DIV             shift and go to state 93


state 67

    (73) expression -> MINUS . term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    term                           shift and go to state 94
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 68

    (76) term -> factor .

    MULT            reduce using rule 76 (term -> factor .)
    DIV             reduce using rule 76 (term -> factor .)
    PLUS            reduce using rule 76 (term -> factor .)
    MINUS           reduce using rule 76 (term -> factor .)
    PERIOD          reduce using rule 76 (term -> factor .)
    END             reduce using rule 76 (term -> factor .)
    SEMICOLON       reduce using rule 76 (term -> factor .)
    ELSE            reduce using rule 76 (term -> factor .)
    EQ              reduce using rule 76 (term -> factor .)
    NEQ             reduce using rule 76 (term -> factor .)
    LT              reduce using rule 76 (term -> factor .)
    LE              reduce using rule 76 (term -> factor .)
    GT              reduce using rule 76 (term -> factor .)
    GE              reduce using rule 76 (term -> factor .)
    RPAREN          reduce using rule 76 (term -> factor .)
    COMMA           reduce using rule 76 (term -> factor .)
    THEN            reduce using rule 76 (term -> factor .)
    DO              reduce using rule 76 (term -> factor .)
    TO              reduce using rule 76 (term -> factor .)


state 69

    (79) factor -> var_name .

    MULT            reduce using rule 79 (factor -> var_name .)
    DIV             reduce using rule 79 (factor -> var_name .)
    PLUS            reduce using rule 79 (factor -> var_name .)
    MINUS           reduce using rule 79 (factor -> var_name .)
    PERIOD          reduce using rule 79 (factor -> var_name .)
    END             reduce using rule 79 (factor -> var_name .)
    SEMICOLON       reduce using rule 79 (factor -> var_name .)
    ELSE            reduce using rule 79 (factor -> var_name .)
    EQ              reduce using rule 79 (factor -> var_name .)
    NEQ             reduce using rule 79 (factor -> var_name .)
    LT              reduce using rule 79 (factor -> var_name .)
    LE              reduce using rule 79 (factor -> var_name .)
    GT              reduce using rule 79 (factor -> var_name .)
    GE              reduce using rule 79 (factor -> var_name .)
    RPAREN          reduce using rule 79 (factor -> var_name .)
    COMMA           reduce using rule 79 (factor -> var_name .)
    THEN            reduce using rule 79 (factor -> var_name .)
    DO              reduce using rule 79 (factor -> var_name .)
    TO              reduce using rule 79 (factor -> var_name .)


state 70

    (80) factor -> number .

    MULT            reduce using rule 80 (factor -> number .)
    DIV             reduce using rule 80 (factor -> number .)
    PLUS            reduce using rule 80 (factor -> number .)
    MINUS           reduce using rule 80 (factor -> number .)
    PERIOD          reduce using rule 80 (factor -> number .)
    END             reduce using rule 80 (factor -> number .)
    SEMICOLON       reduce using rule 80 (factor -> number .)
    ELSE            reduce using rule 80 (factor -> number .)
    EQ              reduce using rule 80 (factor -> number .)
    NEQ             reduce using rule 80 (factor -> number .)
    LT              reduce using rule 80 (factor -> number .)
    LE              reduce using rule 80 (factor -> number .)
    GT              reduce using rule 80 (factor -> number .)
    GE              reduce using rule 80 (factor -> number .)
    RPAREN          reduce using rule 80 (factor -> number .)
    COMMA           reduce using rule 80 (factor -> number .)
    THEN            reduce using rule 80 (factor -> number .)
    DO              reduce using rule 80 (factor -> number .)
    TO              reduce using rule 80 (factor -> number .)


state 71

    (81) factor -> LPAREN . expression RPAREN
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 95
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 72

    (82) factor -> func_call .

    MULT            reduce using rule 82 (factor -> func_call .)
    DIV             reduce using rule 82 (factor -> func_call .)
    PLUS            reduce using rule 82 (factor -> func_call .)
    MINUS           reduce using rule 82 (factor -> func_call .)
    PERIOD          reduce using rule 82 (factor -> func_call .)
    END             reduce using rule 82 (factor -> func_call .)
    SEMICOLON       reduce using rule 82 (factor -> func_call .)
    ELSE            reduce using rule 82 (factor -> func_call .)
    EQ              reduce using rule 82 (factor -> func_call .)
    NEQ             reduce using rule 82 (factor -> func_call .)
    LT              reduce using rule 82 (factor -> func_call .)
    LE              reduce using rule 82 (factor -> func_call .)
    GT              reduce using rule 82 (factor -> func_call .)
    GE              reduce using rule 82 (factor -> func_call .)
    RPAREN          reduce using rule 82 (factor -> func_call .)
    COMMA           reduce using rule 82 (factor -> func_call .)
    THEN            reduce using rule 82 (factor -> func_call .)
    DO              reduce using rule 82 (factor -> func_call .)
    TO              reduce using rule 82 (factor -> func_call .)


state 73

    (86) number -> NUMBER .

    MULT            reduce using rule 86 (number -> NUMBER .)
    DIV             reduce using rule 86 (number -> NUMBER .)
    PLUS            reduce using rule 86 (number -> NUMBER .)
    MINUS           reduce using rule 86 (number -> NUMBER .)
    PERIOD          reduce using rule 86 (number -> NUMBER .)
    END             reduce using rule 86 (number -> NUMBER .)
    SEMICOLON       reduce using rule 86 (number -> NUMBER .)
    ELSE            reduce using rule 86 (number -> NUMBER .)
    EQ              reduce using rule 86 (number -> NUMBER .)
    NEQ             reduce using rule 86 (number -> NUMBER .)
    LT              reduce using rule 86 (number -> NUMBER .)
    LE              reduce using rule 86 (number -> NUMBER .)
    GT              reduce using rule 86 (number -> NUMBER .)
    GE              reduce using rule 86 (number -> NUMBER .)
    RPAREN          reduce using rule 86 (number -> NUMBER .)
    COMMA           reduce using rule 86 (number -> NUMBER .)
    THEN            reduce using rule 86 (number -> NUMBER .)
    DO              reduce using rule 86 (number -> NUMBER .)
    TO              reduce using rule 86 (number -> NUMBER .)


state 74

    (41) if_statement -> act_generate_labels IF condition . act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (43) act_insert_br -> .

    THEN            reduce using rule 43 (act_insert_br -> .)

    act_insert_br                  shift and go to state 96

state 75

    (66) condition -> expression . EQ expression
    (67) condition -> expression . NEQ expression
    (68) condition -> expression . LT expression
    (69) condition -> expression . LE expression
    (70) condition -> expression . GT expression
    (71) condition -> expression . GE expression
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    EQ              shift and go to state 97
    NEQ             shift and go to state 98
    LT              shift and go to state 99
    LE              shift and go to state 100
    GT              shift and go to state 101
    GE              shift and go to state 102
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 76

    (51) while_statement -> WHILE act_generate_labels act_insert_jump1 . act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (44) act_insert_label1 -> .

    MINUS           reduce using rule 44 (act_insert_label1 -> .)
    LPAREN          reduce using rule 44 (act_insert_label1 -> .)
    IDENT           reduce using rule 44 (act_insert_label1 -> .)
    NUMBER          reduce using rule 44 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 103

state 77

    (53) for_statement -> FOR act_generate_labels IDENT . act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (62) act_lookup_prev_ident -> .

    ASSIGN          reduce using rule 62 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 104

state 78

    (59) proc_call_statement -> proc_call_name LPAREN RPAREN .

    PERIOD          reduce using rule 59 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    END             reduce using rule 59 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    SEMICOLON       reduce using rule 59 (proc_call_statement -> proc_call_name LPAREN RPAREN .)
    ELSE            reduce using rule 59 (proc_call_statement -> proc_call_name LPAREN RPAREN .)


state 79

    (60) proc_call_statement -> proc_call_name LPAREN arg_list . RPAREN
    (57) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 105
    COMMA           shift and go to state 106


state 80

    (56) arg_list -> expression .
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    RPAREN          reduce using rule 56 (arg_list -> expression .)
    COMMA           reduce using rule 56 (arg_list -> expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 81

    (61) block_statement -> BEGIN statement_list END .

    PERIOD          reduce using rule 61 (block_statement -> BEGIN statement_list END .)
    END             reduce using rule 61 (block_statement -> BEGIN statement_list END .)
    SEMICOLON       reduce using rule 61 (block_statement -> BEGIN statement_list END .)
    ELSE            reduce using rule 61 (block_statement -> BEGIN statement_list END .)


state 82

    (28) statement_list -> statement_list SEMICOLON . statement
    (30) statement -> . assignment_statement
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . proc_call_statement
    (35) statement -> . null_statement
    (36) statement -> . block_statement
    (37) statement -> . read_statement
    (38) statement -> . write_statement
    (39) assignment_statement -> . IDENT ASSIGN expression
    (41) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (51) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (53) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (59) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (60) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (65) null_statement -> .
    (61) block_statement -> . BEGIN statement_list END
    (63) read_statement -> . READ LPAREN IDENT RPAREN
    (64) write_statement -> . WRITE LPAREN expression RPAREN
    (42) act_generate_labels -> .
    (58) proc_call_name -> . IDENT

    IDENT           shift and go to state 39
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    END             reduce using rule 65 (null_statement -> .)
    SEMICOLON       reduce using rule 65 (null_statement -> .)
    BEGIN           shift and go to state 44
    READ            shift and go to state 45
    WRITE           shift and go to state 46
    IF              reduce using rule 42 (act_generate_labels -> .)

    statement                      shift and go to state 107
    assignment_statement           shift and go to state 30
    if_statement                   shift and go to state 31
    while_statement                shift and go to state 32
    for_statement                  shift and go to state 33
    proc_call_statement            shift and go to state 34
    null_statement                 shift and go to state 35
    block_statement                shift and go to state 36
    read_statement                 shift and go to state 37
    write_statement                shift and go to state 38
    act_generate_labels            shift and go to state 40
    proc_call_name                 shift and go to state 43

state 83

    (63) read_statement -> READ LPAREN IDENT . RPAREN

    RPAREN          shift and go to state 108


state 84

    (64) write_statement -> WRITE LPAREN expression . RPAREN
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    RPAREN          shift and go to state 109
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 85

    (21) proc_decl -> PROCEDURE proc_name LPAREN proc_act2 RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 110


state 86

    (22) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list . act_proc_args_done RPAREN SEMICOLON inblock
    (88) id_list -> id_list . COMMA IDENT
    (24) act_proc_args_done -> .

    COMMA           shift and go to state 28
    RPAREN          reduce using rule 24 (act_proc_args_done -> .)

    act_proc_args_done             shift and go to state 111

state 87

    (15) func_decl -> FUNCTION func_name LPAREN func_act2 RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 112


state 88

    (16) func_decl -> FUNCTION func_name LPAREN act_func_args_set id_list . act_func_args_done RPAREN SEMICOLON inblock
    (88) id_list -> id_list . COMMA IDENT
    (20) act_func_args_done -> .

    COMMA           shift and go to state 28
    RPAREN          reduce using rule 20 (act_func_args_done -> .)

    act_func_args_done             shift and go to state 113

state 89

    (83) func_call -> IDENT LPAREN . RPAREN
    (84) func_call -> IDENT LPAREN . arg_list RPAREN
    (56) arg_list -> . expression
    (57) arg_list -> . arg_list COMMA expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    RPAREN          shift and go to state 114
    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    arg_list                       shift and go to state 115
    expression                     shift and go to state 80
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 90

    (74) expression -> expression PLUS . term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    term                           shift and go to state 116
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 91

    (75) expression -> expression MINUS . term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    term                           shift and go to state 117
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 92

    (77) term -> term MULT . factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    factor                         shift and go to state 118
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 93

    (78) term -> term DIV . factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    factor                         shift and go to state 119
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 94

    (73) expression -> MINUS term .
    (77) term -> term . MULT factor
    (78) term -> term . DIV factor

    PLUS            reduce using rule 73 (expression -> MINUS term .)
    MINUS           reduce using rule 73 (expression -> MINUS term .)
    PERIOD          reduce using rule 73 (expression -> MINUS term .)
    END             reduce using rule 73 (expression -> MINUS term .)
    SEMICOLON       reduce using rule 73 (expression -> MINUS term .)
    ELSE            reduce using rule 73 (expression -> MINUS term .)
    EQ              reduce using rule 73 (expression -> MINUS term .)
    NEQ             reduce using rule 73 (expression -> MINUS term .)
    LT              reduce using rule 73 (expression -> MINUS term .)
    LE              reduce using rule 73 (expression -> MINUS term .)
    GT              reduce using rule 73 (expression -> MINUS term .)
    GE              reduce using rule 73 (expression -> MINUS term .)
    RPAREN          reduce using rule 73 (expression -> MINUS term .)
    COMMA           reduce using rule 73 (expression -> MINUS term .)
    THEN            reduce using rule 73 (expression -> MINUS term .)
    DO              reduce using rule 73 (expression -> MINUS term .)
    TO              reduce using rule 73 (expression -> MINUS term .)
    MULT            shift and go to state 92
    DIV             shift and go to state 93


state 95

    (81) factor -> LPAREN expression . RPAREN
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    RPAREN          shift and go to state 120
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 96

    (41) if_statement -> act_generate_labels IF condition act_insert_br . THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3

    THEN            shift and go to state 121


state 97

    (66) condition -> expression EQ . expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 122
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 98

    (67) condition -> expression NEQ . expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 123
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 99

    (68) condition -> expression LT . expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 124
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 100

    (69) condition -> expression LE . expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 125
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 101

    (70) condition -> expression GT . expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 126
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 102

    (71) condition -> expression GE . expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 127
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 103

    (51) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 . condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (66) condition -> . expression EQ expression
    (67) condition -> . expression NEQ expression
    (68) condition -> . expression LT expression
    (69) condition -> . expression LE expression
    (70) condition -> . expression GT expression
    (71) condition -> . expression GE expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    condition                      shift and go to state 128
    expression                     shift and go to state 75
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 104

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident . ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    ASSIGN          shift and go to state 129


state 105

    (60) proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .

    PERIOD          reduce using rule 60 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)
    END             reduce using rule 60 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)
    SEMICOLON       reduce using rule 60 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)
    ELSE            reduce using rule 60 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)


state 106

    (57) arg_list -> arg_list COMMA . expression
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 130
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 107

    (28) statement_list -> statement_list SEMICOLON statement .

    END             reduce using rule 28 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 28 (statement_list -> statement_list SEMICOLON statement .)


state 108

    (63) read_statement -> READ LPAREN IDENT RPAREN .

    PERIOD          reduce using rule 63 (read_statement -> READ LPAREN IDENT RPAREN .)
    END             reduce using rule 63 (read_statement -> READ LPAREN IDENT RPAREN .)
    SEMICOLON       reduce using rule 63 (read_statement -> READ LPAREN IDENT RPAREN .)
    ELSE            reduce using rule 63 (read_statement -> READ LPAREN IDENT RPAREN .)


state 109

    (64) write_statement -> WRITE LPAREN expression RPAREN .

    PERIOD          reduce using rule 64 (write_statement -> WRITE LPAREN expression RPAREN .)
    END             reduce using rule 64 (write_statement -> WRITE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 64 (write_statement -> WRITE LPAREN expression RPAREN .)
    ELSE            reduce using rule 64 (write_statement -> WRITE LPAREN expression RPAREN .)


state 110

    (21) proc_decl -> PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON . inblock
    (27) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 131
    var_decl_part                  shift and go to state 132
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 111

    (22) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 133


state 112

    (15) func_decl -> FUNCTION func_name LPAREN func_act2 RPAREN SEMICOLON . inblock
    (27) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 134
    var_decl_part                  shift and go to state 132
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 113

    (16) func_decl -> FUNCTION func_name LPAREN act_func_args_set id_list act_func_args_done . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 135


state 114

    (83) func_call -> IDENT LPAREN RPAREN .

    MULT            reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    DIV             reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    PLUS            reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    MINUS           reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    PERIOD          reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    END             reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    SEMICOLON       reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    ELSE            reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    EQ              reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    NEQ             reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    LT              reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    LE              reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    GT              reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    GE              reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    RPAREN          reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    COMMA           reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    THEN            reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    DO              reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)
    TO              reduce using rule 83 (func_call -> IDENT LPAREN RPAREN .)


state 115

    (84) func_call -> IDENT LPAREN arg_list . RPAREN
    (57) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 136
    COMMA           shift and go to state 106


state 116

    (74) expression -> expression PLUS term .
    (77) term -> term . MULT factor
    (78) term -> term . DIV factor

    PLUS            reduce using rule 74 (expression -> expression PLUS term .)
    MINUS           reduce using rule 74 (expression -> expression PLUS term .)
    PERIOD          reduce using rule 74 (expression -> expression PLUS term .)
    END             reduce using rule 74 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 74 (expression -> expression PLUS term .)
    ELSE            reduce using rule 74 (expression -> expression PLUS term .)
    EQ              reduce using rule 74 (expression -> expression PLUS term .)
    NEQ             reduce using rule 74 (expression -> expression PLUS term .)
    LT              reduce using rule 74 (expression -> expression PLUS term .)
    LE              reduce using rule 74 (expression -> expression PLUS term .)
    GT              reduce using rule 74 (expression -> expression PLUS term .)
    GE              reduce using rule 74 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 74 (expression -> expression PLUS term .)
    COMMA           reduce using rule 74 (expression -> expression PLUS term .)
    THEN            reduce using rule 74 (expression -> expression PLUS term .)
    DO              reduce using rule 74 (expression -> expression PLUS term .)
    TO              reduce using rule 74 (expression -> expression PLUS term .)
    MULT            shift and go to state 92
    DIV             shift and go to state 93


state 117

    (75) expression -> expression MINUS term .
    (77) term -> term . MULT factor
    (78) term -> term . DIV factor

    PLUS            reduce using rule 75 (expression -> expression MINUS term .)
    MINUS           reduce using rule 75 (expression -> expression MINUS term .)
    PERIOD          reduce using rule 75 (expression -> expression MINUS term .)
    END             reduce using rule 75 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 75 (expression -> expression MINUS term .)
    ELSE            reduce using rule 75 (expression -> expression MINUS term .)
    EQ              reduce using rule 75 (expression -> expression MINUS term .)
    NEQ             reduce using rule 75 (expression -> expression MINUS term .)
    LT              reduce using rule 75 (expression -> expression MINUS term .)
    LE              reduce using rule 75 (expression -> expression MINUS term .)
    GT              reduce using rule 75 (expression -> expression MINUS term .)
    GE              reduce using rule 75 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 75 (expression -> expression MINUS term .)
    COMMA           reduce using rule 75 (expression -> expression MINUS term .)
    THEN            reduce using rule 75 (expression -> expression MINUS term .)
    DO              reduce using rule 75 (expression -> expression MINUS term .)
    TO              reduce using rule 75 (expression -> expression MINUS term .)
    MULT            shift and go to state 92
    DIV             shift and go to state 93


state 118

    (77) term -> term MULT factor .

    MULT            reduce using rule 77 (term -> term MULT factor .)
    DIV             reduce using rule 77 (term -> term MULT factor .)
    PLUS            reduce using rule 77 (term -> term MULT factor .)
    MINUS           reduce using rule 77 (term -> term MULT factor .)
    PERIOD          reduce using rule 77 (term -> term MULT factor .)
    END             reduce using rule 77 (term -> term MULT factor .)
    SEMICOLON       reduce using rule 77 (term -> term MULT factor .)
    ELSE            reduce using rule 77 (term -> term MULT factor .)
    EQ              reduce using rule 77 (term -> term MULT factor .)
    NEQ             reduce using rule 77 (term -> term MULT factor .)
    LT              reduce using rule 77 (term -> term MULT factor .)
    LE              reduce using rule 77 (term -> term MULT factor .)
    GT              reduce using rule 77 (term -> term MULT factor .)
    GE              reduce using rule 77 (term -> term MULT factor .)
    RPAREN          reduce using rule 77 (term -> term MULT factor .)
    COMMA           reduce using rule 77 (term -> term MULT factor .)
    THEN            reduce using rule 77 (term -> term MULT factor .)
    DO              reduce using rule 77 (term -> term MULT factor .)
    TO              reduce using rule 77 (term -> term MULT factor .)


state 119

    (78) term -> term DIV factor .

    MULT            reduce using rule 78 (term -> term DIV factor .)
    DIV             reduce using rule 78 (term -> term DIV factor .)
    PLUS            reduce using rule 78 (term -> term DIV factor .)
    MINUS           reduce using rule 78 (term -> term DIV factor .)
    PERIOD          reduce using rule 78 (term -> term DIV factor .)
    END             reduce using rule 78 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 78 (term -> term DIV factor .)
    ELSE            reduce using rule 78 (term -> term DIV factor .)
    EQ              reduce using rule 78 (term -> term DIV factor .)
    NEQ             reduce using rule 78 (term -> term DIV factor .)
    LT              reduce using rule 78 (term -> term DIV factor .)
    LE              reduce using rule 78 (term -> term DIV factor .)
    GT              reduce using rule 78 (term -> term DIV factor .)
    GE              reduce using rule 78 (term -> term DIV factor .)
    RPAREN          reduce using rule 78 (term -> term DIV factor .)
    COMMA           reduce using rule 78 (term -> term DIV factor .)
    THEN            reduce using rule 78 (term -> term DIV factor .)
    DO              reduce using rule 78 (term -> term DIV factor .)
    TO              reduce using rule 78 (term -> term DIV factor .)


state 120

    (81) factor -> LPAREN expression RPAREN .

    MULT            reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    PERIOD          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    THEN            reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 81 (factor -> LPAREN expression RPAREN .)


state 121

    (41) if_statement -> act_generate_labels IF condition act_insert_br THEN . act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (44) act_insert_label1 -> .

    IDENT           reduce using rule 44 (act_insert_label1 -> .)
    WHILE           reduce using rule 44 (act_insert_label1 -> .)
    FOR             reduce using rule 44 (act_insert_label1 -> .)
    BEGIN           reduce using rule 44 (act_insert_label1 -> .)
    READ            reduce using rule 44 (act_insert_label1 -> .)
    WRITE           reduce using rule 44 (act_insert_label1 -> .)
    ELSE            reduce using rule 44 (act_insert_label1 -> .)
    IF              reduce using rule 44 (act_insert_label1 -> .)
    PERIOD          reduce using rule 44 (act_insert_label1 -> .)
    END             reduce using rule 44 (act_insert_label1 -> .)
    SEMICOLON       reduce using rule 44 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 137

state 122

    (66) condition -> expression EQ expression .
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    THEN            reduce using rule 66 (condition -> expression EQ expression .)
    DO              reduce using rule 66 (condition -> expression EQ expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 123

    (67) condition -> expression NEQ expression .
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    THEN            reduce using rule 67 (condition -> expression NEQ expression .)
    DO              reduce using rule 67 (condition -> expression NEQ expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 124

    (68) condition -> expression LT expression .
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    THEN            reduce using rule 68 (condition -> expression LT expression .)
    DO              reduce using rule 68 (condition -> expression LT expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 125

    (69) condition -> expression LE expression .
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    THEN            reduce using rule 69 (condition -> expression LE expression .)
    DO              reduce using rule 69 (condition -> expression LE expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 126

    (70) condition -> expression GT expression .
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    THEN            reduce using rule 70 (condition -> expression GT expression .)
    DO              reduce using rule 70 (condition -> expression GT expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 127

    (71) condition -> expression GE expression .
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    THEN            reduce using rule 71 (condition -> expression GE expression .)
    DO              reduce using rule 71 (condition -> expression GE expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 128

    (51) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition . act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (52) act_insert_br_while -> .

    DO              reduce using rule 52 (act_insert_br_while -> .)

    act_insert_br_while            shift and go to state 138

state 129

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN . expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 139
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 130

    (57) arg_list -> arg_list COMMA expression .
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term

    RPAREN          reduce using rule 57 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 57 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 131

    (21) proc_decl -> PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 21 (proc_decl -> PROCEDURE proc_name LPAREN proc_act2 RPAREN SEMICOLON inblock .)


state 132

    (27) inblock -> var_decl_part . statement
    (30) statement -> . assignment_statement
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . proc_call_statement
    (35) statement -> . null_statement
    (36) statement -> . block_statement
    (37) statement -> . read_statement
    (38) statement -> . write_statement
    (39) assignment_statement -> . IDENT ASSIGN expression
    (41) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (51) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (53) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (59) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (60) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (65) null_statement -> .
    (61) block_statement -> . BEGIN statement_list END
    (63) read_statement -> . READ LPAREN IDENT RPAREN
    (64) write_statement -> . WRITE LPAREN expression RPAREN
    (42) act_generate_labels -> .
    (58) proc_call_name -> . IDENT

    IDENT           shift and go to state 39
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    SEMICOLON       reduce using rule 65 (null_statement -> .)
    BEGIN           shift and go to state 44
    READ            shift and go to state 45
    WRITE           shift and go to state 46
    IF              reduce using rule 42 (act_generate_labels -> .)

    statement                      shift and go to state 140
    assignment_statement           shift and go to state 30
    if_statement                   shift and go to state 31
    while_statement                shift and go to state 32
    for_statement                  shift and go to state 33
    proc_call_statement            shift and go to state 34
    null_statement                 shift and go to state 35
    block_statement                shift and go to state 36
    read_statement                 shift and go to state 37
    write_statement                shift and go to state 38
    act_generate_labels            shift and go to state 40
    proc_call_name                 shift and go to state 43

state 133

    (22) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 141


state 134

    (15) func_decl -> FUNCTION func_name LPAREN func_act2 RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 15 (func_decl -> FUNCTION func_name LPAREN func_act2 RPAREN SEMICOLON inblock .)


state 135

    (16) func_decl -> FUNCTION func_name LPAREN act_func_args_set id_list act_func_args_done RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 142


state 136

    (84) func_call -> IDENT LPAREN arg_list RPAREN .

    MULT            reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    DIV             reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    PERIOD          reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    END             reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    SEMICOLON       reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    ELSE            reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    EQ              reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    NEQ             reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    LT              reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    LE              reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    GT              reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    GE              reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    THEN            reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    DO              reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)
    TO              reduce using rule 84 (func_call -> IDENT LPAREN arg_list RPAREN .)


state 137

    (41) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 . statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (30) statement -> . assignment_statement
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . proc_call_statement
    (35) statement -> . null_statement
    (36) statement -> . block_statement
    (37) statement -> . read_statement
    (38) statement -> . write_statement
    (39) assignment_statement -> . IDENT ASSIGN expression
    (41) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (51) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (53) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (59) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (60) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (65) null_statement -> .
    (61) block_statement -> . BEGIN statement_list END
    (63) read_statement -> . READ LPAREN IDENT RPAREN
    (64) write_statement -> . WRITE LPAREN expression RPAREN
    (42) act_generate_labels -> .
    (58) proc_call_name -> . IDENT

    IDENT           shift and go to state 39
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    ELSE            reduce using rule 65 (null_statement -> .)
    PERIOD          reduce using rule 65 (null_statement -> .)
    END             reduce using rule 65 (null_statement -> .)
    SEMICOLON       reduce using rule 65 (null_statement -> .)
    BEGIN           shift and go to state 44
    READ            shift and go to state 45
    WRITE           shift and go to state 46
    IF              reduce using rule 42 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 40
    statement                      shift and go to state 143
    assignment_statement           shift and go to state 30
    if_statement                   shift and go to state 31
    while_statement                shift and go to state 32
    for_statement                  shift and go to state 33
    proc_call_statement            shift and go to state 34
    null_statement                 shift and go to state 35
    block_statement                shift and go to state 36
    read_statement                 shift and go to state 37
    write_statement                shift and go to state 38
    proc_call_name                 shift and go to state 43

state 138

    (51) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while . DO act_insert_label2 statement act_insert_jump1 act_insert_label3

    DO              shift and go to state 144


state 139

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression . act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term
    (40) act_assign_ident -> .

    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TO              reduce using rule 40 (act_assign_ident -> .)

    act_assign_ident               shift and go to state 145

state 140

    (27) inblock -> var_decl_part statement .

    SEMICOLON       reduce using rule 27 (inblock -> var_decl_part statement .)


state 141

    (22) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON . inblock
    (27) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 146
    var_decl_part                  shift and go to state 132
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 142

    (16) func_decl -> FUNCTION func_name LPAREN act_func_args_set id_list act_func_args_done RPAREN SEMICOLON . inblock
    (27) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 147
    var_decl_part                  shift and go to state 132
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 143

    (41) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement . act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (48) act_insert_jump3 -> .

    ELSE            reduce using rule 48 (act_insert_jump3 -> .)
    PERIOD          reduce using rule 48 (act_insert_jump3 -> .)
    END             reduce using rule 48 (act_insert_jump3 -> .)
    SEMICOLON       reduce using rule 48 (act_insert_jump3 -> .)

    act_insert_jump3               shift and go to state 148

state 144

    (51) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO . act_insert_label2 statement act_insert_jump1 act_insert_label3
    (45) act_insert_label2 -> .

    IDENT           reduce using rule 45 (act_insert_label2 -> .)
    WHILE           reduce using rule 45 (act_insert_label2 -> .)
    FOR             reduce using rule 45 (act_insert_label2 -> .)
    BEGIN           reduce using rule 45 (act_insert_label2 -> .)
    READ            reduce using rule 45 (act_insert_label2 -> .)
    WRITE           reduce using rule 45 (act_insert_label2 -> .)
    IF              reduce using rule 45 (act_insert_label2 -> .)
    PERIOD          reduce using rule 45 (act_insert_label2 -> .)
    END             reduce using rule 45 (act_insert_label2 -> .)
    SEMICOLON       reduce using rule 45 (act_insert_label2 -> .)
    ELSE            reduce using rule 45 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 149

state 145

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident . act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (47) act_insert_jump1 -> .

    TO              reduce using rule 47 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 150

state 146

    (22) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 22 (proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock .)


state 147

    (16) func_decl -> FUNCTION func_name LPAREN act_func_args_set id_list act_func_args_done RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 16 (func_decl -> FUNCTION func_name LPAREN act_func_args_set id_list act_func_args_done RPAREN SEMICOLON inblock .)


state 148

    (41) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 . act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (45) act_insert_label2 -> .

    ELSE            reduce using rule 45 (act_insert_label2 -> .)
    PERIOD          reduce using rule 45 (act_insert_label2 -> .)
    END             reduce using rule 45 (act_insert_label2 -> .)
    SEMICOLON       reduce using rule 45 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 151

state 149

    (51) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 . statement act_insert_jump1 act_insert_label3
    (30) statement -> . assignment_statement
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . proc_call_statement
    (35) statement -> . null_statement
    (36) statement -> . block_statement
    (37) statement -> . read_statement
    (38) statement -> . write_statement
    (39) assignment_statement -> . IDENT ASSIGN expression
    (41) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (51) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (53) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (59) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (60) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (65) null_statement -> .
    (61) block_statement -> . BEGIN statement_list END
    (63) read_statement -> . READ LPAREN IDENT RPAREN
    (64) write_statement -> . WRITE LPAREN expression RPAREN
    (42) act_generate_labels -> .
    (58) proc_call_name -> . IDENT

    IDENT           shift and go to state 39
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    ELSE            reduce using rule 65 (null_statement -> .)
    PERIOD          reduce using rule 65 (null_statement -> .)
    END             reduce using rule 65 (null_statement -> .)
    SEMICOLON       reduce using rule 65 (null_statement -> .)
    BEGIN           shift and go to state 44
    READ            shift and go to state 45
    WRITE           shift and go to state 46
    IF              reduce using rule 42 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 40
    statement                      shift and go to state 152
    assignment_statement           shift and go to state 30
    if_statement                   shift and go to state 31
    while_statement                shift and go to state 32
    for_statement                  shift and go to state 33
    proc_call_statement            shift and go to state 34
    null_statement                 shift and go to state 35
    block_statement                shift and go to state 36
    read_statement                 shift and go to state 37
    write_statement                shift and go to state 38
    proc_call_name                 shift and go to state 43

state 150

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 . act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (44) act_insert_label1 -> .

    TO              reduce using rule 44 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 153

state 151

    (41) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 . else_statement act_insert_jump3 act_insert_label3
    (49) else_statement -> . ELSE statement
    (50) else_statement -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 155
    PERIOD          reduce using rule 50 (else_statement -> .)
    END             reduce using rule 50 (else_statement -> .)
    SEMICOLON       reduce using rule 50 (else_statement -> .)

  ! ELSE            [ reduce using rule 50 (else_statement -> .) ]

    else_statement                 shift and go to state 154

state 152

    (51) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement . act_insert_jump1 act_insert_label3
    (47) act_insert_jump1 -> .

    PERIOD          reduce using rule 47 (act_insert_jump1 -> .)
    END             reduce using rule 47 (act_insert_jump1 -> .)
    SEMICOLON       reduce using rule 47 (act_insert_jump1 -> .)
    ELSE            reduce using rule 47 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 156

state 153

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 . TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    TO              shift and go to state 157


state 154

    (41) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement . act_insert_jump3 act_insert_label3
    (48) act_insert_jump3 -> .

    PERIOD          reduce using rule 48 (act_insert_jump3 -> .)
    END             reduce using rule 48 (act_insert_jump3 -> .)
    SEMICOLON       reduce using rule 48 (act_insert_jump3 -> .)
    ELSE            reduce using rule 48 (act_insert_jump3 -> .)

    act_insert_jump3               shift and go to state 158

state 155

    (49) else_statement -> ELSE . statement
    (30) statement -> . assignment_statement
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . proc_call_statement
    (35) statement -> . null_statement
    (36) statement -> . block_statement
    (37) statement -> . read_statement
    (38) statement -> . write_statement
    (39) assignment_statement -> . IDENT ASSIGN expression
    (41) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (51) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (53) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (59) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (60) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (65) null_statement -> .
    (61) block_statement -> . BEGIN statement_list END
    (63) read_statement -> . READ LPAREN IDENT RPAREN
    (64) write_statement -> . WRITE LPAREN expression RPAREN
    (42) act_generate_labels -> .
    (58) proc_call_name -> . IDENT

    IDENT           shift and go to state 39
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    ELSE            reduce using rule 65 (null_statement -> .)
    PERIOD          reduce using rule 65 (null_statement -> .)
    END             reduce using rule 65 (null_statement -> .)
    SEMICOLON       reduce using rule 65 (null_statement -> .)
    BEGIN           shift and go to state 44
    READ            shift and go to state 45
    WRITE           shift and go to state 46
    IF              reduce using rule 42 (act_generate_labels -> .)

    statement                      shift and go to state 159
    assignment_statement           shift and go to state 30
    if_statement                   shift and go to state 31
    while_statement                shift and go to state 32
    for_statement                  shift and go to state 33
    proc_call_statement            shift and go to state 34
    null_statement                 shift and go to state 35
    block_statement                shift and go to state 36
    read_statement                 shift and go to state 37
    write_statement                shift and go to state 38
    act_generate_labels            shift and go to state 40
    proc_call_name                 shift and go to state 43

state 156

    (51) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 . act_insert_label3
    (46) act_insert_label3 -> .

    PERIOD          reduce using rule 46 (act_insert_label3 -> .)
    END             reduce using rule 46 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 46 (act_insert_label3 -> .)
    ELSE            reduce using rule 46 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 160

state 157

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO . expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (72) expression -> . term
    (73) expression -> . MINUS term
    (74) expression -> . expression PLUS term
    (75) expression -> . expression MINUS term
    (76) term -> . factor
    (77) term -> . term MULT factor
    (78) term -> . term DIV factor
    (79) factor -> . var_name
    (80) factor -> . number
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . func_call
    (85) var_name -> . IDENT
    (86) number -> . NUMBER
    (83) func_call -> . IDENT LPAREN RPAREN
    (84) func_call -> . IDENT LPAREN arg_list RPAREN

    MINUS           shift and go to state 67
    LPAREN          shift and go to state 71
    IDENT           shift and go to state 64
    NUMBER          shift and go to state 73

    expression                     shift and go to state 161
    term                           shift and go to state 66
    factor                         shift and go to state 68
    var_name                       shift and go to state 69
    number                         shift and go to state 70
    func_call                      shift and go to state 72

state 158

    (41) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 . act_insert_label3
    (46) act_insert_label3 -> .

    PERIOD          reduce using rule 46 (act_insert_label3 -> .)
    END             reduce using rule 46 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 46 (act_insert_label3 -> .)
    ELSE            reduce using rule 46 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 162

state 159

    (49) else_statement -> ELSE statement .

    ELSE            reduce using rule 49 (else_statement -> ELSE statement .)
    PERIOD          reduce using rule 49 (else_statement -> ELSE statement .)
    END             reduce using rule 49 (else_statement -> ELSE statement .)
    SEMICOLON       reduce using rule 49 (else_statement -> ELSE statement .)


state 160

    (51) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .

    PERIOD          reduce using rule 51 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    END             reduce using rule 51 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    SEMICOLON       reduce using rule 51 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    ELSE            reduce using rule 51 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)


state 161

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression . act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (74) expression -> expression . PLUS term
    (75) expression -> expression . MINUS term
    (54) act_insert_br_for -> .

    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    DO              reduce using rule 54 (act_insert_br_for -> .)

    act_insert_br_for              shift and go to state 163

state 162

    (41) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .

    PERIOD          reduce using rule 41 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    END             reduce using rule 41 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    SEMICOLON       reduce using rule 41 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    ELSE            reduce using rule 41 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)


state 163

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for . act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (45) act_insert_label2 -> .

    DO              reduce using rule 45 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 164

state 164

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 . DO statement act_increment_itr act_insert_jump1 act_insert_label3

    DO              shift and go to state 165


state 165

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO . statement act_increment_itr act_insert_jump1 act_insert_label3
    (30) statement -> . assignment_statement
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . proc_call_statement
    (35) statement -> . null_statement
    (36) statement -> . block_statement
    (37) statement -> . read_statement
    (38) statement -> . write_statement
    (39) assignment_statement -> . IDENT ASSIGN expression
    (41) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (51) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (53) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (59) proc_call_statement -> . proc_call_name LPAREN RPAREN
    (60) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (65) null_statement -> .
    (61) block_statement -> . BEGIN statement_list END
    (63) read_statement -> . READ LPAREN IDENT RPAREN
    (64) write_statement -> . WRITE LPAREN expression RPAREN
    (42) act_generate_labels -> .
    (58) proc_call_name -> . IDENT

    IDENT           shift and go to state 39
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    ELSE            reduce using rule 65 (null_statement -> .)
    PERIOD          reduce using rule 65 (null_statement -> .)
    END             reduce using rule 65 (null_statement -> .)
    SEMICOLON       reduce using rule 65 (null_statement -> .)
    BEGIN           shift and go to state 44
    READ            shift and go to state 45
    WRITE           shift and go to state 46
    IF              reduce using rule 42 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 40
    statement                      shift and go to state 166
    assignment_statement           shift and go to state 30
    if_statement                   shift and go to state 31
    while_statement                shift and go to state 32
    for_statement                  shift and go to state 33
    proc_call_statement            shift and go to state 34
    null_statement                 shift and go to state 35
    block_statement                shift and go to state 36
    read_statement                 shift and go to state 37
    write_statement                shift and go to state 38
    proc_call_name                 shift and go to state 43

state 166

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement . act_increment_itr act_insert_jump1 act_insert_label3
    (55) act_increment_itr -> .

    PERIOD          reduce using rule 55 (act_increment_itr -> .)
    END             reduce using rule 55 (act_increment_itr -> .)
    SEMICOLON       reduce using rule 55 (act_increment_itr -> .)
    ELSE            reduce using rule 55 (act_increment_itr -> .)

    act_increment_itr              shift and go to state 167

state 167

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr . act_insert_jump1 act_insert_label3
    (47) act_insert_jump1 -> .

    PERIOD          reduce using rule 47 (act_insert_jump1 -> .)
    END             reduce using rule 47 (act_insert_jump1 -> .)
    SEMICOLON       reduce using rule 47 (act_insert_jump1 -> .)
    ELSE            reduce using rule 47 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 168

state 168

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 . act_insert_label3
    (46) act_insert_label3 -> .

    PERIOD          reduce using rule 46 (act_insert_label3 -> .)
    END             reduce using rule 46 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 46 (act_insert_label3 -> .)
    ELSE            reduce using rule 46 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 169

state 169

    (53) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .

    PERIOD          reduce using rule 53 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    END             reduce using rule 53 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    SEMICOLON       reduce using rule 53 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    ELSE            reduce using rule 53 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 151 resolved as shift
